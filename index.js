!function(e){var t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=103)}([function(e,t,n){"use strict";n(7),Object.assign(t,n(70),n(112),n(113),n(114),n(115),n(74),n(72),n(48),n(116),n(73),n(71))},function(e,t,n){(function(t){var n=function(e){return e&&e.Math==Math&&e};e.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof t&&t)||function(){return this}()||Function("return this")()}).call(this,n(105))},function(e,t,n){var r=n(1),s=n(63),i=n(9),o=n(64),a=n(77),c=n(119),u=s("wks"),l=r.Symbol,d=c?l:l&&l.withoutSetter||o;e.exports=function(e){return i(u,e)||(a&&i(l,e)?u[e]=l[e]:u[e]=d("Symbol."+e)),u[e]}},function(e,t,n){var r=n(8);e.exports=function(e){if(!r(e))throw TypeError(String(e)+" is not an object");return e}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){"use strict";e.exports={dom:n(122),html:n(23),load:n(127),View:n(143)}},function(e,t,n){"use strict";var r=n(95),s=Object.prototype.toString;function i(e){return"[object Array]"===s.call(e)}function o(e){return void 0===e}function a(e){return null!==e&&"object"==typeof e}function c(e){if("[object Object]"!==s.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function u(e){return"[object Function]"===s.call(e)}function l(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),i(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.call(null,e[s],s,e)}e.exports={isArray:i,isArrayBuffer:function(e){return"[object ArrayBuffer]"===s.call(e)},isBuffer:function(e){return null!==e&&!o(e)&&null!==e.constructor&&!o(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:a,isPlainObject:c,isUndefined:o,isDate:function(e){return"[object Date]"===s.call(e)},isFile:function(e){return"[object File]"===s.call(e)},isBlob:function(e){return"[object Blob]"===s.call(e)},isFunction:u,isStream:function(e){return a(e)&&u(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:l,merge:function e(){var t={};function n(n,r){c(t[r])&&c(n)?t[r]=e(t[r],n):c(n)?t[r]=e({},n):i(n)?t[r]=n.slice():t[r]=n}for(var r=0,s=arguments.length;r<s;r++)l(arguments[r],n);return t},extend:function(e,t,n){return l(t,(function(t,s){e[s]=n&&"function"==typeof t?r(t,n):t})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},function(e,t,n){var r=n(18),s=n(111);r({target:"Object",stat:!0,forced:Object.assign!==s},{assign:s})},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(4);e.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t,n){var r=n(10),s=n(12),i=n(38);e.exports=r?function(e,t,n){return s.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(10),s=n(62),i=n(3),o=n(61),a=Object.defineProperty;t.f=r?a:function(e,t,n){if(i(e),t=o(t,!0),i(n),s)try{return a(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){"use strict";var r=n(49),s=n(3),i=n(47),o=n(21),a=n(28),c=n(14),u=n(51),l=n(52),d=Math.max,h=Math.min,p=Math.floor,f=/\$([$&'`]|\d\d?|<[^>]*>)/g,g=/\$([$&'`]|\d\d?)/g;r("replace",2,(function(e,t,n,r){var m=r.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,x=r.REPLACE_KEEPS_$0,v=m?"$":"$0";return[function(n,r){var s=c(this),i=null==n?void 0:n[e];return void 0!==i?i.call(n,s,r):t.call(String(s),n,r)},function(e,r){if(!m&&x||"string"==typeof r&&-1===r.indexOf(v)){var i=n(t,e,this,r);if(i.done)return i.value}var c=s(e),p=String(this),f="function"==typeof r;f||(r=String(r));var g=c.global;if(g){var b=c.unicode;c.lastIndex=0}for(var w=[];;){var k=l(c,p);if(null===k)break;if(w.push(k),!g)break;""===String(k[0])&&(c.lastIndex=u(p,o(c.lastIndex),b))}for(var A,I="",T=0,S=0;S<w.length;S++){k=w[S];for(var D=String(k[0]),P=d(h(a(k.index),p.length),0),C=[],j=1;j<k.length;j++)C.push(void 0===(A=k[j])?A:String(A));var O=k.groups;if(f){var $=[D].concat(C,P,p);void 0!==O&&$.push(O);var E=String(r.apply(void 0,$))}else E=y(D,p,P,C,O,r);P>=T&&(I+=p.slice(T,P)+E,T=P+D.length)}return I+p.slice(T)}];function y(e,n,r,s,o,a){var c=r+e.length,u=s.length,l=g;return void 0!==o&&(o=i(o),l=f),t.call(a,l,(function(t,i){var a;switch(i.charAt(0)){case"$":return"$";case"&":return e;case"`":return n.slice(0,r);case"'":return n.slice(c);case"<":a=o[i.slice(1,-1)];break;default:var l=+i;if(0===l)return t;if(l>u){var d=p(l/10);return 0===d?t:d<=u?void 0===s[d-1]?i.charAt(1):s[d-1]+i.charAt(1):t}a=s[l-1]}return void 0===a?"":a}))}}))},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e}},function(e,t,n){var r=n(1),s=n(11),i=n(9),o=n(40),a=n(41),c=n(26),u=c.get,l=c.enforce,d=String(String).split("String");(e.exports=function(e,t,n,a){var c,u=!!a&&!!a.unsafe,h=!!a&&!!a.enumerable,p=!!a&&!!a.noTargetGet;"function"==typeof n&&("string"!=typeof t||i(n,"name")||s(n,"name",t),(c=l(n)).source||(c.source=d.join("string"==typeof t?t:""))),e!==r?(u?!p&&e[t]&&(h=!0):delete e[t],h?e[t]=n:s(e,t,n)):h?e[t]=n:o(t,n)})(Function.prototype,"toString",(function(){return"function"==typeof this&&u(this).source||a(this)}))},function(e,t,n){"use strict";n(7),Object.assign(t,n(117),n(160),n(161))},function(e,t,n){"use strict";e.exports={forArgs:n(123),plan:n(126),type:n(78)}},function(e,t,n){var r=n(1),s=n(37).f,i=n(11),o=n(15),a=n(40),c=n(65),u=n(46);e.exports=function(e,t){var n,l,d,h,p,f=e.target,g=e.global,m=e.stat;if(n=g?r:m?r[f]||a(f,{}):(r[f]||{}).prototype)for(l in t){if(h=t[l],d=e.noTargetGet?(p=s(n,l))&&p.value:n[l],!u(g?l:f+(m?".":"#")+l,e.forced)&&void 0!==d){if(typeof h==typeof d)continue;c(h,d)}(e.sham||d&&d.sham)&&i(h,"sham",!0),o(n,l,h,e)}}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var r=n(108),s=n(1),i=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?i(r[e])||i(s[e]):r[e]&&r[e][t]||s[e]&&s[e][t]}},function(e,t,n){var r=n(28),s=Math.min;e.exports=function(e){return e>0?s(r(e),9007199254740991):0}},function(e,t,n){"use strict";var r=n(49),s=n(3),i=n(21),o=n(14),a=n(51),c=n(52);r("match",1,(function(e,t,n){return[function(t){var n=o(this),r=null==t?void 0:t[e];return void 0!==r?r.call(t,n):new RegExp(t)[e](String(n))},function(e){var r=n(t,e,this);if(r.done)return r.value;var o=s(e),u=String(this);if(!o.global)return c(o,u);var l=o.unicode;o.lastIndex=0;for(var d,h=[],p=0;null!==(d=c(o,u));){var f=String(d[0]);h[p]=f,""===f&&(o.lastIndex=a(u,i(o.lastIndex),l)),p++}return 0===p?null:h}]}))},function(e,t,n){"use strict";n(7),n(13);const{type:r}=n(17);function s(e,t,n){const i=document.createElement(e);return r.isArrayLike(t)?n=t:"object"===r(t)&&Object.assign(i,t),s.append(i,n),i}s.convert=function(e){return s.isDomNode(e)?e:null==e?document.createTextNode(""):e.domNode||document.createTextNode(e)},s.isDomNode=function(e){return e instanceof Element||e instanceof HTMLDocument||e instanceof Text},s.grab=function(e,t=document){return t.querySelector(e)},s.replace=function(e,t){const n=s.convert(t);return e.parentNode.replaceChild(n,e),n},s.insertBefore=function(e,t){const n=s.convert(t);e.parentNode.insertBefore(n,e)},s.insertAfter=function(e,t){e.nextSibling?s.insertBefore(e.nextSibling,t):s.append(e.parentNode,t)},s.rewrite=function(e,t){s.clear(e),s.append(e,t)},s.append=function(e,t){s.each(t,t=>e.appendChild(t))},s.clear=function(...e){s.each(e,e=>e.innerHTML="")},s.remove=function(...e){s.each(e,e=>{try{e.parentNode.removeChild(e)}catch(e){console.error(e)}})},s.destroy=function(...e){s.each(e,e=>{s.clear(e),s.remove(e)})},s.hide=function(...e){s.each(e,e=>e.hidden=!0)},s.show=function(...e){s.each(e,e=>e.hidden=!1)},s.each=function(e,t){if(r.isArrayLike(e)){(Array.isArray(e)?e:Array.from(e)).forEach(e=>t(s.convert(e)))}else t(s.convert(e))},s.addStyle=function(e){const t=s("style",{type:"text/css"},e);s.append(document.head,t)},s.copyContent=function(e){if(e.selectionStart===e.selectionEnd){if(e.select)e.select();else{if(!window.getSelection)return;{const t=document.createRange();t.selectNode(e),window.getSelection().removeAllRanges(),window.getSelection().addRange(t)}}return document.execCommand("copy")}},s.copyString=function(e){const t=s("textarea",null,e);s.append(document.body,t),s.copyContent(t),s.destroy(t)},e.exports=s},function(e,t){e.exports={}},function(e,t,n){var r=n(60),s=n(14);e.exports=function(e){return r(s(e))}},function(e,t,n){var r,s,i,o=n(106),a=n(1),c=n(8),u=n(11),l=n(9),d=n(42),h=n(43),p=n(44),f=a.WeakMap;if(o){var g=d.state||(d.state=new f),m=g.get,x=g.has,v=g.set;r=function(e,t){return t.facade=e,v.call(g,e,t),t},s=function(e){return m.call(g,e)||{}},i=function(e){return x.call(g,e)}}else{var y=h("state");p[y]=!0,r=function(e,t){return t.facade=e,u(e,y,t),t},s=function(e){return l(e,y)?e[y]:{}},i=function(e){return l(e,y)}}e.exports={set:r,get:s,has:i,enforce:function(e){return i(e)?s(e):r(e,{})},getterFor:function(e){return function(t){var n;if(!c(t)||(n=s(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}}},function(e,t){e.exports=!1},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){"use strict";var r=n(18),s=n(10),i=n(1),o=n(9),a=n(8),c=n(12).f,u=n(65),l=i.Symbol;if(s&&"function"==typeof l&&(!("description"in l.prototype)||void 0!==l().description)){var d={},h=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof h?new l(e):void 0===e?l():l(e);return""===e&&(d[t]=!0),t};u(h,l);var p=h.prototype=l.prototype;p.constructor=h;var f=p.toString,g="Symbol(test)"==String(l("test")),m=/^Symbol\((.*)\)[^)]+$/;c(p,"description",{configurable:!0,get:function(){var e=a(this)?this.valueOf():this,t=f.call(e);if(o(d,e))return"";var n=g?t.slice(7,-1):t.replace(m,"$1");return""===n?void 0:n}}),r({global:!0,forced:!0},{Symbol:h})}},function(e,t,n){"use strict";var r,s,i=n(50),o=n(76),a=RegExp.prototype.exec,c=String.prototype.replace,u=a,l=(r=/a/,s=/b*/g,a.call(r,"a"),a.call(s,"a"),0!==r.lastIndex||0!==s.lastIndex),d=o.UNSUPPORTED_Y||o.BROKEN_CARET,h=void 0!==/()??/.exec("")[1];(l||h||d)&&(u=function(e){var t,n,r,s,o=this,u=d&&o.sticky,p=i.call(o),f=o.source,g=0,m=e;return u&&(-1===(p=p.replace("y","")).indexOf("g")&&(p+="g"),m=String(e).slice(o.lastIndex),o.lastIndex>0&&(!o.multiline||o.multiline&&"\n"!==e[o.lastIndex-1])&&(f="(?: "+f+")",m=" "+m,g++),n=new RegExp("^(?:"+f+")",p)),h&&(n=new RegExp("^"+f+"$(?!\\s)",p)),l&&(t=o.lastIndex),r=a.call(u?n:o,m),u?r?(r.input=r.input.slice(g),r[0]=r[0].slice(g),r.index=o.lastIndex,o.lastIndex+=r[0].length):o.lastIndex=0:l&&r&&(o.lastIndex=o.global?r.index+r[0].length:t),h&&r&&r.length>1&&c.call(r[0],n,(function(){for(s=1;s<arguments.length-2;s++)void 0===arguments[s]&&(r[s]=void 0)})),r}),e.exports=u},function(e,t,n){"use strict";var r,s,i,o,a=n(18),c=n(27),u=n(1),l=n(20),d=n(128),h=n(15),p=n(129),f=n(54),g=n(81),m=n(8),x=n(32),v=n(130),y=n(41),b=n(131),w=n(137),k=n(84),A=n(85).set,I=n(138),T=n(139),S=n(140),D=n(89),P=n(141),C=n(26),j=n(46),O=n(2),$=n(55),E=n(142),X=O("species"),z="Promise",R=C.get,_=C.set,N=C.getterFor(z),U=d,V=u.TypeError,q=u.document,L=u.process,F=l("fetch"),M=D.f,B=M,G=!!(q&&q.createEvent&&u.dispatchEvent),K="function"==typeof PromiseRejectionEvent,H=j(z,(function(){if(!(y(U)!==String(U))){if(66===E)return!0;if(!$&&!K)return!0}if(c&&!U.prototype.finally)return!0;if(E>=51&&/native code/.test(U))return!1;var e=U.resolve(1),t=function(e){e((function(){}),(function(){}))};return(e.constructor={})[X]=t,!(e.then((function(){}))instanceof t)})),J=H||!w((function(e){U.all(e).catch((function(){}))})),W=function(e){var t;return!(!m(e)||"function"!=typeof(t=e.then))&&t},Z=function(e,t){if(!e.notified){e.notified=!0;var n=e.reactions;I((function(){for(var r=e.value,s=1==e.state,i=0;n.length>i;){var o,a,c,u=n[i++],l=s?u.ok:u.fail,d=u.resolve,h=u.reject,p=u.domain;try{l?(s||(2===e.rejection&&te(e),e.rejection=1),!0===l?o=r:(p&&p.enter(),o=l(r),p&&(p.exit(),c=!0)),o===u.promise?h(V("Promise-chain cycle")):(a=W(o))?a.call(o,d,h):d(o)):h(r)}catch(e){p&&!c&&p.exit(),h(e)}}e.reactions=[],e.notified=!1,t&&!e.rejection&&Q(e)}))}},Y=function(e,t,n){var r,s;G?((r=q.createEvent("Event")).promise=t,r.reason=n,r.initEvent(e,!1,!0),u.dispatchEvent(r)):r={promise:t,reason:n},!K&&(s=u["on"+e])?s(r):"unhandledrejection"===e&&S("Unhandled promise rejection",n)},Q=function(e){A.call(u,(function(){var t,n=e.facade,r=e.value;if(ee(e)&&(t=P((function(){$?L.emit("unhandledRejection",r,n):Y("unhandledrejection",n,r)})),e.rejection=$||ee(e)?2:1,t.error))throw t.value}))},ee=function(e){return 1!==e.rejection&&!e.parent},te=function(e){A.call(u,(function(){var t=e.facade;$?L.emit("rejectionHandled",t):Y("rejectionhandled",t,e.value)}))},ne=function(e,t,n){return function(r){e(t,r,n)}},re=function(e,t,n){e.done||(e.done=!0,n&&(e=n),e.value=t,e.state=2,Z(e,!0))},se=function(e,t,n){if(!e.done){e.done=!0,n&&(e=n);try{if(e.facade===t)throw V("Promise can't be resolved itself");var r=W(t);r?I((function(){var n={done:!1};try{r.call(t,ne(se,n,e),ne(re,n,e))}catch(t){re(n,t,e)}})):(e.value=t,e.state=1,Z(e,!1))}catch(t){re({done:!1},t,e)}}};H&&(U=function(e){v(this,U,z),x(e),r.call(this);var t=R(this);try{e(ne(se,t),ne(re,t))}catch(e){re(t,e)}},(r=function(e){_(this,{type:z,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=p(U.prototype,{then:function(e,t){var n=N(this),r=M(k(this,U));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=$?L.domain:void 0,n.parent=!0,n.reactions.push(r),0!=n.state&&Z(n,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),s=function(){var e=new r,t=R(e);this.promise=e,this.resolve=ne(se,t),this.reject=ne(re,t)},D.f=M=function(e){return e===U||e===i?new s(e):B(e)},c||"function"!=typeof d||(o=d.prototype.then,h(d.prototype,"then",(function(e,t){var n=this;return new U((function(e,t){o.call(n,e,t)})).then(e,t)}),{unsafe:!0}),"function"==typeof F&&a({global:!0,enumerable:!0,forced:!0},{fetch:function(e){return T(U,F.apply(u,arguments))}}))),a({global:!0,wrap:!0,forced:H},{Promise:U}),f(U,z,!1,!0),g(z),i=l(z),a({target:z,stat:!0,forced:H},{reject:function(e){var t=M(this);return t.reject.call(void 0,e),t.promise}}),a({target:z,stat:!0,forced:c||H},{resolve:function(e){return T(c&&this===i?U:this,e)}}),a({target:z,stat:!0,forced:J},{all:function(e){var t=this,n=M(t),r=n.resolve,s=n.reject,i=P((function(){var n=x(t.resolve),i=[],o=0,a=1;b(e,(function(e){var c=o++,u=!1;i.push(void 0),a++,n.call(t,e).then((function(e){u||(u=!0,i[c]=e,--a||r(i))}),s)})),--a||r(i)}));return i.error&&s(i.value),n.promise},race:function(e){var t=this,n=M(t),r=n.reject,s=P((function(){var s=x(t.resolve);b(e,(function(e){s.call(t,e).then(n.resolve,r)}))}));return s.error&&r(s.value),n.promise}})},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,t,n){"use strict";e.exports={Observable:n(56),LiveObject:n(144),LiveArray:n(145)}},function(e,t,n){"use strict";const{$util:r,noThrow:s}=n(0),{plan:i}=n(17),{getPrototypeOf:o}=Object,a=r("/events/",{constructor:function(e){this.provider=e,this.clear();const t=()=>c(e,this.handlers.$change);this.put("*",()=>i(t))},clear(){this.handlers={}},put(e,t){this.handlers[e]||(this.handlers[e]=new Set),this.handlers[e].add(t)},delete(e,t){t?this.handlers[e]&&this.handlers[e].delete(t):delete this.handlers[e]},trigger(e,t,n){const r=o(this.provider),s=a.get(r);s&&s.trigger(e,t,n),c(e,this.handlers[t],n),c(e,this.handlers["*"],n)}});function c(e,t,n){t&&t.forEach(t=>{s(()=>t.apply(e,n))})}e.exports=a},function(e,t,n){"use strict";var r=n(49),s=n(53),i=n(3),o=n(14),a=n(84),c=n(51),u=n(21),l=n(52),d=n(30),h=n(4),p=[].push,f=Math.min,g=!h((function(){return!RegExp(4294967295,"y")}));r("split",2,(function(e,t,n){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var r=String(o(this)),i=void 0===n?4294967295:n>>>0;if(0===i)return[];if(void 0===e)return[r];if(!s(e))return t.call(r,e,i);for(var a,c,u,l=[],h=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),f=0,g=new RegExp(e.source,h+"g");(a=d.call(g,r))&&!((c=g.lastIndex)>f&&(l.push(r.slice(f,a.index)),a.length>1&&a.index<r.length&&p.apply(l,a.slice(1)),u=a[0].length,f=c,l.length>=i));)g.lastIndex===a.index&&g.lastIndex++;return f===r.length?!u&&g.test("")||l.push(""):l.push(r.slice(f)),l.length>i?l.slice(0,i):l}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:t.call(this,e,n)}:t,[function(t,n){var s=o(this),i=null==t?void 0:t[e];return void 0!==i?i.call(t,s,n):r.call(String(s),t,n)},function(e,s){var o=n(r,e,this,s,r!==t);if(o.done)return o.value;var d=i(e),h=String(this),p=a(d,RegExp),m=d.unicode,x=(d.ignoreCase?"i":"")+(d.multiline?"m":"")+(d.unicode?"u":"")+(g?"y":"g"),v=new p(g?d:"^(?:"+d.source+")",x),y=void 0===s?4294967295:s>>>0;if(0===y)return[];if(0===h.length)return null===l(v,h)?[h]:[];for(var b=0,w=0,k=[];w<h.length;){v.lastIndex=g?w:0;var A,I=l(v,g?h:h.slice(w));if(null===I||(A=f(u(v.lastIndex+(g?0:w)),h.length))===b)w=c(h,w,m);else{if(k.push(h.slice(b,w)),k.length===y)return k;for(var T=1;T<=I.length-1;T++)if(k.push(I[T]),k.length===y)return k;w=b=A}}return k.push(h.slice(b)),k}]}),!g)},function(e,t,n){var r=n(1),s=n(148),i=n(149),o=n(11),a=n(2),c=a("iterator"),u=a("toStringTag"),l=i.values;for(var d in s){var h=r[d],p=h&&h.prototype;if(p){if(p[c]!==l)try{o(p,c,l)}catch(e){p[c]=l}if(p[u]||o(p,u,d),s[d])for(var f in i)if(p[f]!==i[f])try{o(p,f,i[f])}catch(e){p[f]=i[f]}}}},function(e,t,n){var r=n(10),s=n(59),i=n(38),o=n(25),a=n(61),c=n(9),u=n(62),l=Object.getOwnPropertyDescriptor;t.f=r?l:function(e,t){if(e=o(e),t=a(t,!0),u)try{return l(e,t)}catch(e){}if(c(e,t))return i(!s.f.call(e,t),e[t])}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,n){var r=n(1),s=n(8),i=r.document,o=s(i)&&s(i.createElement);e.exports=function(e){return o?i.createElement(e):{}}},function(e,t,n){var r=n(1),s=n(11);e.exports=function(e,t){try{s(r,e,t)}catch(n){r[e]=t}return t}},function(e,t,n){var r=n(42),s=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(e){return s.call(e)}),e.exports=r.inspectSource},function(e,t,n){var r=n(1),s=n(40),i=r["__core-js_shared__"]||s("__core-js_shared__",{});e.exports=i},function(e,t,n){var r=n(63),s=n(64),i=r("keys");e.exports=function(e){return i[e]||(i[e]=s(e))}},function(e,t){e.exports={}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,n){var r=n(4),s=/#|\.prototype\./,i=function(e,t){var n=a[o(e)];return n==u||n!=c&&("function"==typeof t?r(t):!!t)},o=i.normalize=function(e){return String(e).replace(s,".").toLowerCase()},a=i.data={},c=i.NATIVE="N",u=i.POLYFILL="P";e.exports=i},function(e,t,n){var r=n(14);e.exports=function(e){return Object(r(e))}},function(e,t,n){"use strict";n(7);const r=e.exports;r.wrap=function(e,t){const n=Object.create(e);return t&&Object.assign(n,t),n},r.associate=function(e,t){const n={};return e.forEach(e=>n[e]=t(e)),n},r.objectMap=function(e,t){const n=Object.keys(e);return r.associate(n,n=>t(e[n],n))}},function(e,t,n){"use strict";n(118);var r=n(15),s=n(4),i=n(2),o=n(30),a=n(11),c=i("species"),u=!s((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),l="$0"==="a".replace(/./,"$0"),d=i("replace"),h=!!/./[d]&&""===/./[d]("a","$0"),p=!s((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]}));e.exports=function(e,t,n,d){var f=i(e),g=!s((function(){var t={};return t[f]=function(){return 7},7!=""[e](t)})),m=g&&!s((function(){var t=!1,n=/a/;return"split"===e&&((n={}).constructor={},n.constructor[c]=function(){return n},n.flags="",n[f]=/./[f]),n.exec=function(){return t=!0,null},n[f](""),!t}));if(!g||!m||"replace"===e&&(!u||!l||h)||"split"===e&&!p){var x=/./[f],v=n(f,""[e],(function(e,t,n,r,s){return t.exec===o?g&&!s?{done:!0,value:x.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}}),{REPLACE_KEEPS_$0:l,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:h}),y=v[0],b=v[1];r(String.prototype,e,y),r(RegExp.prototype,f,2==t?function(e,t){return b.call(e,this,t)}:function(e){return b.call(e,this)})}d&&a(RegExp.prototype[f],"sham",!0)}},function(e,t,n){"use strict";var r=n(3);e.exports=function(){var e=r(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},function(e,t,n){"use strict";var r=n(120).charAt;e.exports=function(e,t,n){return t+(n?r(e,t).length:1)}},function(e,t,n){var r=n(19),s=n(30);e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var i=n.call(e,t);if("object"!=typeof i)throw TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==r(e))throw TypeError("RegExp#exec called on incompatible receiver");return s.call(e,t)}},function(e,t,n){var r=n(8),s=n(19),i=n(2)("match");e.exports=function(e){var t;return r(e)&&(void 0!==(t=e[i])?!!t:"RegExp"==s(e))}},function(e,t,n){var r=n(12).f,s=n(9),i=n(2)("toStringTag");e.exports=function(e,t,n){e&&!s(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},function(e,t,n){var r=n(19),s=n(1);e.exports="process"==r(s.process)},function(e,t,n){"use strict";const{forArgs:r}=n(17),{call:s}=n(0),i=n(34),o=n(57);class a{$on(){r(["keys:atom"],arguments,(e,t)=>{o.trapProperty(this,e),i(this).put(e,t)})}$off(e){e?r(["keys:atom"],arguments,(e,t)=>{i(this).delete(e,t)}):i(this).clear()}$trap(){r(["atoms"],arguments,e=>{o.trapProperty(this,e)})}$trigger(e,...t){r(["atoms"],[e],e=>{const n=i.get(this);n&&n.trigger(this,e,t)})}$listen(){r(["value","keys:atom"],arguments,(e,t,n)=>{c.$on(e,t,n)})}$ignore(){r(["value","keys:atom"],arguments,(e,t,n)=>{c.$off(e,t,n)})}$destroy(){}$change(){}}const c=s(a);e.exports=a},function(e,t,n){"use strict";const{type:r}=n(17),{$sideScope:s,either:i,lock:o,setProperty:a}=n(0),c=n(34),u=s("/traps/");function l(e,t){return e?i(e(t),t):t}u.trapProperty=function(e,t,n){"function"==typeof e[t]?u.trapFunction(e,t):u.trapValue(e,t,n)},u.trapFunction=function(e,t){const n=e[t];n&&n.isTrapped||(o(e,t,(function(){return u.callFunction(this,t,n,arguments)})),e[t].isTrapped=!0)},u.callFunction=function(e,t,n,s){const i=n.apply(e,s),o=c.get(e);return"promise"===r(i)?i.then(n=>{o.trigger(e,t,[s,n,t,e])}):o.trigger(e,t,[s,i,t,e]),i},u.trapValue=function(e,t,n){const r=u(e);t in r||(r[t]=l(n,e[t]),a(e,t,{get(){return u(this)[t]},set(e){const r=l(n,e);u.setValue(this,t,r,!0)}}))},u.setValue=function(e,t,n,s){const i=u(e),o=i[t];if(!s||n!==o){i[t]=n;const s=c(e);s.trigger(e,t,[n,o,t,e]),s.trigger(e,"$set",[n,o,t,e]),"promise"===r(n)&&n.catch(e=>(console.error(e),e)).then(r=>{e[t]===n&&u.setValue(e,t,r)})}},e.exports=u},function(e,t){function n(t,r){return e.exports=n=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},n(t,r)}e.exports=n},function(e,t,n){"use strict";var r={}.propertyIsEnumerable,s=Object.getOwnPropertyDescriptor,i=s&&!r.call({1:2},1);t.f=i?function(e){var t=s(this,e);return!!t&&t.enumerable}:r},function(e,t,n){var r=n(4),s=n(19),i="".split;e.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==s(e)?i.call(e,""):Object(e)}:Object},function(e,t,n){var r=n(8);e.exports=function(e,t){if(!r(e))return e;var n,s;if(t&&"function"==typeof(n=e.toString)&&!r(s=n.call(e)))return s;if("function"==typeof(n=e.valueOf)&&!r(s=n.call(e)))return s;if(!t&&"function"==typeof(n=e.toString)&&!r(s=n.call(e)))return s;throw TypeError("Can't convert object to primitive value")}},function(e,t,n){var r=n(10),s=n(4),i=n(39);e.exports=!r&&!s((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){var r=n(27),s=n(42);(e.exports=function(e,t){return s[e]||(s[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.8.0",mode:r?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++n+r).toString(36)}},function(e,t,n){var r=n(9),s=n(107),i=n(37),o=n(12);e.exports=function(e,t){for(var n=s(t),a=o.f,c=i.f,u=0;u<n.length;u++){var l=n[u];r(e,l)||a(e,l,c(t,l))}}},function(e,t,n){var r=n(67),s=n(45).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,s)}},function(e,t,n){var r=n(9),s=n(25),i=n(109).indexOf,o=n(44);e.exports=function(e,t){var n,a=s(e),c=0,u=[];for(n in a)!r(o,n)&&r(a,n)&&u.push(n);for(;t.length>c;)r(a,n=t[c++])&&(~i(u,n)||u.push(n));return u}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(67),s=n(45);e.exports=Object.keys||function(e){return r(e,s)}},function(e,t,n){"use strict";n(29);const r=t;r.isArrayLike=function(e){return!!e&&"function"==typeof e[Symbol.iterator]&&"number"==typeof e.length&&"string"!=typeof e},r.isAtom=function(e){return null===e||"object"!=typeof e||e instanceof Date},r.isInstance=function(e){return!(e.prototype&&e.prototype.constructor===e)}},function(e,t,n){"use strict";const r=t,{associate:s}=n(48);r.decontextualize=function(e){const t=Object.getOwnPropertyNames(e).filter(t=>"function"==typeof e[t]),n=s(t,t=>{const n=e[t];return function(){const e=Array.prototype.shift.call(arguments);return n.apply(e,arguments)}});return delete n.constructor,n}},function(e,t,n){"use strict";n(29),n(7);const r=t,{hasOwn:s,hide:i}=n(73);r.$tag=function(e="/tag/"){const t=Symbol(e);return{get:e=>e[t],set:(e,n)=>i(e,t,n),isIn:e=>!!e[t],isOn:e=>s(e,t)}},r.$memoizer=function(e="/memoized/",t=(()=>Object.create(null))){const n=r.$tag(e),s=function(e){return n.isOn(e)||n.set(e,t(e)),n.get(e)};return Object.assign(s,n),s},r.$util=function(e="/utility/",t={}){const n=t.constructor||function(){};return n.prototype=t,r.$memoizer(e,e=>new n(e))},r.$sideScope=function(e="/sideScope/",t){const n=r.$memoizer(e,e=>{const t=Object.getPrototypeOf(e),r=n(t);return Object.create(r)});return n.set(Object.prototype,t||Object.create(null)),n},r.$sideClass=function(e="/sideClass/",t){return r.$sideScope(e,t.prototype)}},function(e,t,n){"use strict";const r=t,{either:s}=n(74),{wrap:i}=n(48);r.hasOwn=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.hide=function(e,t,n){const s={enumerable:!1};3===arguments.length&&(s.value=n),r.setProperty(e,t,s)},r.lock=function(e,t,n){const s={writable:!1,configurable:!1};3===arguments.length&&(s.value=n),r.setProperty(e,t,s)},r.hideLock=function(e,t,n){const s={writable:!1,enumerable:!1,configurable:!1};3===arguments.length&&(s.value=n),r.setProperty(e,t,s)},r.setProperty=function(e,t,n={}){if(t in e)"value"in n||"set"in n||"get"in n||((n=Object.create(n)).value=e[t]),Object.defineProperty(e,t,n);else{const r=i(n,{enumerable:s(n.enumerable,!0),configurable:s(n.configurable,!0)});"get"in n||"set"in n||(r.writable=s(n.writable,!0)),Object.defineProperty(e,t,r)}},r.delay=function(e,t,n){Object.defineProperty(e,t,{configurable:!0,get:function(){return delete this[t],this[t]=n.call(this)}})}},function(e,t,n){"use strict";const r=t,{isAtom:s,isArrayLike:i}=n(70);r.dispatch=function(e,t,n){const r=e[t]||e["*"];if(r)return n?n(r):r},r.either=function(e,t){return void 0===e?t:e},r.xeach=function(e,t){null!=e&&(s(e)?t(e,"atom"):"function"==typeof e.forEach?e.forEach(t):i(e)?Array.prototype.forEach.call(e,t):Object.entries(e).forEach(([e,n])=>{t(n,e)}))},r.xmap=function(e,t){const n=[];return r.xeach(e,(e,r)=>{n.push(t(e,r))}),n},r.xassoc=function(e,t){const n={};return r.xeach(e,(e,r)=>{const s=t(e,r);void 0!==s&&(n[r]=s)}),n}},function(e,t){var n,r,s=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function a(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{r="function"==typeof clearTimeout?clearTimeout:o}catch(e){r=o}}();var c,u=[],l=!1,d=-1;function h(){l&&c&&(l=!1,c.length?u=c.concat(u):d=-1,u.length&&p())}function p(){if(!l){var e=a(h);l=!0;for(var t=u.length;t;){for(c=u,u=[];++d<t;)c&&c[d].run();d=-1,t=u.length}c=null,l=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===o||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function g(){}s.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new f(e,t)),1!==u.length||l||a(p)},f.prototype.run=function(){this.fun.apply(null,this.array)},s.title="browser",s.browser=!0,s.env={},s.argv=[],s.version="",s.versions={},s.on=g,s.addListener=g,s.once=g,s.off=g,s.removeListener=g,s.removeAllListeners=g,s.emit=g,s.prependListener=g,s.prependOnceListener=g,s.listeners=function(e){return[]},s.binding=function(e){throw new Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(e){throw new Error("process.chdir is not supported")},s.umask=function(){return 0}},function(e,t,n){"use strict";var r=n(4);function s(e,t){return RegExp(e,t)}t.UNSUPPORTED_Y=r((function(){var e=s("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),t.BROKEN_CARET=r((function(){var e=s("^r","gy");return e.lastIndex=2,null!=e.exec("str")}))},function(e,t,n){var r=n(4);e.exports=!!Object.getOwnPropertySymbols&&!r((function(){return!String(Symbol())}))},function(e,t,n){"use strict";n(79),n(82);const{$tag:r,isArrayLike:s,isAtom:i,isInstance:o}=n(0),a=r("/type/");function c(e){const t=typeof e;return"object"===t?null===e?"null":a.get(e):t}c.set=function(e,t){a.set(e.prototype,t)},c.isArrayLike=s,c.isAtom=i,c.isInstance=o,c.set(Array,"array"),c.set(Date,"date"),c.set(Error,"error"),c.set(Map,"map"),c.set(Object,"object"),c.set(RegExp,"regexp"),c.set(Set,"set"),c.set(WeakSet,"weakset"),c.set(WeakMap,"weakmap"),"undefined"!=typeof Promise&&c.set(Promise,"promise"),e.exports=c},function(e,t,n){var r=n(10),s=n(1),i=n(46),o=n(124),a=n(12).f,c=n(66).f,u=n(53),l=n(50),d=n(76),h=n(15),p=n(4),f=n(26).set,g=n(81),m=n(2)("match"),x=s.RegExp,v=x.prototype,y=/a/g,b=/a/g,w=new x(y)!==y,k=d.UNSUPPORTED_Y;if(r&&i("RegExp",!w||k||p((function(){return b[m]=!1,x(y)!=y||x(b)==b||"/a/i"!=x(y,"i")})))){for(var A=function(e,t){var n,r=this instanceof A,s=u(e),i=void 0===t;if(!r&&s&&e.constructor===A&&i)return e;w?s&&!i&&(e=e.source):e instanceof A&&(i&&(t=l.call(e)),e=e.source),k&&(n=!!t&&t.indexOf("y")>-1)&&(t=t.replace(/y/g,""));var a=o(w?new x(e,t):x(e,t),r?this:v,A);return k&&n&&f(a,{sticky:n}),a},I=function(e){e in A||a(A,e,{configurable:!0,get:function(){return x[e]},set:function(t){x[e]=t}})},T=c(x),S=0;T.length>S;)I(T[S++]);v.constructor=A,A.prototype=v,h(s,"RegExp",A)}g("RegExp")},function(e,t,n){var r=n(3),s=n(125);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),t=n instanceof Array}catch(e){}return function(n,i){return r(n),s(i),t?e.call(n,i):n.__proto__=i,n}}():void 0)},function(e,t,n){"use strict";var r=n(20),s=n(12),i=n(2),o=n(10),a=i("species");e.exports=function(e){var t=r(e),n=s.f;o&&t&&!t[a]&&n(t,a,{configurable:!0,get:function(){return this}})}},function(e,t,n){"use strict";var r=n(15),s=n(3),i=n(4),o=n(50),a=RegExp.prototype,c=a.toString,u=i((function(){return"/a/b"!=c.call({source:"a",flags:"b"})})),l="toString"!=c.name;(u||l)&&r(RegExp.prototype,"toString",(function(){var e=s(this),t=String(e.source),n=e.flags;return"/"+t+"/"+String(void 0===n&&e instanceof RegExp&&!("flags"in a)?o.call(e):n)}),{unsafe:!0})},function(e,t,n){var r=n(32);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,s){return e.call(t,n,r,s)}}return function(){return e.apply(t,arguments)}}},function(e,t,n){var r=n(3),s=n(32),i=n(2)("species");e.exports=function(e,t){var n,o=r(e).constructor;return void 0===o||null==(n=r(o)[i])?t:s(n)}},function(e,t,n){var r,s,i,o=n(1),a=n(4),c=n(83),u=n(86),l=n(39),d=n(87),h=n(55),p=o.location,f=o.setImmediate,g=o.clearImmediate,m=o.process,x=o.MessageChannel,v=o.Dispatch,y=0,b={},w=function(e){if(b.hasOwnProperty(e)){var t=b[e];delete b[e],t()}},k=function(e){return function(){w(e)}},A=function(e){w(e.data)},I=function(e){o.postMessage(e+"",p.protocol+"//"+p.host)};f&&g||(f=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return b[++y]=function(){("function"==typeof e?e:Function(e)).apply(void 0,t)},r(y),y},g=function(e){delete b[e]},h?r=function(e){m.nextTick(k(e))}:v&&v.now?r=function(e){v.now(k(e))}:x&&!d?(i=(s=new x).port2,s.port1.onmessage=A,r=c(i.postMessage,i,1)):o.addEventListener&&"function"==typeof postMessage&&!o.importScripts&&p&&"file:"!==p.protocol&&!a(I)?(r=I,o.addEventListener("message",A,!1)):r="onreadystatechange"in l("script")?function(e){u.appendChild(l("script")).onreadystatechange=function(){u.removeChild(this),w(e)}}:function(e){setTimeout(k(e),0)}),e.exports={set:f,clear:g}},function(e,t,n){var r=n(20);e.exports=r("document","documentElement")},function(e,t,n){var r=n(88);e.exports=/(iphone|ipod|ipad).*applewebkit/i.test(r)},function(e,t,n){var r=n(20);e.exports=r("navigator","userAgent")||""},function(e,t,n){"use strict";var r=n(32),s=function(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)};e.exports.f=function(e){return new s(e)}},function(e,t,n){var r,s=n(3),i=n(151),o=n(45),a=n(44),c=n(86),u=n(39),l=n(43),d=l("IE_PROTO"),h=function(){},p=function(e){return"<script>"+e+"<\/script>"},f=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;f=r?function(e){e.write(p("")),e.close();var t=e.parentWindow.Object;return e=null,t}(r):((t=u("iframe")).style.display="none",c.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(p("document.F=Object")),e.close(),e.F);for(var n=o.length;n--;)delete f.prototype[o[n]];return f()};a[d]=!0,e.exports=Object.create||function(e,t){var n;return null!==e?(h.prototype=s(e),n=new h,h.prototype=null,n[d]=e):n=f(),void 0===t?n:i(n,t)}},function(e,t,n){"use strict";var r,s,i,o=n(92),a=n(11),c=n(9),u=n(2),l=n(27),d=u("iterator"),h=!1;[].keys&&("next"in(i=[].keys())?(s=o(o(i)))!==Object.prototype&&(r=s):h=!0),null==r&&(r={}),l||c(r,d)||a(r,d,(function(){return this})),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:h}},function(e,t,n){var r=n(9),s=n(47),i=n(43),o=n(154),a=i("IE_PROTO"),c=Object.prototype;e.exports=o?Object.getPrototypeOf:function(e){return e=s(e),r(e,a)?e[a]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?c:null}},function(e,t,n){"use strict";var r=n(18),s=n(156),i=n(14);r({target:"String",proto:!0,forced:!n(157)("includes")},{includes:function(e){return!!~String(i(this)).indexOf(s(e),arguments.length>1?arguments[1]:void 0)}})},function(e,t){function n(t){return e.exports=n=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},n(t)}e.exports=n},function(e,t,n){"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},function(e,t,n){"use strict";var r=n(6);function s(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var i;if(n)i=n(t);else if(r.isURLSearchParams(t))i=t.toString();else{var o=[];r.forEach(t,(function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),o.push(s(t)+"="+s(e))})))})),i=o.join("&")}if(i){var a=e.indexOf("#");-1!==a&&(e=e.slice(0,a)),e+=(-1===e.indexOf("?")?"?":"&")+i}return e}},function(e,t,n){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,t,n){"use strict";(function(t){var r=n(6),s=n(183),i={"Content-Type":"application/x-www-form-urlencoded"};function o(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var a,c={adapter:(("undefined"!=typeof XMLHttpRequest||void 0!==t&&"[object process]"===Object.prototype.toString.call(t))&&(a=n(99)),a),transformRequest:[function(e,t){return s(t,"Accept"),s(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(o(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)?(o(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300}};c.headers={common:{Accept:"application/json, text/plain, */*"}},r.forEach(["delete","get","head"],(function(e){c.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){c.headers[e]=r.merge(i)})),e.exports=c}).call(this,n(75))},function(e,t,n){"use strict";var r=n(6),s=n(184),i=n(186),o=n(96),a=n(187),c=n(190),u=n(191),l=n(100);e.exports=function(e){return new Promise((function(t,n){var d=e.data,h=e.headers;r.isFormData(d)&&delete h["Content-Type"];var p=new XMLHttpRequest;if(e.auth){var f=e.auth.username||"",g=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";h.Authorization="Basic "+btoa(f+":"+g)}var m=a(e.baseURL,e.url);if(p.open(e.method.toUpperCase(),o(m,e.params,e.paramsSerializer),!0),p.timeout=e.timeout,p.onreadystatechange=function(){if(p&&4===p.readyState&&(0!==p.status||p.responseURL&&0===p.responseURL.indexOf("file:"))){var r="getAllResponseHeaders"in p?c(p.getAllResponseHeaders()):null,i={data:e.responseType&&"text"!==e.responseType?p.response:p.responseText,status:p.status,statusText:p.statusText,headers:r,config:e,request:p};s(t,n,i),p=null}},p.onabort=function(){p&&(n(l("Request aborted",e,"ECONNABORTED",p)),p=null)},p.onerror=function(){n(l("Network Error",e,null,p)),p=null},p.ontimeout=function(){var t="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(l(t,e,"ECONNABORTED",p)),p=null},r.isStandardBrowserEnv()){var x=(e.withCredentials||u(m))&&e.xsrfCookieName?i.read(e.xsrfCookieName):void 0;x&&(h[e.xsrfHeaderName]=x)}if("setRequestHeader"in p&&r.forEach(h,(function(e,t){void 0===d&&"content-type"===t.toLowerCase()?delete h[t]:p.setRequestHeader(t,e)})),r.isUndefined(e.withCredentials)||(p.withCredentials=!!e.withCredentials),e.responseType)try{p.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&p.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&p.upload&&p.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){p&&(p.abort(),n(e),p=null)})),d||(d=null),p.send(d)}))}},function(e,t,n){"use strict";var r=n(185);e.exports=function(e,t,n,s,i){var o=new Error(e);return r(o,t,n,s,i)}},function(e,t,n){"use strict";var r=n(6);e.exports=function(e,t){t=t||{};var n={},s=["url","method","data"],i=["headers","auth","proxy","params"],o=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],a=["validateStatus"];function c(e,t){return r.isPlainObject(e)&&r.isPlainObject(t)?r.merge(e,t):r.isPlainObject(t)?r.merge({},t):r.isArray(t)?t.slice():t}function u(s){r.isUndefined(t[s])?r.isUndefined(e[s])||(n[s]=c(void 0,e[s])):n[s]=c(e[s],t[s])}r.forEach(s,(function(e){r.isUndefined(t[e])||(n[e]=c(void 0,t[e]))})),r.forEach(i,u),r.forEach(o,(function(s){r.isUndefined(t[s])?r.isUndefined(e[s])||(n[s]=c(void 0,e[s])):n[s]=c(void 0,t[s])})),r.forEach(a,(function(r){r in t?n[r]=c(e[r],t[r]):r in e&&(n[r]=c(void 0,e[r]))}));var l=s.concat(i).concat(o).concat(a),d=Object.keys(e).concat(Object.keys(t)).filter((function(e){return-1===l.indexOf(e)}));return r.forEach(d,u),n}},function(e,t,n){"use strict";function r(e){this.message=e}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,e.exports=r},function(e,t,n){"use strict";const r=n(104),s=navigator.serviceWorker;s&&(s.register("worker.js"),s.addEventListener("controllerchange",()=>location.reload()));const i=r.forLocation(location);i.$mount(),console.log("Application:",i),i.$on("route",()=>history.replaceState(null,null,"/".concat(i.route))),i.$trigger("route")},function(e,t,n){"use strict";const{xeach:r,xassoc:s}=n(0),{capitalize:i,stringToHtml:o}=n(16),a=n(162),c=n(166),u=n(194),l=n(206),d=n(207),h=n(217);class p extends a{constructor(e){super('\n<header>%navigation</header>\n\n<main>%tabView</main>\n\n%scrollUpButton\n\n<footer class="flex two">\n  <a target="_blank" rel="noopener" href="https://github.com/ava-labs/avalanche-docs">\n    Documentation © 2020 Avalabs\n  </a>\n  <a target="_blank" rel="noopener" href="https://github.com/codltech/app-codl-center">\n    Application © 2020 MisterTicot\n  </a>\n</footer>\n  '),this.title="Codl.center",this.logo="icons/transparent.svg",this.apis=s(d,e=>c.fromData(e)),r(this.apis,(e,t)=>{const n=i(t),r=new u(e);this.tabs.push({title:n,id:t,view:r})}),this.scrollUpButton=new l({content:o(h),action:()=>{scrollTo(0,0),this.scrollUpButton.domNode.blur()}}),this.$import(e,["tabId"]),this.tabView||(this.tabId="info")}}p.prototype.$on("tabId",(function(){this.hash=null})),e.exports=p},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){var r=n(1),s=n(41),i=r.WeakMap;e.exports="function"==typeof i&&/native code/.test(s(i))},function(e,t,n){var r=n(20),s=n(66),i=n(68),o=n(3);e.exports=r("Reflect","ownKeys")||function(e){var t=s.f(o(e)),n=i.f;return n?t.concat(n(e)):t}},function(e,t,n){var r=n(1);e.exports=r},function(e,t,n){var r=n(25),s=n(21),i=n(110),o=function(e){return function(t,n,o){var a,c=r(t),u=s(c.length),l=i(o,u);if(e&&n!=n){for(;u>l;)if((a=c[l++])!=a)return!0}else for(;u>l;l++)if((e||l in c)&&c[l]===n)return e||l||0;return!e&&-1}};e.exports={includes:o(!0),indexOf:o(!1)}},function(e,t,n){var r=n(28),s=Math.max,i=Math.min;e.exports=function(e,t){var n=r(e);return n<0?s(n+t,0):i(n,t)}},function(e,t,n){"use strict";var r=n(10),s=n(4),i=n(69),o=n(68),a=n(59),c=n(47),u=n(60),l=Object.assign,d=Object.defineProperty;e.exports=!l||s((function(){if(r&&1!==l({b:1},l(d({},"a",{enumerable:!0,get:function(){d(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol();return e[n]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=l({},e)[n]||"abcdefghijklmnopqrst"!=i(l({},t)).join("")}))?function(e,t){for(var n=c(e),s=arguments.length,l=1,d=o.f,h=a.f;s>l;)for(var p,f=u(arguments[l++]),g=d?i(f).concat(d(f)):i(f),m=g.length,x=0;m>x;)p=g[x++],r&&!h.call(f,p)||(n[p]=f[p]);return n}:l},function(e,t,n){"use strict";t.remove=function(e,t){e.forEach((n,r)=>{n===t&&e.splice(r,1)})}},function(e,t,n){"use strict";n(7);const r=e.exports,{decontextualize:s}=n(71),{$memoizer:i}=n(72);r.generalize=function(e){const t=s(e.prototype);return Object.assign(e,t),t},r.call=i("/call/",e=>s(e.prototype))},function(module,exports,__webpack_require__){"use strict";(function(process){const my=exports;my.isBrowser="undefined"!=typeof window&&void 0!==window.document,my.isNode=void 0!==process&&process.versions&&!!process.versions.node,my.isEmbedded=my.isBrowser&&window.self!==window.top,my.nodeRequire=my.isBrowser?()=>{}:eval("require")}).call(this,__webpack_require__(75))},function(e,t,n){"use strict";const r=t;r.noThrow=function(e){try{return e()}catch(e){return console.error(e),e}},r.noError=function(e){try{return e()}catch(e){}}},function(e,t,n){"use strict";t.timeout=function(e){return new Promise(t=>setTimeout(t,e))}},function(e,t,n){"use strict";n(22),n(13);const r=t,s=n(121),{html:i}=n(5);r.stringToHtml=function(e){return i("div",{innerHTML:e}).childNodes[0]},r.markdownToHtml=function(e,t){const n=t.replace(/[<>]/,e=>{const t=e.charCodeAt(0);return"&#".concat(t,";")}),r=s(n,{renderer:o});return i(e,{innerHTML:r})};const o=new s.Renderer;o.link=function(e,t,n){return e.match(/^http(s):\/\//)?'<a target="_blank" rel="noopener" href="'.concat(e,'" title="').concat(t,'">').concat(n,"</a>"):'<a href="'.concat(e,'" title="').concat(t,'">').concat(n,"</a>")}},function(e,t,n){"use strict";var r=n(18),s=n(30);r({target:"RegExp",proto:!0,forced:/./.exec!==s},{exec:s})},function(e,t,n){var r=n(77);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,n){var r=n(28),s=n(14),i=function(e){return function(t,n){var i,o,a=String(s(t)),c=r(n),u=a.length;return c<0||c>=u?e?"":void 0:(i=a.charCodeAt(c))<55296||i>56319||c+1===u||(o=a.charCodeAt(c+1))<56320||o>57343?e?a.charAt(c):i:e?a.slice(c,c+2):o-56320+(i-55296<<10)+65536}};e.exports={codeAt:i(!1),charAt:i(!0)}},function(e,t,n){e.exports=function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function n(e,n){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(e))||n&&e&&"number"==typeof e.length){r&&(e=r);var s=0;return function(){return s>=e.length?{done:!0}:{done:!1,value:e[s++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(r=e[Symbol.iterator]()).next.bind(r)}var r=function(e,t){return e(t={exports:{}},t.exports),t.exports}((function(e){function t(){return{baseUrl:null,breaks:!1,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1}}e.exports={defaults:{baseUrl:null,breaks:!1,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1},getDefaults:t,changeDefaults:function(t){e.exports.defaults=t}}})),s=(r.defaults,r.getDefaults,r.changeDefaults,/[&<>"']/),i=/[&<>"']/g,o=/[<>"']|&(?!#?\w+;)/,a=/[<>"']|&(?!#?\w+;)/g,c={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},u=function(e){return c[e]},l=/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi;function d(e){return e.replace(l,(function(e,t){return"colon"===(t=t.toLowerCase())?":":"#"===t.charAt(0)?"x"===t.charAt(1)?String.fromCharCode(parseInt(t.substring(2),16)):String.fromCharCode(+t.substring(1)):""}))}var h=/(^|[^\[])\^/g,p=/[^\w:]/g,f=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i,g={},m=/^[^:]+:\/*[^/]*$/,x=/^([^:]+:)[\s\S]*$/,v=/^([^:]+:\/*[^/]*)[\s\S]*$/;function y(e,t){g[" "+e]||(m.test(e)?g[" "+e]=e+"/":g[" "+e]=b(e,"/",!0));var n=-1===(e=g[" "+e]).indexOf(":");return"//"===t.substring(0,2)?n?t:e.replace(x,"$1")+t:"/"===t.charAt(0)?n?t:e.replace(v,"$1")+t:e+t}function b(e,t,n){var r=e.length;if(0===r)return"";for(var s=0;s<r;){var i=e.charAt(r-s-1);if(i!==t||n){if(i===t||!n)break;s++}else s++}return e.substr(0,r-s)}var w=function(e,t){if(t){if(s.test(e))return e.replace(i,u)}else if(o.test(e))return e.replace(a,u);return e},k=d,A=function(e,t){e=e.source||e,t=t||"";var n={replace:function(t,r){return r=(r=r.source||r).replace(h,"$1"),e=e.replace(t,r),n},getRegex:function(){return new RegExp(e,t)}};return n},I=function(e,t,n){if(e){var r;try{r=decodeURIComponent(d(n)).replace(p,"").toLowerCase()}catch(e){return null}if(0===r.indexOf("javascript:")||0===r.indexOf("vbscript:")||0===r.indexOf("data:"))return null}t&&!f.test(n)&&(n=y(t,n));try{n=encodeURI(n).replace(/%25/g,"%")}catch(e){return null}return n},T={exec:function(){}},S=function(e){for(var t,n,r=1;r<arguments.length;r++)for(n in t=arguments[r])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},D=function(e,t){var n=e.replace(/\|/g,(function(e,t,n){for(var r=!1,s=t;--s>=0&&"\\"===n[s];)r=!r;return r?"|":" |"})).split(/ \|/),r=0;if(n.length>t)n.splice(t);else for(;n.length<t;)n.push("");for(;r<n.length;r++)n[r]=n[r].trim().replace(/\\\|/g,"|");return n},P=b,C=function(e,t){if(-1===e.indexOf(t[1]))return-1;for(var n=e.length,r=0,s=0;s<n;s++)if("\\"===e[s])s++;else if(e[s]===t[0])r++;else if(e[s]===t[1]&&--r<0)return s;return-1},j=function(e){e&&e.sanitize&&!e.silent&&console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options")},O=function(e,t){if(t<1)return"";for(var n="";t>1;)1&t&&(n+=e),t>>=1,e+=e;return n+e},$=r.defaults,E=P,X=D,z=w,R=C;function _(e,t,n){var r=t.href,s=t.title?z(t.title):null,i=e[1].replace(/\\([\[\]])/g,"$1");return"!"!==e[0].charAt(0)?{type:"link",raw:n,href:r,title:s,text:i}:{type:"image",raw:n,href:r,title:s,text:z(i)}}var N=function(){function e(e){this.options=e||$}var t=e.prototype;return t.space=function(e){var t=this.rules.block.newline.exec(e);if(t)return t[0].length>1?{type:"space",raw:t[0]}:{raw:"\n"}},t.code=function(e,t){var n=this.rules.block.code.exec(e);if(n){var r=t[t.length-1];if(r&&"paragraph"===r.type)return{raw:n[0],text:n[0].trimRight()};var s=n[0].replace(/^ {4}/gm,"");return{type:"code",raw:n[0],codeBlockStyle:"indented",text:this.options.pedantic?s:E(s,"\n")}}},t.fences=function(e){var t=this.rules.block.fences.exec(e);if(t){var n=t[0],r=function(e,t){var n=e.match(/^(\s+)(?:```)/);if(null===n)return t;var r=n[1];return t.split("\n").map((function(e){var t=e.match(/^\s+/);return null===t?e:t[0].length>=r.length?e.slice(r.length):e})).join("\n")}(n,t[3]||"");return{type:"code",raw:n,lang:t[2]?t[2].trim():t[2],text:r}}},t.heading=function(e){var t=this.rules.block.heading.exec(e);if(t)return{type:"heading",raw:t[0],depth:t[1].length,text:t[2]}},t.nptable=function(e){var t=this.rules.block.nptable.exec(e);if(t){var n={type:"table",header:X(t[1].replace(/^ *| *\| *$/g,"")),align:t[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:t[3]?t[3].replace(/\n$/,"").split("\n"):[],raw:t[0]};if(n.header.length===n.align.length){var r,s=n.align.length;for(r=0;r<s;r++)/^ *-+: *$/.test(n.align[r])?n.align[r]="right":/^ *:-+: *$/.test(n.align[r])?n.align[r]="center":/^ *:-+ *$/.test(n.align[r])?n.align[r]="left":n.align[r]=null;for(s=n.cells.length,r=0;r<s;r++)n.cells[r]=X(n.cells[r],n.header.length);return n}}},t.hr=function(e){var t=this.rules.block.hr.exec(e);if(t)return{type:"hr",raw:t[0]}},t.blockquote=function(e){var t=this.rules.block.blockquote.exec(e);if(t){var n=t[0].replace(/^ *> ?/gm,"");return{type:"blockquote",raw:t[0],text:n}}},t.list=function(e){var t=this.rules.block.list.exec(e);if(t){var n,r,s,i,o,a,c,u,l=t[0],d=t[2],h=d.length>1,p={type:"list",raw:l,ordered:h,start:h?+d.slice(0,-1):"",loose:!1,items:[]},f=t[0].match(this.rules.block.item),g=!1,m=f.length;s=this.rules.block.listItemStart.exec(f[0]);for(var x=0;x<m;x++){if(l=n=f[x],x!==m-1){if((i=this.rules.block.listItemStart.exec(f[x+1]))[1].length>s[0].length||i[1].length>3){f.splice(x,2,f[x]+"\n"+f[x+1]),x--,m--;continue}(!this.options.pedantic||this.options.smartLists?i[2][i[2].length-1]!==d[d.length-1]:h===(1===i[2].length))&&(o=f.slice(x+1).join("\n"),p.raw=p.raw.substring(0,p.raw.length-o.length),x=m-1),s=i}r=n.length,~(n=n.replace(/^ *([*+-]|\d+[.)]) ?/,"")).indexOf("\n ")&&(r-=n.length,n=this.options.pedantic?n.replace(/^ {1,4}/gm,""):n.replace(new RegExp("^ {1,"+r+"}","gm"),"")),a=g||/\n\n(?!\s*$)/.test(n),x!==m-1&&(g="\n"===n.charAt(n.length-1),a||(a=g)),a&&(p.loose=!0),this.options.gfm&&(u=void 0,(c=/^\[[ xX]\] /.test(n))&&(u=" "!==n[1],n=n.replace(/^\[[ xX]\] +/,""))),p.items.push({type:"list_item",raw:l,task:c,checked:u,loose:a,text:n})}return p}},t.html=function(e){var t=this.rules.block.html.exec(e);if(t)return{type:this.options.sanitize?"paragraph":"html",raw:t[0],pre:!this.options.sanitizer&&("pre"===t[1]||"script"===t[1]||"style"===t[1]),text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(t[0]):z(t[0]):t[0]}},t.def=function(e){var t=this.rules.block.def.exec(e);if(t)return t[3]&&(t[3]=t[3].substring(1,t[3].length-1)),{tag:t[1].toLowerCase().replace(/\s+/g," "),raw:t[0],href:t[2],title:t[3]}},t.table=function(e){var t=this.rules.block.table.exec(e);if(t){var n={type:"table",header:X(t[1].replace(/^ *| *\| *$/g,"")),align:t[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:t[3]?t[3].replace(/\n$/,"").split("\n"):[]};if(n.header.length===n.align.length){n.raw=t[0];var r,s=n.align.length;for(r=0;r<s;r++)/^ *-+: *$/.test(n.align[r])?n.align[r]="right":/^ *:-+: *$/.test(n.align[r])?n.align[r]="center":/^ *:-+ *$/.test(n.align[r])?n.align[r]="left":n.align[r]=null;for(s=n.cells.length,r=0;r<s;r++)n.cells[r]=X(n.cells[r].replace(/^ *\| *| *\| *$/g,""),n.header.length);return n}}},t.lheading=function(e){var t=this.rules.block.lheading.exec(e);if(t)return{type:"heading",raw:t[0],depth:"="===t[2].charAt(0)?1:2,text:t[1]}},t.paragraph=function(e){var t=this.rules.block.paragraph.exec(e);if(t)return{type:"paragraph",raw:t[0],text:"\n"===t[1].charAt(t[1].length-1)?t[1].slice(0,-1):t[1]}},t.text=function(e,t){var n=this.rules.block.text.exec(e);if(n){var r=t[t.length-1];return r&&"text"===r.type?{raw:n[0],text:n[0]}:{type:"text",raw:n[0],text:n[0]}}},t.escape=function(e){var t=this.rules.inline.escape.exec(e);if(t)return{type:"escape",raw:t[0],text:z(t[1])}},t.tag=function(e,t,n){var r=this.rules.inline.tag.exec(e);if(r)return!t&&/^<a /i.test(r[0])?t=!0:t&&/^<\/a>/i.test(r[0])&&(t=!1),!n&&/^<(pre|code|kbd|script)(\s|>)/i.test(r[0])?n=!0:n&&/^<\/(pre|code|kbd|script)(\s|>)/i.test(r[0])&&(n=!1),{type:this.options.sanitize?"text":"html",raw:r[0],inLink:t,inRawBlock:n,text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(r[0]):z(r[0]):r[0]}},t.link=function(e){var t=this.rules.inline.link.exec(e);if(t){var n=R(t[2],"()");if(n>-1){var r=(0===t[0].indexOf("!")?5:4)+t[1].length+n;t[2]=t[2].substring(0,n),t[0]=t[0].substring(0,r).trim(),t[3]=""}var s=t[2],i="";if(this.options.pedantic){var o=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(s);o?(s=o[1],i=o[3]):i=""}else i=t[3]?t[3].slice(1,-1):"";return _(t,{href:(s=s.trim().replace(/^<([\s\S]*)>$/,"$1"))?s.replace(this.rules.inline._escapes,"$1"):s,title:i?i.replace(this.rules.inline._escapes,"$1"):i},t[0])}},t.reflink=function(e,t){var n;if((n=this.rules.inline.reflink.exec(e))||(n=this.rules.inline.nolink.exec(e))){var r=(n[2]||n[1]).replace(/\s+/g," ");if(!(r=t[r.toLowerCase()])||!r.href){var s=n[0].charAt(0);return{type:"text",raw:s,text:s}}return _(n,r,n[0])}},t.strong=function(e,t,n){void 0===n&&(n="");var r=this.rules.inline.strong.start.exec(e);if(r&&(!r[1]||r[1]&&(""===n||this.rules.inline.punctuation.exec(n)))){t=t.slice(-1*e.length);var s,i="**"===r[0]?this.rules.inline.strong.endAst:this.rules.inline.strong.endUnd;for(i.lastIndex=0;null!=(r=i.exec(t));)if(s=this.rules.inline.strong.middle.exec(t.slice(0,r.index+3)))return{type:"strong",raw:e.slice(0,s[0].length),text:e.slice(2,s[0].length-2)}}},t.em=function(e,t,n){void 0===n&&(n="");var r=this.rules.inline.em.start.exec(e);if(r&&(!r[1]||r[1]&&(""===n||this.rules.inline.punctuation.exec(n)))){t=t.slice(-1*e.length);var s,i="*"===r[0]?this.rules.inline.em.endAst:this.rules.inline.em.endUnd;for(i.lastIndex=0;null!=(r=i.exec(t));)if(s=this.rules.inline.em.middle.exec(t.slice(0,r.index+2)))return{type:"em",raw:e.slice(0,s[0].length),text:e.slice(1,s[0].length-1)}}},t.codespan=function(e){var t=this.rules.inline.code.exec(e);if(t){var n=t[2].replace(/\n/g," "),r=/[^ ]/.test(n),s=n.startsWith(" ")&&n.endsWith(" ");return r&&s&&(n=n.substring(1,n.length-1)),n=z(n,!0),{type:"codespan",raw:t[0],text:n}}},t.br=function(e){var t=this.rules.inline.br.exec(e);if(t)return{type:"br",raw:t[0]}},t.del=function(e){var t=this.rules.inline.del.exec(e);if(t)return{type:"del",raw:t[0],text:t[2]}},t.autolink=function(e,t){var n,r,s=this.rules.inline.autolink.exec(e);if(s)return r="@"===s[2]?"mailto:"+(n=z(this.options.mangle?t(s[1]):s[1])):n=z(s[1]),{type:"link",raw:s[0],text:n,href:r,tokens:[{type:"text",raw:n,text:n}]}},t.url=function(e,t){var n;if(n=this.rules.inline.url.exec(e)){var r,s;if("@"===n[2])s="mailto:"+(r=z(this.options.mangle?t(n[0]):n[0]));else{var i;do{i=n[0],n[0]=this.rules.inline._backpedal.exec(n[0])[0]}while(i!==n[0]);r=z(n[0]),s="www."===n[1]?"http://"+r:r}return{type:"link",raw:n[0],text:r,href:s,tokens:[{type:"text",raw:r,text:r}]}}},t.inlineText=function(e,t,n){var r,s=this.rules.inline.text.exec(e);if(s)return r=t?this.options.sanitize?this.options.sanitizer?this.options.sanitizer(s[0]):z(s[0]):s[0]:z(this.options.smartypants?n(s[0]):s[0]),{type:"text",raw:s[0],text:r}},e}(),U=T,V=A,q=S,L={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:/^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?:\n+|$)|$)/,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ {0,3}(#{1,6}) +([^\n]*?)(?: +#+)? *(?:\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( {0,3})(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?! {0,3}bull )\n*|\s*$)/,html:"^ {0,3}(?:<(script|pre|style)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:\\n{2,}|$)|<(?!script|pre|style)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:\\n{2,}|$)|</(?!script|pre|style)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:\\n{2,}|$))",def:/^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,nptable:U,table:U,lheading:/^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,_paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\n]+)*)/,text:/^[^\n]+/,_label:/(?!\s*\])(?:\\[\[\]]|[^\[\]])+/,_title:/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/};L.def=V(L.def).replace("label",L._label).replace("title",L._title).getRegex(),L.bullet=/(?:[*+-]|\d{1,9}[.)])/,L.item=/^( *)(bull) ?[^\n]*(?:\n(?! *bull ?)[^\n]*)*/,L.item=V(L.item,"gm").replace(/bull/g,L.bullet).getRegex(),L.listItemStart=V(/^( *)(bull)/).replace("bull",L.bullet).getRegex(),L.list=V(L.list).replace(/bull/g,L.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+L.def.source+")").getRegex(),L._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",L._comment=/<!--(?!-?>)[\s\S]*?(?:-->|$)/,L.html=V(L.html,"i").replace("comment",L._comment).replace("tag",L._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),L.paragraph=V(L._paragraph).replace("hr",L.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)").replace("tag",L._tag).getRegex(),L.blockquote=V(L.blockquote).replace("paragraph",L.paragraph).getRegex(),L.normal=q({},L),L.gfm=q({},L.normal,{nptable:"^ *([^|\\n ].*\\|.*)\\n {0,3}([-:]+ *\\|[-| :]*)(?:\\n((?:(?!\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)",table:"^ *\\|(.+)\\n {0,3}\\|?( *[-:]+[-| :]*)(?:\\n *((?:(?!\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"}),L.gfm.nptable=V(L.gfm.nptable).replace("hr",L.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)").replace("tag",L._tag).getRegex(),L.gfm.table=V(L.gfm.table).replace("hr",L.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)").replace("tag",L._tag).getRegex(),L.pedantic=q({},L.normal,{html:V("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment",L._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^ *(#{1,6}) *([^\n]+?) *(?:#+ *)?(?:\n+|$)/,fences:U,paragraph:V(L.normal._paragraph).replace("hr",L.hr).replace("heading"," *#{1,6} *[^\n]").replace("lheading",L.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").getRegex()});var F={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:U,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(?!\s*\])((?:\\[\[\]]?|[^\[\]\\])+)\]/,nolink:/^!?\[(?!\s*\])((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\](?:\[\])?/,reflinkSearch:"reflink|nolink(?!\\()",strong:{start:/^(?:(\*\*(?=[*punctuation]))|\*\*)(?![\s])|__/,middle:/^\*\*(?:(?:(?!overlapSkip)(?:[^*]|\\\*)|overlapSkip)|\*(?:(?!overlapSkip)(?:[^*]|\\\*)|overlapSkip)*?\*)+?\*\*$|^__(?![\s])((?:(?:(?!overlapSkip)(?:[^_]|\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\_)|overlapSkip)*?_)+?)__$/,endAst:/[^punctuation\s]\*\*(?!\*)|[punctuation]\*\*(?!\*)(?:(?=[punctuation_\s]|$))/,endUnd:/[^\s]__(?!_)(?:(?=[punctuation*\s])|$)/},em:{start:/^(?:(\*(?=[punctuation]))|\*)(?![*\s])|_/,middle:/^\*(?:(?:(?!overlapSkip)(?:[^*]|\\\*)|overlapSkip)|\*(?:(?!overlapSkip)(?:[^*]|\\\*)|overlapSkip)*?\*)+?\*$|^_(?![_\s])(?:(?:(?!overlapSkip)(?:[^_]|\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\_)|overlapSkip)*?_)+?_$/,endAst:/[^punctuation\s]\*(?!\*)|[punctuation]\*(?!\*)(?:(?=[punctuation_\s]|$))/,endUnd:/[^\s]_(?!_)(?:(?=[punctuation*\s])|$)/},code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,br:/^( {2,}|\\)\n(?!\s*$)/,del:U,text:/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*]|\b_|$)|[^ ](?= {2,}\n)))/,punctuation:/^([\s*punctuation])/,_punctuation:"!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~"};F.punctuation=V(F.punctuation).replace(/punctuation/g,F._punctuation).getRegex(),F._blockSkip="\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>",F._overlapSkip="__[^_]*?__|\\*\\*\\[^\\*\\]*?\\*\\*",F._comment=V(L._comment).replace("(?:--\x3e|$)","--\x3e").getRegex(),F.em.start=V(F.em.start).replace(/punctuation/g,F._punctuation).getRegex(),F.em.middle=V(F.em.middle).replace(/punctuation/g,F._punctuation).replace(/overlapSkip/g,F._overlapSkip).getRegex(),F.em.endAst=V(F.em.endAst,"g").replace(/punctuation/g,F._punctuation).getRegex(),F.em.endUnd=V(F.em.endUnd,"g").replace(/punctuation/g,F._punctuation).getRegex(),F.strong.start=V(F.strong.start).replace(/punctuation/g,F._punctuation).getRegex(),F.strong.middle=V(F.strong.middle).replace(/punctuation/g,F._punctuation).replace(/overlapSkip/g,F._overlapSkip).getRegex(),F.strong.endAst=V(F.strong.endAst,"g").replace(/punctuation/g,F._punctuation).getRegex(),F.strong.endUnd=V(F.strong.endUnd,"g").replace(/punctuation/g,F._punctuation).getRegex(),F.blockSkip=V(F._blockSkip,"g").getRegex(),F.overlapSkip=V(F._overlapSkip,"g").getRegex(),F._escapes=/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,F._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,F._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,F.autolink=V(F.autolink).replace("scheme",F._scheme).replace("email",F._email).getRegex(),F._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,F.tag=V(F.tag).replace("comment",F._comment).replace("attribute",F._attribute).getRegex(),F._label=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,F._href=/<(?:\\[<>]?|[^\s<>\\])*>|[^\s\x00-\x1f]*/,F._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,F.link=V(F.link).replace("label",F._label).replace("href",F._href).replace("title",F._title).getRegex(),F.reflink=V(F.reflink).replace("label",F._label).getRegex(),F.reflinkSearch=V(F.reflinkSearch,"g").replace("reflink",F.reflink).replace("nolink",F.nolink).getRegex(),F.normal=q({},F),F.pedantic=q({},F.normal,{strong:{start:/^__|\*\*/,middle:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,endAst:/\*\*(?!\*)/g,endUnd:/__(?!_)/g},em:{start:/^_|\*/,middle:/^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,endAst:/\*(?!\*)/g,endUnd:/_(?!_)/g},link:V(/^!?\[(label)\]\((.*?)\)/).replace("label",F._label).getRegex(),reflink:V(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",F._label).getRegex()}),F.gfm=q({},F.normal,{escape:V(F.escape).replace("])","~|])").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*~]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@))/}),F.gfm.url=V(F.gfm.url,"i").replace("email",F.gfm._extended_email).getRegex(),F.breaks=q({},F.gfm,{br:V(F.br).replace("{2,}","*").getRegex(),text:V(F.gfm.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()});var M={block:L,inline:F},B=r.defaults,G=M.block,K=M.inline,H=O;function J(e){return e.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…")}function W(e){var t,n,r="",s=e.length;for(t=0;t<s;t++)n=e.charCodeAt(t),Math.random()>.5&&(n="x"+n.toString(16)),r+="&#"+n+";";return r}var Z=function(){function t(e){this.tokens=[],this.tokens.links=Object.create(null),this.options=e||B,this.options.tokenizer=this.options.tokenizer||new N,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options;var t={block:G.normal,inline:K.normal};this.options.pedantic?(t.block=G.pedantic,t.inline=K.pedantic):this.options.gfm&&(t.block=G.gfm,this.options.breaks?t.inline=K.breaks:t.inline=K.gfm),this.tokenizer.rules=t}t.lex=function(e,n){return new t(n).lex(e)},t.lexInline=function(e,n){return new t(n).inlineTokens(e)};var n,r,s,i=t.prototype;return i.lex=function(e){return e=e.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    "),this.blockTokens(e,this.tokens,!0),this.inline(this.tokens),this.tokens},i.blockTokens=function(e,t,n){var r,s,i,o;for(void 0===t&&(t=[]),void 0===n&&(n=!0),e=e.replace(/^ +$/gm,"");e;)if(r=this.tokenizer.space(e))e=e.substring(r.raw.length),r.type&&t.push(r);else if(r=this.tokenizer.code(e,t))e=e.substring(r.raw.length),r.type?t.push(r):((o=t[t.length-1]).raw+="\n"+r.raw,o.text+="\n"+r.text);else if(r=this.tokenizer.fences(e))e=e.substring(r.raw.length),t.push(r);else if(r=this.tokenizer.heading(e))e=e.substring(r.raw.length),t.push(r);else if(r=this.tokenizer.nptable(e))e=e.substring(r.raw.length),t.push(r);else if(r=this.tokenizer.hr(e))e=e.substring(r.raw.length),t.push(r);else if(r=this.tokenizer.blockquote(e))e=e.substring(r.raw.length),r.tokens=this.blockTokens(r.text,[],n),t.push(r);else if(r=this.tokenizer.list(e)){for(e=e.substring(r.raw.length),i=r.items.length,s=0;s<i;s++)r.items[s].tokens=this.blockTokens(r.items[s].text,[],!1);t.push(r)}else if(r=this.tokenizer.html(e))e=e.substring(r.raw.length),t.push(r);else if(n&&(r=this.tokenizer.def(e)))e=e.substring(r.raw.length),this.tokens.links[r.tag]||(this.tokens.links[r.tag]={href:r.href,title:r.title});else if(r=this.tokenizer.table(e))e=e.substring(r.raw.length),t.push(r);else if(r=this.tokenizer.lheading(e))e=e.substring(r.raw.length),t.push(r);else if(n&&(r=this.tokenizer.paragraph(e)))e=e.substring(r.raw.length),t.push(r);else if(r=this.tokenizer.text(e,t))e=e.substring(r.raw.length),r.type?t.push(r):((o=t[t.length-1]).raw+="\n"+r.raw,o.text+="\n"+r.text);else if(e){var a="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent){console.error(a);break}throw new Error(a)}return t},i.inline=function(e){var t,n,r,s,i,o,a=e.length;for(t=0;t<a;t++)switch((o=e[t]).type){case"paragraph":case"text":case"heading":o.tokens=[],this.inlineTokens(o.text,o.tokens);break;case"table":for(o.tokens={header:[],cells:[]},s=o.header.length,n=0;n<s;n++)o.tokens.header[n]=[],this.inlineTokens(o.header[n],o.tokens.header[n]);for(s=o.cells.length,n=0;n<s;n++)for(i=o.cells[n],o.tokens.cells[n]=[],r=0;r<i.length;r++)o.tokens.cells[n][r]=[],this.inlineTokens(i[r],o.tokens.cells[n][r]);break;case"blockquote":this.inline(o.tokens);break;case"list":for(s=o.items.length,n=0;n<s;n++)this.inline(o.items[n].tokens)}return e},i.inlineTokens=function(e,t,n,r){var s;void 0===t&&(t=[]),void 0===n&&(n=!1),void 0===r&&(r=!1);var i,o,a,c=e;if(this.tokens.links){var u=Object.keys(this.tokens.links);if(u.length>0)for(;null!=(i=this.tokenizer.rules.inline.reflinkSearch.exec(c));)u.includes(i[0].slice(i[0].lastIndexOf("[")+1,-1))&&(c=c.slice(0,i.index)+"["+H("a",i[0].length-2)+"]"+c.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;null!=(i=this.tokenizer.rules.inline.blockSkip.exec(c));)c=c.slice(0,i.index)+"["+H("a",i[0].length-2)+"]"+c.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);for(;e;)if(o||(a=""),o=!1,s=this.tokenizer.escape(e))e=e.substring(s.raw.length),t.push(s);else if(s=this.tokenizer.tag(e,n,r))e=e.substring(s.raw.length),n=s.inLink,r=s.inRawBlock,t.push(s);else if(s=this.tokenizer.link(e))e=e.substring(s.raw.length),"link"===s.type&&(s.tokens=this.inlineTokens(s.text,[],!0,r)),t.push(s);else if(s=this.tokenizer.reflink(e,this.tokens.links))e=e.substring(s.raw.length),"link"===s.type&&(s.tokens=this.inlineTokens(s.text,[],!0,r)),t.push(s);else if(s=this.tokenizer.strong(e,c,a))e=e.substring(s.raw.length),s.tokens=this.inlineTokens(s.text,[],n,r),t.push(s);else if(s=this.tokenizer.em(e,c,a))e=e.substring(s.raw.length),s.tokens=this.inlineTokens(s.text,[],n,r),t.push(s);else if(s=this.tokenizer.codespan(e))e=e.substring(s.raw.length),t.push(s);else if(s=this.tokenizer.br(e))e=e.substring(s.raw.length),t.push(s);else if(s=this.tokenizer.del(e))e=e.substring(s.raw.length),s.tokens=this.inlineTokens(s.text,[],n,r),t.push(s);else if(s=this.tokenizer.autolink(e,W))e=e.substring(s.raw.length),t.push(s);else if(n||!(s=this.tokenizer.url(e,W))){if(s=this.tokenizer.inlineText(e,r,J))e=e.substring(s.raw.length),a=s.raw.slice(-1),o=!0,t.push(s);else if(e){var l="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent){console.error(l);break}throw new Error(l)}}else e=e.substring(s.raw.length),t.push(s);return t},n=t,s=[{key:"rules",get:function(){return{block:G,inline:K}}}],(r=null)&&e(n.prototype,r),s&&e(n,s),t}(),Y=r.defaults,Q=I,ee=w,te=function(){function e(e){this.options=e||Y}var t=e.prototype;return t.code=function(e,t,n){var r=(t||"").match(/\S*/)[0];if(this.options.highlight){var s=this.options.highlight(e,r);null!=s&&s!==e&&(n=!0,e=s)}return r?'<pre><code class="'+this.options.langPrefix+ee(r,!0)+'">'+(n?e:ee(e,!0))+"</code></pre>\n":"<pre><code>"+(n?e:ee(e,!0))+"</code></pre>\n"},t.blockquote=function(e){return"<blockquote>\n"+e+"</blockquote>\n"},t.html=function(e){return e},t.heading=function(e,t,n,r){return this.options.headerIds?"<h"+t+' id="'+this.options.headerPrefix+r.slug(n)+'">'+e+"</h"+t+">\n":"<h"+t+">"+e+"</h"+t+">\n"},t.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"},t.list=function(e,t,n){var r=t?"ol":"ul";return"<"+r+(t&&1!==n?' start="'+n+'"':"")+">\n"+e+"</"+r+">\n"},t.listitem=function(e){return"<li>"+e+"</li>\n"},t.checkbox=function(e){return"<input "+(e?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "},t.paragraph=function(e){return"<p>"+e+"</p>\n"},t.table=function(e,t){return t&&(t="<tbody>"+t+"</tbody>"),"<table>\n<thead>\n"+e+"</thead>\n"+t+"</table>\n"},t.tablerow=function(e){return"<tr>\n"+e+"</tr>\n"},t.tablecell=function(e,t){var n=t.header?"th":"td";return(t.align?"<"+n+' align="'+t.align+'">':"<"+n+">")+e+"</"+n+">\n"},t.strong=function(e){return"<strong>"+e+"</strong>"},t.em=function(e){return"<em>"+e+"</em>"},t.codespan=function(e){return"<code>"+e+"</code>"},t.br=function(){return this.options.xhtml?"<br/>":"<br>"},t.del=function(e){return"<del>"+e+"</del>"},t.link=function(e,t,n){if(null===(e=Q(this.options.sanitize,this.options.baseUrl,e)))return n;var r='<a href="'+ee(e)+'"';return t&&(r+=' title="'+t+'"'),r+=">"+n+"</a>"},t.image=function(e,t,n){if(null===(e=Q(this.options.sanitize,this.options.baseUrl,e)))return n;var r='<img src="'+e+'" alt="'+n+'"';return t&&(r+=' title="'+t+'"'),r+=this.options.xhtml?"/>":">"},t.text=function(e){return e},e}(),ne=function(){function e(){}var t=e.prototype;return t.strong=function(e){return e},t.em=function(e){return e},t.codespan=function(e){return e},t.del=function(e){return e},t.html=function(e){return e},t.text=function(e){return e},t.link=function(e,t,n){return""+n},t.image=function(e,t,n){return""+n},t.br=function(){return""},e}(),re=function(){function e(){this.seen={}}var t=e.prototype;return t.serialize=function(e){return e.toLowerCase().trim().replace(/<[!\/a-z].*?>/gi,"").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g,"").replace(/\s/g,"-")},t.getNextSafeSlug=function(e,t){var n=e,r=0;if(this.seen.hasOwnProperty(n)){r=this.seen[e];do{n=e+"-"+ ++r}while(this.seen.hasOwnProperty(n))}return t||(this.seen[e]=r,this.seen[n]=0),n},t.slug=function(e,t){void 0===t&&(t={});var n=this.serialize(e);return this.getNextSafeSlug(n,t.dryrun)},e}(),se=r.defaults,ie=k,oe=function(){function e(e){this.options=e||se,this.options.renderer=this.options.renderer||new te,this.renderer=this.options.renderer,this.renderer.options=this.options,this.textRenderer=new ne,this.slugger=new re}e.parse=function(t,n){return new e(n).parse(t)},e.parseInline=function(t,n){return new e(n).parseInline(t)};var t=e.prototype;return t.parse=function(e,t){void 0===t&&(t=!0);var n,r,s,i,o,a,c,u,l,d,h,p,f,g,m,x,v,y,b="",w=e.length;for(n=0;n<w;n++)switch((d=e[n]).type){case"space":continue;case"hr":b+=this.renderer.hr();continue;case"heading":b+=this.renderer.heading(this.parseInline(d.tokens),d.depth,ie(this.parseInline(d.tokens,this.textRenderer)),this.slugger);continue;case"code":b+=this.renderer.code(d.text,d.lang,d.escaped);continue;case"table":for(u="",c="",i=d.header.length,r=0;r<i;r++)c+=this.renderer.tablecell(this.parseInline(d.tokens.header[r]),{header:!0,align:d.align[r]});for(u+=this.renderer.tablerow(c),l="",i=d.cells.length,r=0;r<i;r++){for(c="",o=(a=d.tokens.cells[r]).length,s=0;s<o;s++)c+=this.renderer.tablecell(this.parseInline(a[s]),{header:!1,align:d.align[s]});l+=this.renderer.tablerow(c)}b+=this.renderer.table(u,l);continue;case"blockquote":l=this.parse(d.tokens),b+=this.renderer.blockquote(l);continue;case"list":for(h=d.ordered,p=d.start,f=d.loose,i=d.items.length,l="",r=0;r<i;r++)x=(m=d.items[r]).checked,v=m.task,g="",m.task&&(y=this.renderer.checkbox(x),f?m.tokens.length>0&&"text"===m.tokens[0].type?(m.tokens[0].text=y+" "+m.tokens[0].text,m.tokens[0].tokens&&m.tokens[0].tokens.length>0&&"text"===m.tokens[0].tokens[0].type&&(m.tokens[0].tokens[0].text=y+" "+m.tokens[0].tokens[0].text)):m.tokens.unshift({type:"text",text:y}):g+=y),g+=this.parse(m.tokens,f),l+=this.renderer.listitem(g,v,x);b+=this.renderer.list(l,h,p);continue;case"html":b+=this.renderer.html(d.text);continue;case"paragraph":b+=this.renderer.paragraph(this.parseInline(d.tokens));continue;case"text":for(l=d.tokens?this.parseInline(d.tokens):d.text;n+1<w&&"text"===e[n+1].type;)l+="\n"+((d=e[++n]).tokens?this.parseInline(d.tokens):d.text);b+=t?this.renderer.paragraph(l):l;continue;default:var k='Token with "'+d.type+'" type was not found.';if(this.options.silent)return void console.error(k);throw new Error(k)}return b},t.parseInline=function(e,t){t=t||this.renderer;var n,r,s="",i=e.length;for(n=0;n<i;n++)switch((r=e[n]).type){case"escape":s+=t.text(r.text);break;case"html":s+=t.html(r.text);break;case"link":s+=t.link(r.href,r.title,this.parseInline(r.tokens,t));break;case"image":s+=t.image(r.href,r.title,r.text);break;case"strong":s+=t.strong(this.parseInline(r.tokens,t));break;case"em":s+=t.em(this.parseInline(r.tokens,t));break;case"codespan":s+=t.codespan(r.text);break;case"br":s+=t.br();break;case"del":s+=t.del(this.parseInline(r.tokens,t));break;case"text":s+=t.text(r.text);break;default:var o='Token with "'+r.type+'" type was not found.';if(this.options.silent)return void console.error(o);throw new Error(o)}return s},e}(),ae=S,ce=j,ue=w,le=r.getDefaults,de=r.changeDefaults,he=r.defaults;function pe(e,t,n){if(null==e)throw new Error("marked(): input parameter is undefined or null");if("string"!=typeof e)throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(e)+", string expected");if("function"==typeof t&&(n=t,t=null),t=ae({},pe.defaults,t||{}),ce(t),n){var r,s=t.highlight;try{r=Z.lex(e,t)}catch(e){return n(e)}var i=function(e){var i;if(!e)try{i=oe.parse(r,t)}catch(t){e=t}return t.highlight=s,e?n(e):n(null,i)};if(!s||s.length<3)return i();if(delete t.highlight,!r.length)return i();var o=0;return pe.walkTokens(r,(function(e){"code"===e.type&&(o++,setTimeout((function(){s(e.text,e.lang,(function(t,n){if(t)return i(t);null!=n&&n!==e.text&&(e.text=n,e.escaped=!0),0==--o&&i()}))}),0))})),void(0===o&&i())}try{var a=Z.lex(e,t);return t.walkTokens&&pe.walkTokens(a,t.walkTokens),oe.parse(a,t)}catch(e){if(e.message+="\nPlease report this to https://github.com/markedjs/marked.",t.silent)return"<p>An error occurred:</p><pre>"+ue(e.message+"",!0)+"</pre>";throw e}}return pe.options=pe.setOptions=function(e){return ae(pe.defaults,e),de(pe.defaults),pe},pe.getDefaults=le,pe.defaults=he,pe.use=function(e){var t=ae({},e);if(e.renderer&&function(){var n=pe.defaults.renderer||new te,r=function(t){var r=n[t];n[t]=function(){for(var s=arguments.length,i=new Array(s),o=0;o<s;o++)i[o]=arguments[o];var a=e.renderer[t].apply(n,i);return!1===a&&(a=r.apply(n,i)),a}};for(var s in e.renderer)r(s);t.renderer=n}(),e.tokenizer&&function(){var n=pe.defaults.tokenizer||new N,r=function(t){var r=n[t];n[t]=function(){for(var s=arguments.length,i=new Array(s),o=0;o<s;o++)i[o]=arguments[o];var a=e.tokenizer[t].apply(n,i);return!1===a&&(a=r.apply(n,i)),a}};for(var s in e.tokenizer)r(s);t.tokenizer=n}(),e.walkTokens){var n=pe.defaults.walkTokens;t.walkTokens=function(t){e.walkTokens(t),n&&n(t)}}pe.setOptions(t)},pe.walkTokens=function(e,t){for(var r,s=n(e);!(r=s()).done;){var i=r.value;switch(t(i),i.type){case"table":for(var o,a=n(i.tokens.header);!(o=a()).done;){var c=o.value;pe.walkTokens(c,t)}for(var u,l=n(i.tokens.cells);!(u=l()).done;)for(var d,h=n(u.value);!(d=h()).done;){var p=d.value;pe.walkTokens(p,t)}break;case"list":pe.walkTokens(i.items,t);break;default:i.tokens&&pe.walkTokens(i.tokens,t)}}},pe.parseInline=function(e,t){if(null==e)throw new Error("marked.parseInline(): input parameter is undefined or null");if("string"!=typeof e)throw new Error("marked.parseInline(): input parameter is of type "+Object.prototype.toString.call(e)+", string expected");t=ae({},pe.defaults,t||{}),ce(t);try{var n=Z.lexInline(e,t);return t.walkTokens&&pe.walkTokens(n,t.walkTokens),oe.parseInline(n,t)}catch(e){if(e.message+="\nPlease report this to https://github.com/markedjs/marked.",t.silent)return"<p>An error occurred:</p><pre>"+ue(e.message+"",!0)+"</pre>";throw e}},pe.Parser=oe,pe.parser=oe.parse,pe.Renderer=te,pe.TextRenderer=ne,pe.Lexer=Z,pe.lexer=Z.lex,pe.Tokenizer=N,pe.Slugger=re,pe.parse=pe,pe}()},function(e,t,n){"use strict";const r=t,{lock:s}=n(0);r.$ingest=function(e=document){e.id&&(r[e.id]=e);e.querySelectorAll("[id]").forEach(e=>{e.id&&(r[e.id]=e)}),r.html=document,r.head=document.head,r.body=document.body},s(r,"$ingest"),r.$ingest()},function(e,t,n){"use strict";const{call:r}=n(0),s=n(78),{shift:i}=r(Array);function o(e,t,n,r=[]){if(e.length){const s=o[e.shift()];if(!s)throw new Error("Invalid 'forArgs' instruction: ".concat(e[0]));s(e,t,n,r)}else n.apply(this,r)}function a(e,t){throw new Error("Argument is not of expected type '".concat(e,"': ").concat(t))}o.value=function(e,t,n,r){const s=i(t);r.push(s),o(e,t,n,r)},o.values=function(e,t,n,r){const s=i(t),a=r.length;s.forEach(s=>{r[a]=s,o(e,t,n,r)})},o["keys:value"]=function(e,t,n,r){const c=i(t),u=r.length;"object"===s(c)?Object.entries(c).forEach(([s,i])=>{r[u]=s,r[u+1]=i,o(e,t,n,r)}):a("keys:value",c)},o.atoms=function(e,t,n,r){const i=t[0];s.isAtom(i)?o.value(e,t,n,r):s.isArrayLike(i)?o.values(e,t,n,r):a("atoms",i)},o["keys:atom"]=function(e,t,n,r){const i=t[0];s.isAtom(i)?(e.unshift("value"),o.value(e,t,n,r)):s.isArrayLike(i)?(e.unshift("value"),o.values(e,t,n,r)):"object"===s(i)?o["keys:value"](e,t,n,r):a("keys:atom",i)},e.exports=o},function(e,t,n){var r=n(8),s=n(80);e.exports=function(e,t,n){var i,o;return s&&"function"==typeof(i=t.constructor)&&i!==n&&r(o=i.prototype)&&o!==n.prototype&&s(e,o),e}},function(e,t,n){var r=n(8);e.exports=function(e){if(!r(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype");return e}},function(e,t,n){"use strict";const{timeout:r}=n(0);function s(e,t=e){0===s.map.size&&r(0).then(()=>s.execute()),s.map.set(e,t)}s.execute=function(){for(let[e,t]of s.map)t.call(e),s.map.delete(e)},s.map=new Map,e.exports=s},function(e,t,n){"use strict";n(31),n(22);const r=n(23);function s(e){const t=s.resolve(e);return".css"===e.slice(-4)?s.css(t):s.js(t)}s.resolve=function(e){return"./"===e.substr(0,2)?e.substr(2):e.match(/^http(s):\/\//)?e:void 0},s.js=async function(e){return new Promise((function(t,n){const s=r("script",{src:e,onload:t,onerror:n});r.append(document.head,s)}))},s.css=async function(e){return new Promise((function(t,n){const s=r("link",{rel:"stylesheet",type:"text/css",href:e,onload:t,onerror:n});r.append(document.head,s)}))},e.exports=s},function(e,t,n){var r=n(1);e.exports=r.Promise},function(e,t,n){var r=n(15);e.exports=function(e,t,n){for(var s in t)r(e,s,t[s],n);return e}},function(e,t){e.exports=function(e,t,n){if(!(e instanceof t))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return e}},function(e,t,n){var r=n(3),s=n(132),i=n(21),o=n(83),a=n(133),c=n(136),u=function(e,t){this.stopped=e,this.result=t};e.exports=function(e,t,n){var l,d,h,p,f,g,m,x=n&&n.that,v=!(!n||!n.AS_ENTRIES),y=!(!n||!n.IS_ITERATOR),b=!(!n||!n.INTERRUPTED),w=o(t,x,1+v+b),k=function(e){return l&&c(l),new u(!0,e)},A=function(e){return v?(r(e),b?w(e[0],e[1],k):w(e[0],e[1])):b?w(e,k):w(e)};if(y)l=e;else{if("function"!=typeof(d=a(e)))throw TypeError("Target is not iterable");if(s(d)){for(h=0,p=i(e.length);p>h;h++)if((f=A(e[h]))&&f instanceof u)return f;return new u(!1)}l=d.call(e)}for(g=l.next;!(m=g.call(l)).done;){try{f=A(m.value)}catch(e){throw c(l),e}if("object"==typeof f&&f&&f instanceof u)return f}return new u(!1)}},function(e,t,n){var r=n(2),s=n(24),i=r("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(s.Array===e||o[i]===e)}},function(e,t,n){var r=n(134),s=n(24),i=n(2)("iterator");e.exports=function(e){if(null!=e)return e[i]||e["@@iterator"]||s[r(e)]}},function(e,t,n){var r=n(135),s=n(19),i=n(2)("toStringTag"),o="Arguments"==s(function(){return arguments}());e.exports=r?s:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),i))?n:o?s(t):"Object"==(r=s(t))&&"function"==typeof t.callee?"Arguments":r}},function(e,t,n){var r={};r[n(2)("toStringTag")]="z",e.exports="[object z]"===String(r)},function(e,t,n){var r=n(3);e.exports=function(e){var t=e.return;if(void 0!==t)return r(t.call(e)).value}},function(e,t,n){var r=n(2)("iterator"),s=!1;try{var i=0,o={next:function(){return{done:!!i++}},return:function(){s=!0}};o[r]=function(){return this},Array.from(o,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!s)return!1;var n=!1;try{var i={};i[r]=function(){return{next:function(){return{done:n=!0}}}},e(i)}catch(e){}return n}},function(e,t,n){var r,s,i,o,a,c,u,l,d=n(1),h=n(37).f,p=n(85).set,f=n(87),g=n(55),m=d.MutationObserver||d.WebKitMutationObserver,x=d.document,v=d.process,y=d.Promise,b=h(d,"queueMicrotask"),w=b&&b.value;w||(r=function(){var e,t;for(g&&(e=v.domain)&&e.exit();s;){t=s.fn,s=s.next;try{t()}catch(e){throw s?o():i=void 0,e}}i=void 0,e&&e.enter()},!f&&!g&&m&&x?(a=!0,c=x.createTextNode(""),new m(r).observe(c,{characterData:!0}),o=function(){c.data=a=!a}):y&&y.resolve?(u=y.resolve(void 0),l=u.then,o=function(){l.call(u,r)}):o=g?function(){v.nextTick(r)}:function(){p.call(d,r)}),e.exports=w||function(e){var t={fn:e,next:void 0};i&&(i.next=t),s||(s=t,o()),i=t}},function(e,t,n){var r=n(3),s=n(8),i=n(89);e.exports=function(e,t){if(r(e),s(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){var r=n(1);e.exports=function(e,t){var n=r.console;n&&n.error&&(1===arguments.length?n.error(e):n.error(e,t))}},function(e,t){e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},function(e,t,n){var r,s,i=n(1),o=n(88),a=i.process,c=a&&a.versions,u=c&&c.v8;u?s=(r=u.split("."))[0]+r[1]:o&&(!(r=o.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=o.match(/Chrome\/(\d+)/))&&(s=r[1]),e.exports=s&&+s},function(e,t,n){"use strict";n(7);const{LiveObject:r}=n(33),{$sideScope:s,hideLock:i}=n(0),o=n(23),a=s("/attributes/"),c=s("/helpers/");class u extends r{constructor(e="",t){super();const n=o("template",{innerHTML:u.expand(e)}).content;if(!n.childNodes.length||n.childNodes.length>1||"TEMPLATE"===n.childNodes[0].tagName?this.domNode=o("div",null,n.childNodes):this.domNode=n.childNodes[0],i(this,"domNode"),u.rewrite(this,this.domNode),t){const e=Object.keys(this),n=e.filter(e=>"style"!==e);this.$import(t,n),"style"in e&&Object.assign(this.style,t.style)}}$ref(e){return o.grab(e,this.domNode)}$mount(e="body"){const t=e?o.grab(e):document.body;if(!t)throw new Error("Can't find target: \"".concat(e,'"'));o.rewrite(t,this)}$show(){o.show(this)}$hide(){o.hide(this)}static get attributes(){return a(this)}static get helpers(){return c(this)}}u.prototype.$on("$destroy",(function(){o.destroy(this)})),u.expand=n(146),u.rewrite=n(147),Object.assign(u.attributes,n(158)),Object.assign(u.helpers,n(159)),e.exports=u},function(e,t,n){"use strict";n(7);const{forArgs:r,type:s}=n(17),{call:i,isInstance:o,noThrow:a}=n(0),c=n(56),u=n(34),l=n(57);class d extends c{$link(e,t){e&&(h.$pick(this,e,t),h.$export(this,e,t),h.$export(e,this,t))}$export(e,t,n){e&&r(["value","atoms"],arguments,(e,t)=>{h.$push(this,t,e,t,n)})}$import(e,t,n){e&&r(["value","atoms"],arguments,(e,t)=>{t in e&&h.$pull(this,t,e,t,n)})}$pick(e,t,n){e&&r(["value","atoms"],arguments,(e,t)=>{if(t in e){const r=e[t];this[t]=n?n(r):r}})}$pull(e,t,n=e,r){if("function"==typeof t.$push)t.$push(n,this,e,r);else if(n in t){const s=t[n];this[e]=r?r(s):s}}$push(e,t,n=e,r){const s=r?()=>t[n]=r(this[e]):()=>t[n]=this[e];t!==this&&"function"==typeof t.$listen?t.$listen(this,e,s):h.$on(this,e,s),e in this&&s()}$define(e,t,n){p(this,e,t,n,"safe")}$customDefine(e,t,n){p(this,e,t,n)}$compute(){const e=u.get(this);e&&r(["atoms"],arguments,t=>{e.trigger("outdate:".concat(t))})}$set(){r(["keys:atom"],arguments,(e,t)=>{l.setValue(this,e,t)})}}const h=i(d);function p(e,t,n,r,i){const c=function(){this[t]=function(e,t,n,r){const i=function(e,t){let n,r;for(let i of t){const t=e[i];if(void 0===t)return;n||("error"===s(t)?n=t:r||"promise"!==s(t)||(r=new Promise(()=>{})))}return n||r||null}(e,t);return void 0===i?void 0:r&&i?i:a(()=>n.call(e,e))}(this,n,r,i)};e.$on(n,c),o(e)&&c.call(e),u(e).put("outdate:".concat(t),c)}Object.assign(h,i(c)),e.exports=d},function(e,t,n){"use strict";const{call:r,hideLock:s}=n(0),{plan:i}=n(17),o=n(56),a=n(57),c=n(34);class u extends Array{$forEach(e){d(this),this.$on("$add",([t,n],r,s,i)=>{e.call(i,t,n,i)}),this.forEach(e)}$forExit(e){d(this),this.$on("$remove",([t],n,r,s)=>{e.call(s,t,s)})}$map(e){const t=e?this.map(e):this.slice();s(t,"generator",e),t.$listen(this,["shift","pop"],p.bind(t)),t.$listen(this,["unshift","push"],f.bind(t)),t.$listen(this,["splice"],g.bind(t)),d(this);let n=e?(n,r,s)=>t[s]=e(n):(e,n,r)=>t[r]=e;return t.$listen(this,"$set",n),t}$sort(e){const t=this.slice();d(this);const n=()=>a(t).sort(e),r=()=>{n(),t.$trigger("$change")};return t.$listen(this,["$add"],([e])=>{t.push(e),n()}),t.$listen(this,["$remove"],([e])=>{!function(e,t){const n=e.indexOf(t);if(-1===n)return;e.splice(n,1)}(t,e)}),t.$forEach(e=>{c.isIn(e)&&t.$listen(e,"$change",()=>i(r))}),t.$forExit(e=>{c.isIn(e)&&t.$ignore(e)}),r(),t}sort(e){const t=this.slice();return r(Array).sort(t,e),t}$add(){}$remove(){}$change(){}}const l=u.prototype;["$trigger","$on","$off","$listen","$ignore","$destroy"].forEach(e=>l[e]=o.prototype[e]);function d(e){a.isOn(e)||(a.set(e,[]),e.forEach((t,n)=>a.trapValue(e,n)))}function h(e){const t=a(e),n=e.length-t.length;if(n<0)for(let n=e.length;n<t.length;n++)e[n]=t[n],delete t[n],a.trapValue(e,n);else if(n>0){for(let n=t.length;n<e.length;n++)c(e).delete(n);e.length=t.length}}function p(e,t,n){this[n]()}function f([e],t,n){this.generator&&(e=this.generator(e)),this[n](e)}function g([e,t,...n]){this.generator&&(n=n.map(this.generator)),this.splice(e,t,...n)}["push","pop","shift","unshift","splice"].forEach(e=>l[e]=function(e){const t=Array.prototype[e];return function(){if(a.isOn(this)){const e=a(this),n=t.apply(e,arguments);return h(this),n}return t.apply(this,arguments)}}(e)),l.$on("$set",(function(e,t,n){this.$add(e,n),this.$remove(t)})),l.$on(["shift","pop"],(function(e,t){this.$remove(t)})),l.$on("push",(function([e]){this.$add(e,this.length-1)})),l.$on("unshift",(function([e]){this.$add(e,0)})),l.$on("splice",(function(e,t){const[n,,...r]=e;r.length&&r.forEach((e,t)=>{this.$add(e,n+t)}),t.length&&t.forEach(e=>{this.$remove(e)})})),e.exports=u},function(e,t,n){"use strict";function r(e,t,n,r){return"".concat(t,'<template data-type="ellipsis" data-func="').concat(n,'">').concat(r,"</template>")}function s(e,t,n,r){return"".concat(t,'<template data-type="variable" data-func="').concat(n,'">').concat(r,"</template>")}n(13),e.exports=function(e){return e.replace(/^[\s\n]*/,"").replace(/[\s\n]*$/,"").replace(/\s(on\w+)=(%\w+)/g," .$1=$2").replace(/(^|>)[^<>]*(<|$)/g,e=>e.replace(/(^|[^\\])%{?(\w+):\.\.\.(\w+)}?/g,r).replace(/(^|[^\\])%{?(\w+):\.\.\.(\w+)}?/g,r).replace(/(^|[^\\])%{?(\w+):(\w+)}?/g,s).replace(/(^|[^\\])%{?(\w+):(\w+)}?/g,s).replace(/()\.\.\.%{?()(\w+)}?/g,r).replace(/()\.\.\.%{?()(\w+)}?/g,r).replace(/(^|[^\\])%\{?()(\w+)\}?/g,s).replace(/(^|[^\\])%\{?()(\w+)\}?/g,s).replace(/(^|[^\\])\\%/g,"$1%"))}},function(e,t,n){"use strict";n(22),n(13),n(35),n(36);const{dispatch:r,isArrayLike:s}=n(0),i=n(23),o=n(155);function a(e,t){"TEMPLATE"===t.nodeName?a.template(e,t):t.attributes&&Object.values(t.attributes).forEach(n=>{a.attribute(e,t,n)});Array.from(t.childNodes).forEach(t=>a(e,t))}function c(e,t){const n=t.innerHTML,r=t.dataset.func;return{key:n,func:r&&u(e,r)}}function u(e,t){const n=e.constructor.helpers;if(n[t])return n[t].bind(e);throw new Error("Undefined helper: ".concat(t))}a.attribute=function(e,t,n){if("$"===n.name[0]){const s=n.name.substr(1);r(e.constructor.attributes,s,r=>{r(e,t,n.value)})}else if(n.name.match(/^%{?\w+}?$/)){const r=n.name.substr(1);o(t,r,e),t.attributes.removeNamedItem(n.name)}else if(n.value.match(/^%{?\w+:\w+}?$/)){const r=n.name,[s,i]=n.value.substr(1).split(":"),a=u(e,s);o(t,r,e,i,a)}else if(n.value.match(/^%{?\w+}?$/)){const r=n.name,s=n.value.substr(1);o(t,r,e,s)}},a.template=function(e,t){"variable"===t.dataset.type?a.variable(e,t):"ellipsis"===t.dataset.type&&a.ellipsis(e,t)},a.variable=function(e,t){let n=t;const{key:r,func:s}=c(e,t),o=s?e=>n=i.replace(n,s(e)):e=>n=i.replace(n,e);e.$on(r,o)},a.ellipsis=function(e,t){const{key:n,func:r}=c(e,t),o=i.convert("");i.replace(t,o);let a=[];const u=e=>a=function(e,t,n=[]){const r=e.parentNode;t.forEach(e=>{e.parentNode===r&&r.removeChild(e)});const s=[];return i.each(n,t=>{s.push(t),r.insertBefore(t,e)}),s}(o,a,e);let l;e.$on(n,(function(e,t){if(l?(l.$destroy(),l=null):t&&"function"==typeof t.$off&&t.$off("$change",u),!s(e))return void u([]);const n=e&&"function"==typeof e.$map;r&&(n?(l=e.$map(r),e=l):e=e.map(r)),n&&e.$on("$change",()=>u(e)),u(e)}))},e.exports=a},function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,t,n){"use strict";var r=n(25),s=n(150),i=n(24),o=n(26),a=n(152),c=o.set,u=o.getterFor("Array Iterator");e.exports=a(Array,"Array",(function(e,t){c(this,{type:"Array Iterator",target:r(e),index:0,kind:t})}),(function(){var e=u(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),"values"),i.Arguments=i.Array,s("keys"),s("values"),s("entries")},function(e,t,n){var r=n(2),s=n(90),i=n(12),o=r("unscopables"),a=Array.prototype;null==a[o]&&i.f(a,o,{configurable:!0,value:s(null)}),e.exports=function(e){a[o][e]=!0}},function(e,t,n){var r=n(10),s=n(12),i=n(3),o=n(69);e.exports=r?Object.defineProperties:function(e,t){i(e);for(var n,r=o(t),a=r.length,c=0;a>c;)s.f(e,n=r[c++],t[n]);return e}},function(e,t,n){"use strict";var r=n(18),s=n(153),i=n(92),o=n(80),a=n(54),c=n(11),u=n(15),l=n(2),d=n(27),h=n(24),p=n(91),f=p.IteratorPrototype,g=p.BUGGY_SAFARI_ITERATORS,m=l("iterator"),x=function(){return this};e.exports=function(e,t,n,l,p,v,y){s(n,t,l);var b,w,k,A=function(e){if(e===p&&P)return P;if(!g&&e in S)return S[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},I=t+" Iterator",T=!1,S=e.prototype,D=S[m]||S["@@iterator"]||p&&S[p],P=!g&&D||A(p),C="Array"==t&&S.entries||D;if(C&&(b=i(C.call(new e)),f!==Object.prototype&&b.next&&(d||i(b)===f||(o?o(b,f):"function"!=typeof b[m]&&c(b,m,x)),a(b,I,!0,!0),d&&(h[I]=x))),"values"==p&&D&&"values"!==D.name&&(T=!0,P=function(){return D.call(this)}),d&&!y||S[m]===P||c(S,m,P),h[t]=P,p)if(w={values:A("values"),keys:v?P:A("keys"),entries:A("entries")},y)for(k in w)(g||T||!(k in S))&&u(S,k,w[k]);else r({target:t,proto:!0,forced:g||T},w);return w}},function(e,t,n){"use strict";var r=n(91).IteratorPrototype,s=n(90),i=n(38),o=n(54),a=n(24),c=function(){return this};e.exports=function(e,t,n){var u=t+" Iterator";return e.prototype=s(r,{next:i(1,n)}),o(e,u,!1,!0),a[u]=c,e}},function(e,t,n){var r=n(4);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,t,n){"use strict";n(93),n(36);const{type:r}=n(17),{dispatch:s,timeout:i,either:o}=n(0);const a={};function c(e,t,n,r,s){if("input"===e){const a=o(t.constructor.$inputDelay,1e3);let c;n.addEventListener(e,()=>{const e=c=+new Date;i(a).then(()=>{c===e&&u(t,n,r,s)})}),n.addEventListener("keydown",e=>{13===e.keyCode&&u(t,n,r,s)}),n.addEventListener("blur",()=>{u(t,n,r,s)})}else n.addEventListener(e,()=>{u(t,n,r,s)})}function u(e,t,n,r){var s;e[n]=""===(s=t[r])?null:s,t.setCustomValidity("")}function l(e){return null==e?"":"promise"===r(e)?"Pending...":e}a.INPUT=function(e,t,n,r){"radio"===e.type?a.radio(...arguments):"checkbox"===e.type?a.checkbox(...arguments):"value"===t&&c("input",n,e,r,t)},a.TEXTAREA=function(e,t,n,r){"value"===t&&c("input",n,e,r,t)},a.SELECT=function(e,t,n,r){a.SELECT.dynamic.includes(t)&&c("change",n,e,r,t)},a.SELECT.dynamic=["selectedIndex","selectedOptions","value"],a.radio=function(e,t,n,r){if("checked"!==t)return;const s=()=>{e.checked&&(n[r]=e.value)};e.addEventListener("change",s),s()},a.checkbox=function(e,t,n,r){"checked"===t&&c("change",n,e,r,t)},e.exports=function(e,t,n,r=t,i){"class"===t?t="className":"readonly"===t?t="readOnly":"for"===t?t="htmlFor":"selectedIndex"===t?t="selectedIndex":"style"===t&&(n[r]=e.style),".on"===t.substr(0,3)&&(t=t.substr(1)),"on"===t.substr(0,2)?e[t]=e=>function(e,t,n){setTimeout(()=>e[t](n),1)}(n,r,e):function(e,t,n,r,i){n.$push(r,e,t,function(e,t){if(e){const n=e.bind(t);return e=>l(n(e))}return l}(i)),n[r]||(n[r]=e[t]);s(a,e.tagName,s=>{s(e,t,n,r)})}(e,t,n,r,i)}},function(e,t,n){var r=n(53);e.exports=function(e){if(r(e))throw TypeError("The method doesn't accept regular expressions");return e}},function(e,t,n){var r=n(2)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[r]=!1,"/./"[e](t)}catch(e){}}return!1}},function(e,t,n){"use strict";const{$memoizer:r}=n(0),s=n(23),i={ref:function(e,t,n){e.$ref[n]=t},label:function(e,t,n){if("checkbox"===t.type||"radio"===t.type){const e=s("label",{onclick:()=>t.click()},n);s.insertAfter(t,e)}else{const e=s("label",null,s("span",null,n));s.insertAfter(t,e),s.append(e,t)}},group:function(e,t,n){o.add(e,n,t),t.hasAttribute("value")&&(t.onchange=()=>e[n]=t.value)}},o=r("/groups/");function a(e="group"){return a.counter++,"[".concat(e,":").concat(a.counter,"]")}o.get=function(e,t){const n=o(e);if(n[t])return n[t];const r=n[t]={name:a(t),members:[]};return e.$on(t,e=>{const t=r.members.find(e=>e.checked);t&&(t.checked=!1);r.members.find(t=>t.value===e).checked=!0}),r},o.add=function(e,t,n){const r=o.get(e,t);r.members.push(n),n.name=r.name},a.counter=0,e.exports=i},function(e,t,n){"use strict";n(31);const r={not:function(e){return!e||e instanceof Promise||e instanceof Error},has:function(e){return e&&!(e instanceof Promise)&&!(e instanceof Error)},truthy:function(e){return!!e&&r.available(e)},available:function(e){return!(e instanceof Promise||e instanceof Error)},notAvailable:function(e){return e instanceof Promise||e instanceof Error},pending:function(e){return e instanceof Promise},notPending:function(e){return!(e instanceof Promise)},failed:function(e){return e instanceof Error},notFailed:function(e){return!(e instanceof Error)}};e.exports=r},function(e,t,n){"use strict";t.capitalize=function(e){return e.substr(0,1).toUpperCase()+e.slice(1)}},function(e,t,n){"use strict";n(13);const r=t;r.extractPagename=function(e){return e.replace(/^[^?#]*\//,"").replace(/[?#].*/,"")},r.extractQuery=function(e){return e.replace(/^[^?]*/,"").replace(/#.*/,"")},r.extractHash=function(e){return e.replace(/^[^#]*#*/,"")},r.extractHashname=function(e){return r.exctractPagename(e.subsrt(1))}},function(e,t,n){"use strict";const{View:r}=n(5),{extractQuery:s,extractHash:i}=n(16),o=n(163),a=n(164);class c extends r{static forLocation(e){const t=String(e),n=s(t),r=new this(o.fromQuery(n));return r.hash=i(t),r}constructor(e){super('\n<div class="Application">\n  '.concat(e,"\n</div>\n")),this.title=null,this.logo=null,this.navigation=new a(this),this.navigation.$link(this,["tabView","tabId"]),this.$import(this.navigation,["query"]),this.tabs=this.navigation.tabs}}const u=c.prototype;u.hash="",u.query="",u.$define("route",["query","hash"],(function(){return this.hash?"".concat(this.query,"#").concat(this.hash):"".concat(this.query)})),e.exports=c},function(e,t,n){"use strict";n(7),n(35);const{xassoc:r}=n(0);class s{}s.fromQuery=function(e,t=Object){const n=new t;if(""===e)return n;if("?"!==e[0])throw new TypeError("Not a query: ".concat(e));return e.substr(1).split("&").forEach(e=>{if(!e.length)return;const t=e.split("=")[0],r=e.substr(t.length+1);n[t]=decodeURIComponent(r)}),n},s.toQuery=function(e){let t="";return r(e,(e,n)=>{null!=e&&(t+="&".concat(n,"=").concat(encodeURIComponent(e)))}),"?".concat(t.substr(1))},s.fromJson=function(e){return Object.assign(new s,JSON.parse(e))},s.toJson=function(e){return JSON.stringify(e,null,2)},e.exports=s},function(e,t,n){"use strict";const{View:r,html:s}=n(5),i=n(165);class o extends r{constructor(e){super('\n<nav class="Navigation">\n  <span class="brand">\n    %logoImg\n    <h1>%title</h1>\n  </span>\n\n  \x3c!-- responsive --\x3e\n  <input id="bmenub" type="checkbox" class="show">\n  <label for="bmenub" class="burger pseudo button">Menu</label>\n\n  <div class="menu">\n    %toNavigationLink:...tabs\n  </div>\n</nav>\n    '),this.query="",this.$import(e,["title","logo"]),this.tabs=new i,this.tabs.$forEach(e=>this.listenQuery(e)),this.$on("tabView",()=>this.refreshQuery())}listenQuery(e){this.$listen(e.view,"query",()=>this.refreshQuery(e.view))}refreshQuery(e=this.tabView){if(e!==this.tabView)return;let t="?tabId=".concat(this.tabId);e.query&&e.query.length>1&&(t+="&".concat(e.query.substr(1))),this.query=t}}o.helpers.toNavigationLink=function(e){return s("label",null,[s("input",{type:"radio",name:"nav"}),s("span",{className:"toggle pseudo button",textContent:e.title,onclick:()=>{this.tabId=e.id,scrollTo(0,0)}})])};const a=o.prototype;a.$define("logoImg",["logo"],(function(){if(this.logo)return s("img",{src:this.logo,className:"logo"})})),a.$define("tabView",["tabId","tabs"],(function(){const e=this.tabs.find(e=>e.id===this.tabId);if(e)return"function"==typeof e.view?e.view():e.view})),e.exports=o},function(e,t,n){"use strict";n(36);const{LiveArray:r}=n(33),{xeach:s,hide:i}=n(0);class o extends r{constructor(e=Object){super(),i(this,"Class",e)}$store(e,t){t in e&&this.ingest(e[t]),this.$on("$change",()=>e[t]=this.toJson())}toObject(){return this.map(e=>e.toObject())}toJson(){return JSON.stringify(this.toObject())}ingest(e){e&&("string"==typeof e&&(e=JSON.parse(e)),s(e,(e,t)=>{const n=this.put(e);n.id||(n.id=t)}))}put(e){const t=function(e,t){return t instanceof e?t:new e(t)}(this.Class,e);return this.delete(t.id),this.push(t),t}get(e){return this.find(t=>t.id===e)}delete(e){const t=this.findIndex(t=>t.id===e);-1!==t&&this.splice(t,1)}}const a=o.prototype;a.$on("$add",(function([e]){this.$listen(e,"$set",()=>{this.$trigger("$change")})})),a.$on("$remove",(function([e]){this.$ignore(e,"$set")})),e.exports=o},function(e,t,n){"use strict";n(7);const{LiveObject:r}=n(33),{wrap:s}=n(0),i=n(167),o=n(168);class a extends r{static fromData(e){const t=s(e,{methods:e.methods.map(e=>new o(e))});return t.methods.forEach(e=>{e.shareParams(a.getGlobalParams()),e.shareParams(a.getApiParams(t.id))}),t.methods.sort((e,t)=>e.isPrivate===t.isPrivate?e.id.localeCompare(t.id):e.isPrivate?1:-1),new a(t)}static getGlobalParams(){return i(this,"globalParams",()=>u(a.globalParams))}static getApiParams(e){return i(this,"apiParams:".concat(e),()=>u(a.apiParams))}constructor(e){super(),this.$pick(e,["id","name","description","methods"])}}a.globalParams={assetID:"AVAX",encoding:"cb58",username:"bob",password:"creme fraiche",node:"http://127.0.0.1:9650"},a.apiParams={address:void 0,blockchainID:"11111111111111111111111111111111LpoYY",changeAddr:null,from:null,nodeID:void 0,sourceChain:void 0,subnetID:null,chain:void 0};const c=a.prototype;function u(e){const t=new r;return Object.assign(t,e),t}c.$define("methodsPublic",["methods"],(function(){return this.methods.filter(e=>!e.isPrivate)})),c.$define("methodsPrivate",["methods"],(function(){return this.methods.filter(e=>e.isPrivate)})),e.exports=a},function(e,t,n){"use strict";const{$memoizer:r}=n(0),s=r("/cache/");e.exports=function(e,t,n){const r=s(e),i="string"==typeof(o=t)?o:JSON.stringify(o);var o;return r[i]||(r[i]=n()),r[i]}},function(e,t,n){"use strict";n(93),n(22);var r=n(169),s=(n(170),n(94),n(173));function i(e,t){i=function(e,t){return new c(e,void 0,t)};var n=s(RegExp),o=RegExp.prototype,a=new WeakMap;function c(e,t,r){var s=n.call(this,e,t);return a.set(s,r||a.get(e)),s}function u(e,t){var n=a.get(t);return Object.keys(n).reduce((function(t,r){return t[r]=e[n[r]],t}),Object.create(null))}return r(c,n),c.prototype.exec=function(e){var t=o.exec.call(this,e);return t&&(t.groups=u(t,this)),t},c.prototype[Symbol.replace]=function(e,t){if("string"==typeof t){var n=a.get(this);return o[Symbol.replace].call(this,e,t.replace(/\$<([^>]+)>/g,(function(e,t){return"$"+n[t]})))}if("function"==typeof t){var r=this;return o[Symbol.replace].call(this,e,(function(){var e=[];return e.push.apply(e,arguments),"object"!=typeof e[e.length-1]&&e.push(u(e,r)),t.apply(this,e)}))}return o[Symbol.replace].call(this,e,t)},i.apply(this,arguments)}const{LiveObject:o}=n(33),{xeach:a}=n(0),c=n(177);class u extends o{constructor(e){super(),this.example={},this.formals={},this.node="http://127.0.0.1:9650",this.notes=[],this.response=void 0,this.returns={},this.$pick(e,["id","endpoint","description","signature","formals","returns","example","node","notes"]),this.setupEndpoint()}setupEndpoint(){if(!this.endpoint)return;const e=i(/^\/ext\/bc\/([0-9A-Z_a-z]+)(\/.*)?/,{chain:1,tail:2}),t=this.endpoint.match(e);t&&"P"!==t.groups.chain&&(this.chain=t.groups.chain,this.endpointTail=t.groups.tail||"")}run(){this.response=c.post(this.path,{jsonrpc:"2.0",id:1,method:this.id,params:this.actuals})}shareParams(e){a(e,(t,n)=>{void 0===t&&(e[n]=n in this.formals?this.actuals[n]:this[n])}),this.actuals.$import(e,this.arguments),e.$import(this.actuals,Object.keys(e)),"node"in e&&this.$link(e,"node"),"chain"in e&&this.chain&&this.$link(e,"chain")}}const l=u.prototype;l.$define("endpoint",["chain","endpointTail"],e=>"/ext/bc/".concat(e.chain||"?").concat(e.endpointTail)),l.$define("path",["node","endpoint"],e=>{if(!e.node)return e.endpoint.substr(1);const t=e.node.match(/^http(s)?:\/\//)?"":"https://";return"".concat(t).concat(e.node).concat(e.endpoint)}),l.$define("arguments",["formals"],e=>Object.keys(e.formals)),l.$define("isPrivate",["arguments"],e=>e.arguments.includes("password")||e.arguments.includes("oldPassword")),l.$define("actuals",["example","arguments"],e=>{const t=new o;return t.$trap(e.arguments),t.$pick(e.example,e.arguments),t}),e.exports=u},function(e,t,n){var r=n(58);e.exports=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)}},function(e,t,n){var r=n(171),s=n(172);e.exports=function(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?s(e):t}},function(e,t){function n(t){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?e.exports=n=function(e){return typeof e}:e.exports=n=function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(t)}e.exports=n},function(e,t){e.exports=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}},function(e,t,n){var r=n(94),s=n(58),i=n(174),o=n(175);function a(t){var n="function"==typeof Map?new Map:void 0;return e.exports=a=function(e){if(null===e||!i(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(e))return n.get(e);n.set(e,t)}function t(){return o(e,arguments,r(this).constructor)}return t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),s(t,e)},a(t)}e.exports=a},function(e,t){e.exports=function(e){return-1!==Function.toString.call(e).indexOf("[native code]")}},function(e,t,n){var r=n(58),s=n(176);function i(t,n,o){return s()?e.exports=i=Reflect.construct:e.exports=i=function(e,t,n){var s=[null];s.push.apply(s,t);var i=new(Function.bind.apply(e,s));return n&&r(i,n.prototype),i},i.apply(null,arguments)}e.exports=i},function(e,t){e.exports=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}},function(e,t,n){e.exports=n(178)},function(e,t,n){"use strict";var r=n(6),s=n(95),i=n(179),o=n(101);function a(e){var t=new i(e),n=s(i.prototype.request,t);return r.extend(n,i.prototype,t),r.extend(n,t),n}var c=a(n(98));c.Axios=i,c.create=function(e){return a(o(c.defaults,e))},c.Cancel=n(102),c.CancelToken=n(192),c.isCancel=n(97),c.all=function(e){return Promise.all(e)},c.spread=n(193),e.exports=c,e.exports.default=c},function(e,t,n){"use strict";var r=n(6),s=n(96),i=n(180),o=n(181),a=n(101);function c(e){this.defaults=e,this.interceptors={request:new i,response:new i}}c.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=a(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var t=[o,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){t.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){t.push(e.fulfilled,e.rejected)}));t.length;)n=n.then(t.shift(),t.shift());return n},c.prototype.getUri=function(e){return e=a(this.defaults,e),s(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){c.prototype[e]=function(t,n){return this.request(a(n||{},{method:e,url:t,data:(n||{}).data}))}})),r.forEach(["post","put","patch"],(function(e){c.prototype[e]=function(t,n,r){return this.request(a(r||{},{method:e,url:t,data:n}))}})),e.exports=c},function(e,t,n){"use strict";var r=n(6);function s(){this.handlers=[]}s.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},s.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},s.prototype.forEach=function(e){r.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=s},function(e,t,n){"use strict";var r=n(6),s=n(182),i=n(97),o=n(98);function a(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return a(e),e.headers=e.headers||{},e.data=s(e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||o.adapter)(e).then((function(t){return a(e),t.data=s(t.data,t.headers,e.transformResponse),t}),(function(t){return i(t)||(a(e),t&&t.response&&(t.response.data=s(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},function(e,t,n){"use strict";var r=n(6);e.exports=function(e,t,n){return r.forEach(n,(function(n){e=n(e,t)})),e}},function(e,t,n){"use strict";var r=n(6);e.exports=function(e,t){r.forEach(e,(function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])}))}},function(e,t,n){"use strict";var r=n(100);e.exports=function(e,t,n){var s=n.config.validateStatus;n.status&&s&&!s(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,s){return e.config=t,n&&(e.code=n),e.request=r,e.response=s,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},function(e,t,n){"use strict";var r=n(6);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,s,i,o){var a=[];a.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&a.push("expires="+new Date(n).toGMTString()),r.isString(s)&&a.push("path="+s),r.isString(i)&&a.push("domain="+i),!0===o&&a.push("secure"),document.cookie=a.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,t,n){"use strict";var r=n(188),s=n(189);e.exports=function(e,t){return e&&!r(t)?s(e,t):t}},function(e,t,n){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,t,n){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},function(e,t,n){"use strict";var r=n(6),s=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,i,o={};return e?(r.forEach(e.split("\n"),(function(e){if(i=e.indexOf(":"),t=r.trim(e.substr(0,i)).toLowerCase(),n=r.trim(e.substr(i+1)),t){if(o[t]&&s.indexOf(t)>=0)return;o[t]="set-cookie"===t?(o[t]?o[t]:[]).concat([n]):o[t]?o[t]+", "+n:n}})),o):o}},function(e,t,n){"use strict";var r=n(6);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function s(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=s(window.location.href),function(t){var n=r.isString(t)?s(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},function(e,t,n){"use strict";var r=n(102);function s(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;e((function(e){n.reason||(n.reason=new r(e),t(n.reason))}))}s.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},s.source=function(){var e;return{token:new s((function(t){e=t})),cancel:e}},e.exports=s},function(e,t,n){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},function(e,t,n){"use strict";n(29);const{View:r}=n(5),{markdownToHtml:s}=n(16),i=n(195),o=n(197);class a extends r{constructor(e){super('\n<section class="Tab">\n\n  <header>\n    %publicToc\n    %privateToc\n    <strong>Description</strong>\n    %prettyDescription\n  </header>\n\n  %publicSection\n  %privateSection\n\n</section>\n    '),this.api=e,this.$import(e,["description","methodsPublic","methodsPrivate"])}}const c=a.prototype;c.$define("publicToc",["methodsPublic"],(function(){return new i({title:"Public API",methods:this.methodsPublic})})),c.$define("privateToc",["methodsPrivate"],(function(){return new i({title:"Private API",methods:this.methodsPrivate})})),c.$define("prettyDescription",["description"],(function(){return s("div",this.description)})),c.$define("publicSection",["methodsPublic"],(function(){return new o({title:"Public API",methods:this.methodsPublic})})),c.$define("privateSection",["methodsPrivate"],(function(){return new o({title:"Private API",methods:this.methodsPrivate})})),e.exports=a},function(e,t,n){"use strict";const{View:r}=n(5);class s extends r{constructor(e){super('\n<div class="MethodsToc" %hidden>\n  <strong>%title</strong>\n  <ul class>\n    ...%methodLinks\n  </ul>\n</div>\n    '),this.$import(e,["title","methods"])}}const i=s.prototype;i.$define("hidden",["methods"],(function(){return!this.methods.length})),i.$define("methodLinks",["methods"],(function(){return this.methods.map(e=>new s.Link(e))})),e.exports=s,s.Link=n(196)},function(e,t,n){"use strict";const{View:r}=n(5);class s extends r{constructor(e){super("\n<li>\n  <a %href>%id</a>\n</li>\n    "),this.$import(e,["id"])}}s.prototype.$define("href",["id"],(function(){return"#".concat(this.id)})),e.exports=s},function(e,t,n){"use strict";const{View:r}=n(5),s=n(198);class i extends r{constructor(e){super('\n<section class="MethodSection" %hidden>\n  <h2>%title</h2>\n  ...%methodCards\n</section>\n    '),this.$import(e,["title","methods"])}}const o=i.prototype;o.$define("hidden",["methods"],(function(){return!this.methods.length})),o.$define("methodCards",["methods"],(function(){return this.methods.map(e=>new s(e))})),e.exports=i},function(e,t,n){"use strict";n(29),n(79),n(82),n(13),n(35);const{View:r}=n(5),{markdownToHtml:s}=n(16),i=n(199),o=n(202),a=n(204);class c extends r{constructor(e){super('\n<section class="MethodCard card">\n  <a name=%id></a><a name=%avadocsId></a>\n\n  <header onclick=%logMe>\n    <h3>%id</h3>\n    %shareLink\n  </header>\n\n  <p>%prettyDescription</p>\n  %snippets\n\n  <footer>\n    %form\n    <ul hidden=%noNotes>\n      ...%notesLi\n    </ul>\n  </footer>\n\n</section>\n    '),this.method=e,this.$pick(e,["id","description","notes","arguments"]),this.shareLink=new a({title:"Share this method card",url:this.cardUrl}),this.form=new i(e),this.snippets=new o(e),this.$listen(this.form,"submit",()=>this.snippets.run())}logMe(){console.log(this)}}c.baseUrl=location.href.split(/[?#]/)[0];const u=c.prototype;u.$define("noFormals",["arguments"],e=>0===e.arguments.length),u.$define("noNotes",["arguments"],e=>0===e.notes.length),u.$define("avadocsId",["id"],e=>e.id.replace(".","-").toLowerCase()),u.$define("apiId",["id"],e=>e.id.split(".")[0]),u.$define("cardUrl",["id","apiId"],e=>"".concat(c.baseUrl,"?tabId=").concat(e.apiId,"#").concat(e.id)),u.$define("prettyDescription",["description","apiId"],e=>{const t=function(e,t){const n=new RegExp("`(".concat(t,"\\.\\w+)`"),"g");return e.replace(/]\(([^)-]+)[^)]*#([^)]+)\)/g,"](?tabId=$1#$2)").replace(n,"[`$1`](#$1)")}(e.description,e.apiId);return s("div",t)}),u.$define("notesLi",["notes"],e=>e.notes.map(e=>s("li",e))),e.exports=c},function(e,t,n){"use strict";const{View:r}=n(5),{xmap:s}=n(0);class i extends r{constructor(e){super('\n<form class="MethodForm flex two-500 three-800" onsubmit="return false">\n  ...%inputs\n  %nodeInput\n  %chainInput\n  <button hidden onclick=%checkAndSubmit>\n</form>\n    '),this.method=e,this.$pick(e,["formals","actuals"]),this.nodeInput=i.Input.forParam(this.method,"node","string"),e.chain&&(this.chainInput=i.Input.forParam(this.method,"chain","string"))}checkAndSubmit(e){e.path.find(e=>"FORM"===e.tagName).checkValidity()&&this.submit()}submit(){}}i.prototype.$define("inputs",["formals","actuals"],e=>s(e.actuals,(t,n)=>{const r=e.formals[n];return i.Input.forParam(e.actuals,n,r)})),i.Input=n(200),e.exports=i},function(e,t,n){"use strict";n(7),n(22),n(13),n(35);var r=n(201);function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}const{View:i}=n(5),{dispatch:o}=n(0),{capitalize:a}=n(16),c="^".concat("(?<isOptional>\\?)","?").concat("(?<type>(\\[\\])?\\w+)","$");class u extends i{static forParam(e,t,n){const i=a(t),o=this.formalToSpecs(n),c=new this(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({label:i},o));return c.$pull("value",e,t,o.pull),c.$push("value",e,t,o.push),c}static formalToSpecs(e){const t=e.match(c).groups,n=o(u.types,t.type);return Object.assign(t,n),t}constructor(e){"textarea"===e.type?super('\n<label class="full first">\n  <span>%label:</span>\n  <span hidden=%required>Optional</span>\n  <textarea %placeholder value=%value rows=5></textarea>\n</label>\n        '):super("\n<label>\n  <span>%label:</span>\n  <span hidden=%required>Optional</span>\n  <input %type %placeholder value=%value %step %required>\n</label>\n      "),this.$pick(e,["label","type","placeholder","step","isOptional"]),this.required=!this.isOptional}}function l(e){return JSON.stringify(e,null,2)}u.$inputDelay=40,u.types={float:{type:"number",placeholder:"Number",push:e=>+e},int:{type:"number",placeholder:"Integer",step:0,push:e=>isNaN(e)?null:+e},object:{type:"textarea",placeholder:"JSON of an object",pull:e=>e&&l(e),push:e=>e&&JSON.parse(e)},string:{type:"text",placeholder:"String"},"[]string":{type:"text",placeholder:"Comma-separated strings",pull:e=>e&&e.join(", "),push:e=>e?e.split(/, */):null},"[]object":{type:"textarea",placeholder:"JSON of an array of objects",pull:e=>e&&function(e){const t=l(e);return t.replace(/^\[\n\s\s{/,"[{").replace(/},\n\s\s{/,"}, {").replace(/\s\s}\n]/,"}]")}(e),push:e=>e&&JSON.parse(e)}},e.exports=u},function(e,t){e.exports=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}},function(e,t,n){"use strict";n(31),n(13),n(36);const{View:r}=n(5),{stringToHtml:s}=n(16),i=n(203);class o extends r{constructor(e){const t=c("method-snippet-tab-");super('\n<div class="MethodSnippets">\n  <a name=""></a>\n\n  <form>\n    <label class="pseudo button toggle" for="'.concat(t,'-1">Signature</label>\n    <label class="pseudo button toggle" for="').concat(t,'-2">Curl</label>\n    <label class="pseudo button toggle" for="').concat(t,'-3">Axios (JS)</label>\n    <label class="button toggle" for="').concat(t,'-4">%{playIcon} Run</label>\n  </form>\n\n  <div class="tabs four">\n\n    <input id="').concat(t,'-1" type="radio" $group="tabId" value="signature">\n    <input id="').concat(t,'-2" type="radio" $group="tabId" value="curl"\n      checked>\n    <input id="').concat(t,'-3" type="radio" $group="tabId" value="axios">\n    <input id="').concat(t,'-4" type="radio" $group="tabId" value="response"\n      onclick=%run>\n\n    <div class="row stacked" ondblclick=%selectValue onclick=%maybeSelectCode>\n      <pre>%signature</pre>\n      <pre>%curlCode</pre>\n      <pre>%axiosCode</pre>\n      <pre>%prettyResponse</pre>\n    </div>\n\n  </div>\n</div>\n    ')),this.idPrefix=t,this.playIcon=s(i),this.node="127.0.0.1:9650",this.method=e,this.$pick(e,["id","signature","actuals"]),this.$import(e,["path","response"]),this.actuals.$on("$change",()=>{this.$trigger("actuals")})}run(){this.method.run(),this.selectTab(4),this.scrollIntoView()}selectTab(e){const t="#".concat(this.idPrefix,"-").concat(e);this.$ref(t).checked=!0}scrollIntoView(){const e=this.$ref("a[name]");e.getBoundingClientRect().top>=0||e.scrollIntoView({behavior:"smooth"})}scrollUpCode(){this.$ref(".tabs").scrollTo(0,0)}selectValue(){const e=getSelection();if(!e.rangeCount)return;const t=e.getRangeAt(0),{startContainer:n,startOffset:r,endOffset:s}=t,i=n.textContent.matchAll(/"[^"]+"/g);for(const e of i){const i=e[0],o=e.index,a=o+i.length;if(o<r&&a>s)return t.setStart(n,o+1),void t.setEnd(n,a-1);if(o>s)return}}maybeSelectCode(e){if(3!==e.detail)return;const t=getSelection();if(!t.rangeCount)return;const n=t.getRangeAt(0),r=n.startContainer;n.setStart(r,0),n.setEnd(r,r.length)}}const a=o.prototype;function c(e){return c.count++,"".concat(e).concat(c.count)}a.$define("curlActuals",["actuals"],e=>JSON.stringify(e.actuals,null,2).replace(/^/gm,"  ").substr(2)),a.$define("curlPath",["path"],e=>e.path.replace("http://","")),a.$define("curlCode",["id","curlActuals","curlPath"],e=>'curl -X POST --data \'{\n  "jsonrpc": "2.0",\n  "id"     : 1,\n  "method" : "'.concat(e.id,'",\n  "params" : ').concat(e.curlActuals,"\n}' -H 'content-type:application/json;' ").concat(e.curlPath,"\n")),a.$define("axiosActuals",["curlActuals"],e=>e.curlActuals.replace(/"(\w*)":/g,"$1:")),a.$define("axiosCode",["path","id","axiosActuals"],e=>'const path = "'.concat(e.path,'"\nconst response = await axios.post(path, {\n  jsonrpc: "2.0",\n  id: 1,\n  method: "').concat(e.id,'",\n  params: ').concat(e.axiosActuals,"\n})\n")),a.$customDefine("prettyResponse",["response"],e=>{if(e.response instanceof Promise)return"Pending...";const t=e.response.message||e.response.data;return JSON.stringify(t,null,2)}),a.$on("tabId",(function(){this.scrollUpCode()})),a.$on(["curlCode","axiosCode"],(function(){"curl"===this.tabId||"axios"===this.tabId||this.selectTab(2)})),c.count=0,e.exports=o},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-play"><polygon points="5 3 19 12 5 21 5 3"></polygon></svg>'},function(e,t,n){"use strict";n(31);const{View:r,html:s}=n(5),{timeout:i}=n(0),{stringToHtml:o}=n(16),a=n(205);e.exports=class extends r{constructor(e){super('\n<div class="ShareLink">\n  <span class=%state>Link copied!</span>\n  <a %onclick %title>%shareSvg</a>\n</div>\n'),this.state=null,this.title="Share this",this.$import(e,["title","url"]),this.shareSvg=o(a)}async onclick(){if(this.state)return;const e=this.url||location.href;navigator.share?navigator.share({title:this.title,url:e}):(s.copyString(e),this.state="activated",await i(2e3),this.state=null)}}},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-share-2"><circle cx="18" cy="5" r="3"></circle><circle cx="6" cy="12" r="3"></circle><circle cx="18" cy="19" r="3"></circle><line x1="8.59" y1="13.51" x2="15.42" y2="17.49"></line><line x1="15.41" y1="6.51" x2="8.59" y2="10.49"></line></svg>'},function(e,t,n){"use strict";const{View:r}=n(5);e.exports=class extends r{constructor(e){super('\n<button class="FloatingButton button" %onclick>\n  <span>%content</span>\n</button>\n    '),this.$import(e,["content","action"])}onclick(){this.action&&this.action()}}},function(e,t,n){"use strict";e.exports={admin:n(208),auth:n(209),contract:n(210),exchange:n(211),health:n(212),info:n(213),ipc:n(214),keystore:n(215),platform:n(216)}},function(e){e.exports=JSON.parse('{"id":"admin","name":"Admin API","description":"This API can be used for measuring node health and debugging. Note that the Admin API is disabled by default for security reasons. To run a node with the Admin API enabled, use [command line argument](https://docs.avax.network/build/references/command-line-interface) `--api-admin-enabled=true`.\\n","methods":[{"id":"admin.alias","endpoint":"/ext/admin","description":"Assign an API endpoint an alias, a different endpoint for the API. The original endpoint will still work. This change only affects this node; other nodes will not know about this alias.","signature":"admin.alias({\\n    endpoint: string,\\n    alias: string\\n}) -> {\\n    success: bool\\n}","formals":{"endpoint":"string","alias":"string"},"returns":{"success":"bool"},"example":{"alias":"myAlias","endpoint":"bc/X"},"notes":["`endpoint` is the original endpoint of the API. `endpoint` should only include the part of the endpoint after `/ext/`.","The API being aliased can now be called at `ext/alias`.","`alias` can be at most 512 characters."]},{"id":"admin.aliasChain","endpoint":"/ext/admin","description":"Give a blockchain an alias, a different name that can be used any place the blockchain’s ID is used.","signature":"admin.aliasChain({\\n    chain: string,\\n    alias: string\\n}) -> {\\n    success: bool\\n}","formals":{"chain":"string","alias":"string"},"returns":{"success":"bool"},"example":{"chain":"sV6o671RtkGBcno1FiaDbVcFv2sG5aVXMZYzKdP4VQAWmJQnM","alias":"myBlockchainAlias"},"notes":["`chain` is the blockchain’s ID.","`alias` can now be used in place of the blockchain’s ID (in API endpoints, for example.)"]},{"id":"admin.lockProfile","endpoint":"/ext/admin","description":"Writes a profile of mutex statistics to `lock.profile`.","signature":"admin.lockProfile() -> {\\n    success: bool\\n}","returns":{"success":"bool"},"example":{}},{"id":"admin.memoryProfile","endpoint":"/ext/admin","description":"Writes a memory profile of the to `mem.profile`.","signature":"admin.memoryProfile() -> {\\n    success: bool\\n}","returns":{"success":"bool"},"example":{}},{"id":"admin.startCPUProfiler","endpoint":"/ext/admin","description":"Start profiling the CPU utilization of the node. To stop, call `stopCPUProfiler`. On stop, writes the profile to `cpu.profile`.","signature":"admin.startCPUProfiler() -> {\\n    success: bool\\n}","returns":{"success":"bool"},"example":{}},{"id":"admin.stopCPUProfiler","endpoint":"/ext/admin","description":"Stop the CPU profile that was previously started.","signature":"admin.stopCPUProfiler() -> {\\n    success: bool\\n}","returns":{"success":"bool"}}]}')},function(e){e.exports=JSON.parse('{"id":"auth","name":"Auth API","description":"When you run a node, you can require that API calls have an authorization token attached. This API manages the creation and revocation of authorization tokens.\\n\\nAn authorization token provides access to one or more API endpoints. This is is useful for delegating access to a node’s APIs. Tokens expire after 12 hours.\\n\\nAn authorization token is provided in the header of an API call. Specifically, the header `Authorization` should have value `Bearer TOKEN.GOES.HERE` (where `TOKEN.GOES.HERE` is replaced with the token).\\n\\nThis API is only reachable if the node is started with [command line argument ](https://docs.avax.network/build/references/command-line-interface)`--api-auth-required`. If the node is started without this CLI, API calls do not require authorization tokens, so this API is not reachable. This API never requires an authorization token to be reached.\\n\\nAuthorization token creation must be permissioned. If you run your node with `--api-auth-required`, you must also specify an authorization token password with argument `--api-auth-password`. You must provide this password in order to create/revoke authorization tokens.\\n\\nNote that if you run your node with `--api-auth-required` then some tools like MetaMask may not be able to make API calls to your node because they don’t have an auth token.\\n","methods":[{"id":"auth.newToken","endpoint":"/ext/auth","description":"Creates a new authorization token that grants access to one or more API endpoints.","signature":"auth.newToken({\\n    password: string,\\n    endpoints: []string\\n}) -> {\\n    token: string\\n}","formals":{"password":"string","endpoints":"[]string"},"returns":{"token":"string"},"example":{"password":"YOUR PASSWORD GOES HERE","endpoints":["/ext/bc/X","/ext/info"]},"notes":["`password` is this node’s authorization token password.","`endpoints` is a list of endpoints that will be accessible using the generated token. If `endpoints` contains an element `\\"*\\"`, the generated token can access any API endpoint.","`token` is the authorization token."]},{"id":"auth.revokeToken","endpoint":"/ext/auth","description":"Revoke a previously generated token. The given token will no longer grant access to any endpoint. If the token is invalid, does nothing.","signature":"auth.revokeToken({\\n    password: string,\\n    token: string\\n}) -> {\\n    success: bool\\n}","formals":{"password":"string","token":"string"},"returns":{"success":"bool"},"example":{"password":"123","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1OTMxNzIzMjh9.qZVNhH6AMQ_LpbXnPbTFEL6Vm5EM5FLU-VEKpYBH3k4"},"notes":["`password` is this node’s authorization token password.","`token` is the authorization token being revoked."]},{"id":"auth.changePassword","endpoint":"/ext/auth","description":"Change this node’s authorization token password. Any authorization tokens created under an old password will become invalid.","signature":"auth.changePassword({\\n    oldPassword: string,\\n    newPassword: string\\n}) -> {\\n    success: bool\\n}","formals":{"oldPassword":"string","newPassword":"string"},"returns":{"success":"bool"},"example":{"oldPassword":"OLD PASSWORD HERE","newPassword":"NEW PASSWORD HERE"},"notes":["`oldPassword` is this node’s current authorization token password.","`newPassword` is the node’s new authorization token password after this API call. Must be between 1 and 1024 characters."]}]}')},function(e){e.exports=JSON.parse('{"id":"contract","name":"Contract Chain (C-Chain) API","description":"\\n\\n_Note: Ethereum has its own notion of `networkID` and `chainID`. These have no relationship to Avalanche’s view of networkID and chainID and are purely internal to the_ [_C-Chain_](https://docs.avax.network/learn/platform-overview/#contract-chain-c-chain)_. On Mainnet, the C-Chain uses `1` and `43114` for these values. On the Fuji Testnet, it uses `1` and `43113` for these values. `networkID` anc `chainID` can also be obtained using the `net_version` and `eth_chainId` methods shown below._\\n","methods":[{"id":"avax.export","endpoint":"/ext/bc/C/avax","description":"Export an asset from the C-Chain to the X-Chain. After calling this method, you must call [`avm.import`](exchange#avm-import) on the X-Chain to complete the transfer.","signature":"avax.export({\\n    to: string,\\n    amount: int,\\n    assetID: string,\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string\\n}","formals":{"to":"string","amount":"int","assetID":"string","username":"string","password":"string"},"returns":{"txID":"string"},"example":{"to":"X-avax1q9c6ltuxpsqz7ul8j0h0d0ha439qt70sr3x2m0","amount":500,"assetID":"2nzgmhZLuVq8jc7NNu2eahkKwoJcbFWXWJCxHBVWAJEZkhquoK","username":"myUsername","password":"myPassword"},"notes":["`to` is the X-Chain address the asset is sent to.","`amount` is the amount of the asset to send.","`assetID` is the ID of the asset. To export AVAX use `\\"AVAX\\"` as the `assetID`.","The asset is sent from addresses controlled by `username` and `password`."]},{"id":"avax.exportAVAX","endpoint":"/ext/bc/C/avax","description":"**DEPRECATED—instead use** [**avax.export**](contract#avax-export).\\n\\nSend AVAX from the C-Chain to the X-Chain. After calling this method, you must call [`avm.importAVAX`](exchange#avm-importavax) on the X-Chain to complete the transfer.","signature":"```go\\navax.exportAVAX({\\n    from: []string,\\n    to: string,\\n    amount: int,\\n    destinationChain: string,\\n    changeAddr: string,\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string\\n}","formals":{"from":"[]string","to":"string","amount":"int","destinationChain":"string","changeAddr":"string","username":"string","password":"string"},"returns":{"txID":"string"},"example":{"from":["0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC"],"to":"X-avax1q9c6ltuxpsqz7ul8j0h0d0ha439qt70sr3x2m0","amount":500,"destinationChain":"X","changeAddr":"0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC","username":"myUsername","password":"myPassword"},"notes":["`from` is the C-Chain addresses the AVAX is sent from. They should be in hex format.","`to` is the X-Chain address the AVAX is sent to. It should be in bech32 format.","`amount` is the amount of nAVAX to send.","`destinationChain` is the chain the AVAX is sent to. To export funds to the X-Chain, use `\\"X\\"`.","`changeAddr` is the C-Chain address where any change is sent to. It should be in hex format.","The AVAX is sent from addresses controlled by `username`","`txID` is the txid of the completed ExportTx."]},{"id":"avax.exportKey","endpoint":"/ext/bc/C/avax","description":"Get the private key that controls a given address. The returned private key can be added to a user with `avax.importKey`.","signature":"```go\\navax.exportKey({\\n    username: string,\\n    password: string,\\n    address: string\\n}) -> {\\n    privateKey: string\\n}","formals":{"username":"string","password":"string","address":"string"},"returns":{"privateKey":"string"},"example":{"username":"myUsername","password":"myPassword","address":"0xc876DF0F099b3eb32cBB78820d39F5813f73E18C"},"notes":["`username` must control `address`.","`address` is the address for which you want to export the corresponding private key. It should be in hex format.","`privateKey` is the CB58 endcoded string representation of the private key that controls `address`. It has a `PrivateKey-` prefix and can be used to import a key via `avax.importKey`.","`privateKeyHex` is the hex string representation of the private key that controls `address`. It can be used to import an account into Metamask."]},{"id":"avax.getUTXOs","endpoint":"/ext/bc/C/avax","description":"Gets the UTXOs that reference a given address.","signature":"avax.getUTXOs({\\n    addresses: string,\\n    limit: int, (optional)\\n    startIndex: { (optional)\\n        address: string,\\n        utxo: string\\n    },\\n    sourceChain: string,\\n    encoding: string (optional)\\n}) -> {\\n    numFetched: int,\\n    utxos: []string,\\n    endIndex: {\\n        address: string,\\n        utxo: string\\n    }\\n}","formals":{"addresses":"string","limit":"?int","startIndex":"?object","sourceChain":"string","encoding":"?string"},"returns":{"numFetched":"int","utxos":"[]string","endIndex":"object"},"example":{"addresses":["C-avax1yzt57wd8me6xmy3t42lz8m5lg6yruy79m6whsf"],"sourceChain":"X","startIndex":{"address":"C-avax1yzt57wd8me6xmy3t42lz8m5lg6yruy79m6whsf","utxo":"22RXW7SWjBrrxu2vzDkd8uza7fuEmNpgbj58CxBob9UbP37HSB"},"encoding":"cb58"},"notes":["`utxos` is a list of UTXOs such that each UTXO references at least one address in `addresses`.","At most `limit` UTXOs are returned. If `limit` is omitted or greater than 1024, it is set to 1024.","This method supports pagination. `endIndex` denotes the last UTXO returned. To get the next set of UTXOs, use the value of `endIndex` as `startIndex` in the next call.","If `startIndex` is omitted, will fetch all UTXOs up to `limit`.","When using pagination (ie when `startIndex` is provided), UTXOs are not guaranteed to be unique across multiple calls. That is, a UTXO may appear in the result of the first call, and then again in the second call.","When using pagination, consistency is not guaranteed across multiple calls. That is, the UTXO set of the addresses may have changed between calls.","`encoding` sets the format for the returned UTXOs. Can be either “cb58” or “hex”. Defaults to “cb58”."]},{"id":"avax.import","endpoint":"/ext/bc/C/avax","description":"Finalize the transfer of a non-AVAX or AVAX from the X-Chain to the C-Chain. Before this method is called, you must call the X-Chain\'s [`avm.export`](exchange#avm-export) method to initiate the transfer.","signature":"```go\\navax.import({\\n    to: string,\\n    sourceChain: string,\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string\\n}","formals":{"to":"string","sourceChain":"string","username":"string","password":"string"},"returns":{"txID":"string"},"example":{"to":"0x4b879aff6b3d24352Ac1985c1F45BA4c3493A398","sourceChain":"X","username":"myUsername","password":"myPassword"},"notes":["`to` is the address the asset is sent to. This must be the same as the `to` argument in the corresponding call to the C-Chain\'s `export`.","`sourceChain` is the ID or alias of the chain the asset is being imported from. To import funds from the X-Chain, use `\\"X\\"`.","`username` is the user that controls `to`.","`txID` is the ID of the completed ImportTx."]},{"id":"avax.importAVAX","endpoint":"/ext/bc/C/avax","description":"**DEPRECATED—instead use** [**avax.import**](contract#avax-import)\\n\\nFinalize a transfer of AVAX from the X-Chain to the C-Chain. Before this method is called, you must call the X-Chain\'s [`avm.exportAVAX`](exchange#avm-exportavax) method to initiate the transfer.","signature":"```go\\navax.importAVAX({\\n    to: string,\\n    sourceChain: string,\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string\\n}","formals":{"to":"string","sourceChain":"string","username":"string","password":"string"},"returns":{"txID":"string"},"example":{"to":"0x4b879aff6b3d24352Ac1985c1F45BA4c3493A398","sourceChain":"X","username":"myUsername","password":"myPassword"},"notes":["`to` is the address the AVAX is sent to. It should be in hex format.","`sourceChain` is the ID or alias of the chain the AVAX is being imported from. To import funds from the X-Chain, use `\\"X\\"`.","`username` is the user that controls `to`.","`txID` is the ID of the completed ImportTx."]},{"id":"avax.importKey","endpoint":"/ext/bc/C/avax","description":"Give a user control over an address by providing the private key that controls the address.","signature":"```go\\navax.importKey({\\n    username: string,\\n    password: string,\\n    privateKey: string\\n}) -> {\\n    address: string\\n}","formals":{"username":"string","password":"string","privateKey":"string"},"returns":{"address":"string"},"example":{"username":"myUsername","password":"myPassword","privateKey":"PrivateKey-2o2uPgTSf3aR5nW6yLHjBEAiatAFKEhApvYzsjvAJKRXVWCYkE"},"notes":["Add `privateKey` to `username`\'s set of private keys.","`address` is the address `username` now controls with the private key. It will be in hex format."]}]}')},function(e){e.exports=JSON.parse('{"id":"exchange","name":"Exchange Chain (X-Chain) API","description":"\\n\\nThe [X-Chain](https://docs.avax.network/learn/platform-overview/#exchange-chain-x-chain), Avalanche’s native platform for creating and trading assets, is an instance of the Avalanche Virtual Machine (AVM). This API allows clients to create and trade assets on the X-Chain and other instances of the AVM.\\n\\n_External ressource: [Youtube.com](https://www.youtube.com/watch?v=rD-IOd1nvFo)_\\n","methods":[{"id":"avm.buildGenesis","endpoint":"/ext/vm/avm","description":"Given a JSON representation of this Virtual Machine’s genesis state, create the byte representation of that state.","signature":"avm.buildGenesis({\\n    genesisData: JSON,\\n    encoding: string (optional)\\n}) -> {\\n    bytes: string,\\n    encoding: string\\n}","formals":{"genesisData":"object","encoding":"?string"},"returns":{"bytes":"string","encoding":"string"},"example":{"genesisData":{"asset1":{"name":"myFixedCapAsset","symbol":"MFCA","initialState":{"fixedCap":[{"amount":100000,"address":"avax13ery2kvdrkd2nkquvs892gl8hg7mq4a6ufnrn6"},{"amount":100000,"address":"avax1rvks3vpe4cm9yc0rrk8d5855nd6yxxutfc2h2r"},{"amount":50000,"address":"avax1ntj922dj4crc4pre4e0xt3dyj0t5rsw9uw0tus"},{"amount":50000,"address":"avax1yk0xzmqyyaxn26sqceuky2tc2fh2q327vcwvda"}]}},"asset2":{"name":"myVarCapAsset","symbol":"MVCA","initialState":{"variableCap":[{"minters":["avax1kcfg6avc94ct3qh2mtdg47thsk8nrflnrgwjqr","avax14e2s22wxvf3c7309txxpqs0qe9tjwwtk0dme8e"],"threshold":1},{"minters":["avax1y8pveyn82gjyqr7kqzp72pqym6xlch9gt5grck","avax1c5cmm0gem70rd8dcnpel63apzfnfxye9kd4wwe","avax12euam2lwtwa8apvfdl700ckhg86euag2hlhmyw"],"threshold":2}]}}},"encoding":"hex"}},{"id":"avm.createAddress","endpoint":"/ext/bc/X","description":"Create a new address controlled by the given user.","signature":"avm.createAddress({\\n    username: string,\\n    password: string\\n}) -> {\\n    address: string\\n}","formals":{"username":"string","password":"string"},"returns":{"address":"string"},"example":{"username":"myUsername","password":"myPassword"}},{"id":"avm.createFixedCapAsset","endpoint":"/ext/bc/X","description":"Create a new fixed-cap, fungible asset. A quantity of it is created at initialization and then no more is ever created. The asset can be sent with `avm.send`.\\n\\n_Related documentation: [Create a fix cap asset](https://docs.avax.network/build/tutorials/smart-digital-assets/create-a-fix-cap-asset)_","signature":"avm.createFixedCapAsset({\\n    name: string,\\n    symbol: string,\\n    denomination: int, (optional)\\n    initialHolders: []{\\n        address: string,\\n        amount: int\\n    },\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    assetID: string,\\n    changeAddr: string\\n}","formals":{"name":"string","symbol":"string","denomination":"?int","initialHolders":"[]object","from":"?[]string","changeAddr":"?string","username":"string","password":"string"},"returns":{"assetID":"string","changeAddr":"string"},"example":{"name":"myFixedCapAsset","symbol":"MFCA","initialHolders":[{"address":"X-avax1s65kep4smpr9cnf6uh9cuuud4ndm2z4jguj3gp","amount":10000},{"address":"X-avax1y0h66sjk0rlnh9kppnfskwpw2tpcluzxh9png8","amount":50000}],"from":["X-avax1s65kep4smpr9cnf6uh9cuuud4ndm2z4jguj3gp"],"changeAddr":"X-avax1turszjwn05lflpewurw96rfrd3h6x8flgs5uf8","username":"myUsername","password":"myPassword"},"notes":["`name` is a human-readable name for the asset. Not necessarily unique.","`symbol` is a shorthand symbol for the asset. Between 0 and 4 characters. Not necessarily unique. May be omitted.","`denomination` determines how balances of this asset are displayed by user interfaces. If `denomination` is 0, 100 units of this asset are displayed as 100. If `denomination` is 1, 100 units of this asset are displayed as 10.0. If `denomination` is 2, 100 units of this asset are displays as .100, etc. Defaults to 0.","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","`username` and `password` denote the user paying the transaction fee.","Each element in `initialHolders` specifies that `address` holds `amount` units of the asset at genesis.","`assetID` is the ID of the new asset."]},{"id":"avm.mint","endpoint":"/ext/bc/X","description":"Mint units of a variable-cap asset created with [`avm.createVariableCapAsset`](#avm-createvariablecapasset).","signature":"avm.mint({\\n    amount: int,\\n    assetID: string,\\n    to: string,\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string,\\n    changeAddr: string\\n}","formals":{"amount":"int","assetID":"string","to":"string","from":"?[]string","changeAddr":"?string","username":"string","password":"string"},"returns":{"txID":"string","changeAddr":"string"},"example":{"amount":10000000,"assetID":"i1EqsthjiFTxunrj8WD2xFSrQ5p2siEKQacmCCB5qBFVqfSL2","to":"X-avax1ap39w4a7fk0au083rrmnhc2pqk20yjt6s3gzkx","from":["X-avax1s65kep4smpr9cnf6uh9cuuud4ndm2z4jguj3gp"],"changeAddr":"X-avax1turszjwn05lflpewurw96rfrd3h6x8flgs5uf8","username":"USERNAME GOES HERE","password":"PASSWORD GOES HERE"},"notes":["`amount` units of `assetID` will be created and controlled by address `to`.","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","`username` is the user that pays the transaction fee. `username` must hold keys giving it permission to mint more of this asset. That is, it must control at least _threshold_ keys for one of the minter sets.","`txID` is this transaction’s ID.","`changeAddr` in the result is the address where any change was sent."]},{"id":"avm.createVariableCapAsset","endpoint":"/ext/bc/X","description":"Create a new variable-cap, fungible asset. No units of the asset exist at initialization. Minters can mint units of this asset using `avm.mint`.\\n\\n_Related documentation: [Creating a variable cap asset](https://docs.avax.network/build/tutorials/smart-digital-assets/creating-a-variable-cap-asset)_","signature":"avm.createVariableCapAsset({\\n    name: string,\\n    symbol: string,\\n    denomination: int, (optional)\\n    minterSets: []{\\n        minters: []string,\\n        threshold: int\\n    },\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    assetID: string,\\n    changeAddr: string\\n}","formals":{"name":"string","symbol":"string","denomination":"?int","minterSets":"[]object","from":"?[]string","changeAddr":"?string","username":"string","password":"string"},"returns":{"assetID":"string","changeAddr":"string"},"example":{"name":"myVariableCapAsset","symbol":"MFCA","minterSets":[{"minters":["X-avax14q0p6y4yzweuugz9p080kapajwvac3ur755n7d"],"threshold":1},{"minters":["X-avax1fzyldr3mwn6lj7y46edhua6vr5ayx0ruuhezpv","X-avax1x5mrgxj0emysnnzyszamqxhq95t2kwcp9n3fy3","X-avax13zmrjvj75h3578rn3sfth8p64t2ll4gm4tv2rp"],"threshold":2}],"from":["X-avax1s65kep4smpr9cnf6uh9cuuud4ndm2z4jguj3gp"],"changeAddr":"X-avax1turszjwn05lflpewurw96rfrd3h6x8flgs5uf8","username":"myUsername","password":"myPassword"},"notes":["`name` is a human-readable name for the asset. Not necessarily unique.","`symbol` is a shorthand symbol for the asset. Between 0 and 4 characters. Not necessarily unique. May be omitted.","`denomination` determines how balances of this asset are displayed by user interfaces. If denomination is 0, 100 units of this asset are displayed as 100. If denomination is 1, 100 units of this asset are displayed as 10.0. If denomination is 2, 100 units of this asset are displays as .100, etc.","`minterSets` is a list where each element specifies that `threshold` of the addresses in `minters` may together mint more of the asset by signing a minting transaction.","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","`username` pays the transaction fee.","`assetID` is the ID of the new asset.","`changeAddr` in the result is the address where any change was sent."]},{"id":"avm.createNFTAsset","endpoint":"/ext/bc/X","description":"Create a new non-fungible asset. No units of the asset exist at initialization. Minters can mint units of this asset using `avm.mintNFT`.\\n\\n_Related documentation: [Creating a NFT part 1](https://docs.avax.network/build/tutorials/smart-digital-assets/creating-a-nft-part-1)_","signature":"avm.createNFTAsset({\\n    name: string,\\n    symbol: string,\\n    minterSets: []{\\n        minters: []string,\\n        threshold: int\\n    },\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    assetID: string,\\n    changeAddr: string\\n}","formals":{"name":"string","symbol":"string","minterSets":"[]object","from":"?[]string","changeAddr":"?string","username":"string","password":"string"},"returns":{"assetID":"string","changeAddr":"string"},"example":{"name":"Coincert","symbol":"TIXX","minterSets":[{"minters":["X-avax1turszjwn05lflpewurw96rfrd3h6x8flgs5uf8"],"threshold":1}],"from":["X-avax1turszjwn05lflpewurw96rfrd3h6x8flgs5uf8"],"changeAddr":"X-avax1turszjwn05lflpewurw96rfrd3h6x8flgs5uf8","username":"myUsername","password":"myPassword"},"notes":["`name` is a human-readable name for the asset. Not necessarily unique.","`symbol` is a shorthand symbol for the asset. Between 0 and 4 characters. Not necessarily unique. May be omitted.","`minterSets` is a list where each element specifies that `threshold` of the addresses in `minters` may together mint more of the asset by signing a minting transaction.","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","`username` pays the transaction fee.","`assetID` is the ID of the new asset.","`changeAddr` in the result is the address where any change was sent."]},{"id":"avm.mintNFT","endpoint":"/ext/bc/X","description":"Mint non-fungible tokens which were created with [`avm.createNFTAsset`](#avm-createnftasset).\\n\\n_Related documentation: [Creating a NFT part 1](https://docs.avax.network/build/tutorials/smart-digital-assets/creating-a-nft-part-1)_","signature":"avm.mintNFT({\\n    assetID: string,\\n    payload: string,\\n    to: string,\\n    encoding: string, (optional)\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string,\\n    changeAddr: string\\n}","formals":{"assetID":"string","payload":"string","to":"string","encoding":"?string","from":"?[]string","changeAddr":"?string","username":"string","password":"string"},"returns":{"txID":"string","changeAddr":"string"},"example":{"assetID":"2KGdt2HpFKpTH5CtGZjYt5XPWs6Pv9DLoRBhiFfntbezdRvZWP","payload":"2EWh72jYQvEJF9NLk","to":"X-avax1ap39w4a7fk0au083rrmnhc2pqk20yjt6s3gzkx","from":["X-avax1s65kep4smpr9cnf6uh9cuuud4ndm2z4jguj3gp"],"changeAddr":"X-avax1turszjwn05lflpewurw96rfrd3h6x8flgs5uf8","username":"USERNAME GOES HERE","password":"PASSWORD GOES HERE"},"notes":["`assetID` is the assetID of the newly created NFT asset.","`payload` is an arbitrary payload of up to 1024 bytes. Its encoding format is specified by the `encoding` argument.","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","`username` is the user that pays the transaction fee. `username` must hold keys giving it permission to mint more of this asset. That is, it must control at least _threshold_ keys for one of the minter sets.","`txID` is this transaction’s ID.","`changeAddr` in the result is the address where any change was sent.","`encoding` is the encoding format to use for the payload argument. Can be either “cb58” or “hex”. Defaults to “cb58”."]},{"id":"avm.export","endpoint":"/ext/bc/X","description":"Send a non-AVAX from the X-Chain to the P-Chain or C-Chain. After calling this method, you must call [`avax.import`](contract-chain-c-chain-api#avax-import) on the C-Chain to complete the transfer.","signature":"avm.export({\\n    to: string,\\n    amount: int,\\n    assetID: string,\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string,\\n    changeAddr: string\\n}","formals":{"to":"string","amount":"int","assetID":"string","from":"?[]string","changeAddr":"?string","username":"string","password":"string"},"returns":{"txID":"string","changeAddr":"string"},"example":{"to":"C-avax1q9c6ltuxpsqz7ul8j0h0d0ha439qt70sr3x2m0","amount":500,"assetID":"2YmsQfMaCczE4mLG1DPYUnRURNGfhjj4qrqnLRR3LmZ3GxDWPt","from":["X-avax1s65kep4smpr9cnf6uh9cuuud4ndm2z4jguj3gp"],"changeAddr":"X-avax1turszjwn05lflpewurw96rfrd3h6x8flgs5uf8","username":"myUsername","password":"myPassword"},"notes":["`to` is the P-Chain or C-Chain address the asset is sent to.","`amount` is the amount of the asset to send.","`assetID` is the asset id of the asset which is sent.","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","The asset is sent from addresses controlled by `username`","`txID` is this transaction’s ID.","`changeAddr` in the result is the address where any change was sent."]},{"id":"avm.exportAVAX","endpoint":"/ext/bc/X","description":"Send AVAX from the X-Chain to another chain. After calling this method, you must call `import` on the other chain to complete the transfer.","signature":"avm.exportAVAX({\\n    to: string,\\n    amount: int,\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string,\\n    changeAddr: string\\n}","formals":{"to":"string","amount":"int","from":"?[]string","changeAddr":"?string","username":"string","password":"string"},"returns":{"txID":"string","changeAddr":"string"},"example":{"to":"P-avax1q9c6ltuxpsqz7ul8j0h0d0ha439qt70sr3x2m0","amount":500,"from":["X-avax1s65kep4smpr9cnf6uh9cuuud4ndm2z4jguj3gp"],"changeAddr":"X-avax1turszjwn05lflpewurw96rfrd3h6x8flgs5uf8","username":"myUsername","password":"myPassword"},"notes":["`to` is the P-Chain address the AVAX is sent to.","`amount` is the amount of nAVAX to send.","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","The AVAX is sent from addresses controlled by `username`","`txID` is this transaction’s ID.","`changeAddr` in the result is the address where any change was sent."]},{"id":"avm.exportKey","endpoint":"/ext/bc/X","description":"Get the private key that controls a given address.   The returned private key can be added to a user with [`avm.importKey`](#avm-importkey).","signature":"avm.exportKey({\\n    username: string,\\n    password: string,\\n    address: string\\n}) -> {\\n    privateKey: string\\n}","formals":{"username":"string","password":"string","address":"string"},"returns":{"privateKey":"string"},"example":{"username":"myUsername","password":"myPassword","address":"X-avax1jggdngzc9l87rgurmfu0z0n0v4mxlqta0h3k6e"},"notes":["`username` must control `address`.","`privateKey` is the string representation of the private key that controls `address`."]},{"id":"avm.getAllBalances","endpoint":"/ext/bc/X","description":"Get the balances of all assets controlled by a given address.","signature":"avm.getAllBalances({\\n    address: string\\n}) -> {\\n    balances: []{\\n        asset: string,\\n        balance: int\\n    }\\n}","formals":{"address":"string"},"returns":{"balances":"[]object"},"example":{"address":"X-avax1c79e0dd0susp7dc8udq34jgk2yvve7haclsz5r"}},{"id":"avm.getAssetDescription","endpoint":"/ext/bc/X","description":"Get information about an asset.","signature":"avm.getAssetDescription({\\n    assetID: string\\n}) -> {\\n    name: string,\\n    symbol: string,\\n    denomination: int\\n}","formals":{"assetID":"string"},"returns":{"name":"string","symbol":"string","denomination":"int"},"example":{"assetID":"ZiKfqRXCZgHLgZ4rxGU9Qbycdzuq5DRY4tdSNS9ku8kcNxNLD"},"notes":["`name` is the asset’s human-readable, not necessarily unique name.","`symbol` is the asset’s symbol.","`denomination` determines how balances of this asset are displayed by user interfaces. If denomination is 0, 100 units of this asset are displayed as 100. If denomination is 1, 100 units of this asset are displayed as 10.0. If denomination is 2, 100 units of this asset are displays as .100, etc."]},{"id":"avm.getBalance","endpoint":"/ext/bc/X","description":"Get the balance of an asset controlled by a given address.","signature":"avm.getBalance({\\n    address: string,\\n    assetID: string\\n}) -> {\\n    balance: int\\n}","formals":{"address":"string","assetID":"string"},"returns":{"balance":"int"},"example":{"address":"X-avax1ns3jzhqyk7parg29qan56k0fcxwstc76cjqq2s","assetID":"2pYGetDWyKdHxpFxh2LHeoLNCH6H5vxxCxHQtFnnFaYxLsqtHC"}},{"id":"avm.getTx","endpoint":"/ext/bc/X","description":"Returns the specified transaction. The `encoding` parameter sets the format of the returned transaction. Can be either “cb58” or “hex”. Defaults to “cb58”.","signature":"avm.getTx({\\n    txID: string,\\n    encoding: string (optional)\\n}) -> {\\n    tx: string,\\n    encoding: string\\n}","formals":{"txID":"string","encoding":"?string"},"returns":{"tx":"string","encoding":"string"},"example":{"txID":"2QouvFWUbjuySRxeX5xMbNCuAaKWfbk5FeEa2JmoF85RKLk2dD","encoding":"cb58"}},{"id":"avm.getTxStatus","endpoint":"/ext/bc/X","description":"Get the status of a transaction sent to the network.","signature":"avm.getTxStatus({\\n    txID: string\\n}) -> {\\n    status: string\\n}","formals":{"txID":"string"},"returns":{"status":"string"},"example":{"txID":"2QouvFWUbjuySRxeX5xMbNCuAaKWfbk5FeEa2JmoF85RKLk2dD"},"notes":["`Accepted`: The transaction is (or will be) accepted by every node","`Processing`: The transaction is being voted on by this node","`Rejected`: The transaction will never be accepted by any node in the network","`Unknown`: The transaction hasn’t been seen by this node"]},{"id":"avm.getUTXOs","endpoint":"/ext/bc/X","description":"Gets the UTXOs that reference a given address. If sourceChain is specified, then it will retrieve the atomic UTXOs exported from that chain to the X Chain.","signature":"avm.getUTXOs({\\n    addresses: string,\\n    limit: int, (optional)\\n    startIndex: { (optional)\\n        address: string,\\n        utxo: string\\n    },\\n    sourceChain: string, (optional)\\n    encoding: string (optional)\\n}) -> {\\n    numFetched: int,\\n    utxos: []string,\\n    endIndex: {\\n        address: string,\\n        utxo: string\\n    }\\n}","formals":{"addresses":"string","limit":"?int","startIndex":"?object","sourceChain":"?string","encoding":"?string"},"returns":{"numFetched":"int","utxos":"[]string","endIndex":"object"},"example":{"addresses":["X-avax1yzt57wd8me6xmy3t42lz8m5lg6yruy79m6whsf","X-avax1x459sj0ssujguq723cljfty4jlae28evjzt7xz"],"limit":5,"encoding":"cb58"},"notes":["`utxos` is a list of UTXOs such that each UTXO references at least one address in `addresses`.","At most `limit` UTXOs are returned. If `limit` is omitted or greater than 1024, it is set to 1024.","This method supports pagination. `endIndex` denotes the last UTXO returned. To get the next set of UTXOs, use the value of `endIndex` as `startIndex` in the next call.","If `startIndex` is omitted, will fetch all UTXOs up to `limit`.","When using pagination (ie when `startIndex` is provided), UTXOs are not guaranteed to be unique across multiple calls. That is, a UTXO may appear in the result of the first call, and then again in the second call.","When using pagination, consistency is not guaranteed across multiple calls. That is, the UTXO set of the addresses may have changed between calls.","`encoding` sets the format for the returned UTXOs. Can be either “cb58” or “hex”. Defaults to “cb58”."]},{"id":"avm.import","endpoint":"/ext/bc/X","description":"Finalize a transfer of AVAX from the P-Chain or C-Chain to the X-Chain. Before this method is called, you must call the P-Chain’s [`platform.exportAVAX`](platform-chain-p-chain-api#platform-exportavax) or C-Chain’s [`avax.export`](contract-chain-c-chain-api#avax-export) method to initiate the transfer.","signature":"avm.import({\\n    to: string,\\n    sourceChain: string,\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string\\n}","formals":{"to":"string","sourceChain":"string","username":"string","password":"string"},"returns":{"txID":"string"},"example":{"to":"X-avax1s7aygrkrtxflmrlyadlhqu70a6f4a4n8l2tru8","sourceChain":"C","username":"myUsername","password":"myPassword"},"notes":["`to` is the address the AVAX is sent to. This must be the same as the `to` argument in the corresponding call to the P-Chain’s `exportAVAX` or C-Chain\'s `export`.","`sourceChain` is the ID or alias of the chain the AVAX is being imported from. To import funds from the C-Chain, use `\\"C\\"`.","`username` is the user that controls `to`."]},{"id":"avm.importAVAX","endpoint":"/ext/bc/X","description":"Finalize a transfer of AVAX from the P-Chain to the X-Chain. Before this method is called, you must call the P-Chain’s [`platform.exportAVAX`](platform-chain-p-chain-api#platform-exportavax) method to initiate the transfer.","signature":"avm.importAVAX({\\n    to: string,\\n    sourceChain: string,\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string\\n}","formals":{"to":"string","sourceChain":"string","username":"string","password":"string"},"returns":{"txID":"string"},"example":{"to":"X-avax1s7aygrkrtxflmrlyadlhqu70a6f4a4n8l2tru8","sourceChain":"P","username":"myUsername","password":"myPassword"},"notes":["`to` is the address the AVAX is sent to. This must be the same as the `to` argument in the corresponding call to the P-Chain’s `exportAVAX`.","`sourceChain` is the ID or alias of the chain the AVAX is being imported from. To import funds from the P-Chain, use `\\"P\\"`.","`username` is the user that controls `to`."]},{"id":"avm.importKey","endpoint":"/ext/bc/X","description":"Give a user control over an address by providing the private key that controls the address.","signature":"avm.importKey({\\n    username: string,\\n    password: string,\\n    privateKey: string\\n}) -> {\\n    address: string\\n}","formals":{"username":"string","password":"string","privateKey":"string"},"returns":{"address":"string"},"example":{"username":"myUsername","password":"myPassword","privateKey":"PrivateKey-2w4XiXxPfQK4TypYqnohRL8DRNTz9cGiGmwQ1zmgEqD9c9KWLq"},"notes":["Add `privateKey` to `username`‘s set of private keys. `address` is the address `username` now controls with the private key."]},{"id":"avm.issueTx","endpoint":"/ext/bc/X","description":"Send a signed transaction to the network. `encoding` specifies the format of the signed transaction. Can be either “cb58” or “hex”. Defaults to “cb58”.","signature":"avm.issueTx({\\n    tx: string,\\n    encoding: string (optional)\\n}) -> {\\n    txID: string,\\n    encoding: string\\n}","formals":{"tx":"string","encoding":"?string"},"returns":{"txID":"string","encoding":"string"},"example":{"tx":"6sTENqXfk3gahxkJbEPsmX9eJTEFZRSRw83cRJqoHWBiaeAhVbz9QV4i6SLd6Dek4eLsojeR8FbT3arFtsGz9ycpHFaWHLX69edJPEmj2tPApsEqsFd7wDVp7fFxkG6HmySR","encoding":"cb58"}},{"id":"avm.listAddresses","endpoint":"/ext/bc/X","description":"List addresses controlled by the given user.","signature":"avm.listAddresses({\\n    username: string,\\n    password: string\\n}) -> {\\n    addresses: []string\\n}","formals":{"username":"string","password":"string"},"returns":{"addresses":"[]string"},"example":{"username":"myUsername","password":"myPassword"}},{"id":"avm.send","endpoint":"/ext/bc/X","description":"Send a quantity of an asset to an address.","signature":"avm.send({\\n    amount: int,\\n    assetID: string,\\n    to: string,\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    memo: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string,\\n    changeAddr: string\\n}","formals":{"amount":"int","assetID":"string","to":"string","from":"?[]string","changeAddr":"?string","memo":"?string","username":"string","password":"string"},"returns":{"txID":"string","changeAddr":"string"},"example":{"assetID":"AVAX","amount":10000,"to":"X-avax1yzt57wd8me6xmy3t42lz8m5lg6yruy79m6whsf","from":["X-avax1s65kep4smpr9cnf6uh9cuuud4ndm2z4jguj3gp"],"changeAddr":"X-avax1turszjwn05lflpewurw96rfrd3h6x8flgs5uf8","memo":"hi, mom!","username":"userThatControlsAtLeast10000OfThisAsset","password":"myPassword"},"notes":["Sends `amount` units of asset with ID `assetID` to address `to`. `amount` is denominated in the smallest increment of the asset. For AVAX this is 1 nAVAX (one billionth of 1 AVAX.)","`to` is the X-Chain address the asset is sent to.","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","You can attach a `memo`, whose length can be up to 256 bytes.","The asset is sent from addresses controlled by user `username`. (Of course, that user will need to hold at least the balance of the asset being sent.)"]},{"id":"avm.sendMultiple","endpoint":"/ext/bc/X","description":"Sends an amount of assetID to an array of specified addresses from a list of owned addresses.","signature":"avm.sendMultiple({\\n    outputs: []{\\n      assetID: string,\\n      amount: int,\\n      to: string\\n    },\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    memo: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string,\\n    changeAddr: string\\n}","formals":{"outputs":"[]object","from":"?[]string","changeAddr":"?string","memo":"?string","username":"string","password":"string"},"returns":{"txID":"string","changeAddr":"string"},"example":{"outputs":[{"assetID":"AVAX","to":"X-avax1yzt57wd8me6xmy3t42lz8m5lg6yruy79m6whsf","amount":1000000000},{"assetID":"26aqSTpZuWDAVtRmo44fjCx4zW6PDEx3zy9Qtp2ts1MuMFn9FB","to":"X-avax18knvhxx8uhc0mwlgrfyzjcm2wrd6e60w37xrjq","amount":10}],"from":["X-avax1s65kep4smpr9cnf6uh9cuuud4ndm2z4jguj3gp"],"changeAddr":"X-avax1turszjwn05lflpewurw96rfrd3h6x8flgs5uf8","memo":"hi, mom!","username":"username","password":"myPassword"},"notes":["`outputs` is an array of object literals which each contain an `assetID`, `amount` and `to`.","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","You can attach a `memo`, whose length can be up to 256 bytes.","The asset is sent from addresses controlled by user `username`. (Of course, that user will need to hold at least the balance of the asset being sent.)"]},{"id":"avm.sendNFT","endpoint":"/ext/bc/X","description":"Send a non-fungible token.","signature":"avm.sendNFT({\\n    assetID: string,\\n    groupID: number,\\n    to: string,\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string\\n}","formals":{"assetID":"string","groupID":"number","to":"string","from":"?[]string","changeAddr":"?string","username":"string","password":"string"},"returns":{"txID":"string"},"example":{"assetID":"2KGdt2HpFKpTH5CtGZjYt5XPWs6Pv9DLoRBhiFfntbezdRvZWP","groupID":0,"to":"X-avax1yzt57wd8me6xmy3t42lz8m5lg6yruy79m6whsf","from":["X-avax1s65kep4smpr9cnf6uh9cuuud4ndm2z4jguj3gp"],"changeAddr":"X-avax1turszjwn05lflpewurw96rfrd3h6x8flgs5uf8","username":"myUsername","password":"myPassword"},"notes":["`assetID` is the asset ID of the NFT of the NFT being sent.","`groupID` is the NFT group from which to send the NFT. NFT creation allows multiple groups under each NFT ID. You can issue multiple NFTs to each group.","`to` is the X-Chain address the NFT is sent to.","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed. `changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","The asset is sent from addresses controlled by user `username`. (Of course, that user will need to hold at least the balance of the NFT being sent.)"]},{"id":"wallet.send","endpoint":"/ext/bc/X/wallet","description":"Send a quantity of an asset to an address and assume the tx will be accepted so that future calls can use the modified UTXO set.","signature":"wallet.send({\\n    amount: int,\\n    assetID: string,\\n    to: string,\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    memo: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string,\\n    changeAddr: string\\n}","formals":{"amount":"int","assetID":"string","to":"string","from":"?[]string","changeAddr":"?string","memo":"?string","username":"string","password":"string"},"returns":{"txID":"string","changeAddr":"string"},"example":{"assetID":"AVAX","amount":10000,"to":"X-avax1yzt57wd8me6xmy3t42lz8m5lg6yruy79m6whsf","from":["X-avax1s65kep4smpr9cnf6uh9cuuud4ndm2z4jguj3gp"],"changeAddr":"X-avax1turszjwn05lflpewurw96rfrd3h6x8flgs5uf8","memo":"hi, mom!","username":"userThatControlsAtLeast10000OfThisAsset","password":"myPassword"},"notes":["Sends `amount` units of asset with ID `assetID` to address `to`. `amount` is denominated in the smallest increment of the asset. For AVAX this is 1 nAVAX (one billionth of 1 AVAX.)","`to` is the X-Chain address the asset is sent to.","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","You can attach a `memo`, whose length can be up to 256 bytes.","The asset is sent from addresses controlled by user `username`. (Of course, that user will need to hold at least the balance of the asset being sent.)"]},{"id":"wallet.sendMultiple","endpoint":"/ext/bc/X/wallet","description":"Sends an amount of assetID to an array of specified addresses from a list of owned of addresses and assume the tx will be accepted so that future calls can use the modified UTXO set.","signature":"wallet.sendMultiple({\\n    outputs: []{\\n      assetID: string,\\n      amount: int,\\n      to: string\\n    },\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    memo: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string,\\n    changeAddr: string\\n}","formals":{"outputs":"[]object","from":"?[]string","changeAddr":"?string","memo":"?string","username":"string","password":"string"},"returns":{"txID":"string","changeAddr":"string"},"example":{"outputs":[{"assetID":"AVAX","to":"X-avax1yzt57wd8me6xmy3t42lz8m5lg6yruy79m6whsf","amount":1000000000},{"assetID":"26aqSTpZuWDAVtRmo44fjCx4zW6PDEx3zy9Qtp2ts1MuMFn9FB","to":"X-avax18knvhxx8uhc0mwlgrfyzjcm2wrd6e60w37xrjq","amount":10}],"from":["X-avax1s65kep4smpr9cnf6uh9cuuud4ndm2z4jguj3gp"],"changeAddr":"X-avax1turszjwn05lflpewurw96rfrd3h6x8flgs5uf8","memo":"hi, mom!","username":"username","password":"myPassword"},"notes":["`outputs` is an array of object literals which each contain an `assetID`, `amount` and `to`.","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","You can attach a `memo`, whose length can be up to 256 bytes.","The asset is sent from addresses controlled by user `username`. (Of course, that user will need to hold at least the balance of the asset being sent.)"]}]}')},function(e){e.exports=JSON.parse('{"id":"health","name":"Health API","description":"This API can be used for measuring node health.\\n\\nTo get an HTTP status code response that indicates the node’s health, make a `GET` request to `/ext/health`. If the node is healthy, it will return a `200` status code. If you want more in-depth information about a node’s health, use the methods below.\\n","methods":[{"id":"health.getLiveness","endpoint":"/ext/health","description":"The node runs a set of health checks every 30 seconds, including a health check for each chain. This method returns the last set of health check results.","signature":"health.getLiveness() -> {\\n    checks: []{\\n        checkName: {\\n            message: JSON,\\n            error: JSON,\\n            timestamp: string,\\n            duration: int,\\n            contiguousFailures: int,\\n            timeOfFirstFailure: int\\n        }\\n    },\\n    healthy: bool\\n}"}]}')},function(e){e.exports=JSON.parse('{"id":"info","name":"Info API","description":"This API can be used to access basic information about the node.\\n","methods":[{"id":"info.getBlockchainID","endpoint":"/ext/info","description":"Given a blockchain’s alias, get its ID. (See [`admin.aliasChain`](admin-api#admin-aliaschain)for more context.)","signature":"info.getBlockchainID({\\n    alias: string\\n}) -> {\\n    blockchainID: string\\n}","formals":{"alias":"string"},"returns":{"blockchainID":"string"},"example":{"alias":"X"}},{"id":"info.getNetworkID","endpoint":"/ext/info","description":"Get the ID of the network this node is participating in.","signature":"info.getNetworkID() -> {\\n    networkID: int\\n}","returns":{"networkID":"int"}},{"id":"info.getNetworkName","endpoint":"/ext/info","description":"Get the name of the network this node is participating in.","signature":"info.getNetworkName() -> {\\n    networkName: string\\n}","returns":{"networkName":"string"}},{"id":"info.getNodeID","endpoint":"/ext/info","description":"Get the ID of this node.","signature":"info.getNodeID() -> {\\n    nodeID: string\\n}","returns":{"nodeID":"string"}},{"id":"info.getNodeIP","endpoint":"/ext/info","description":"Get the IP of this node.","signature":"info.getNodeIP() -> {\\n    ip: string\\n}","returns":{"ip":"string"}},{"id":"info.getNodeVersion","endpoint":"/ext/info","description":"Get the version of this node.","signature":"info.getNodeVersion() -> {\\n    version: string\\n}","returns":{"version":"string"}},{"id":"info.isBootstrapped","endpoint":"/ext/info","description":"Check whether a given chain is done bootstrapping","signature":"info.isBootstrapped({\\n    chain: string\\n}) -> {\\n    isBootstrapped: bool\\n}","formals":{"chain":"string"},"returns":{"isBootstrapped":"bool"},"example":{"chain":"X"}},{"id":"info.peers","endpoint":"/ext/info","description":"Get a description of peer connections.","signature":"info.peers() -> {\\n    numPeers: int,\\n    peers: []{\\n        ip: string,\\n        publicIP: string,\\n        nodeID: string,\\n        version: string,\\n        lastSent: string,\\n        lastReceived: string\\n    }\\n}","returns":{"numPeers":"int","peers":"[]object"}},{"id":"info.getTxFee","endpoint":"/ext/info","description":"Get the transaction fee of the network.","signature":"info.getTxFee() -> {\\n    txFee: uint64\\n}","returns":{"txFee":"uint64"}}]}')},function(e){e.exports=JSON.parse('{"id":"ipc","name":"IPC API","description":"The IPC API allows users to create UNIX domain sockets for blockchains to publish to. When the blockchain accepts a vertex/block it will publish it to a socket and the decisions contained inside will be published to another.\\n\\nA node will only expose this API if it is started with [command line argument](https://docs.avax.network/build/references/command-line-interface) `api-ipcs-enabled=true`.\\n","methods":[{"id":"ipcs.publishBlockchain","endpoint":"/ext/ipcs","description":"Register a blockchain so it publishes accepted vertices to a Unix domain socket.","signature":"ipcs.publishBlockchain({\\n    blockchainID: string\\n}) -> {\\n    consensusURL: string,\\n    decisionsURL: string\\n}","formals":{"blockchainID":"string"},"returns":{"consensusURL":"string","decisionsURL":"string"},"example":{"blockchainID":"11111111111111111111111111111111LpoYY"},"notes":["`blockchainID` is the blockchain that will publish accepted vertices.","`consensusURL` is the path of the Unix domain socket the vertices are published to.","`decisionsURL` is the path of the Unix domain socket the transactions are published to."]},{"id":"ipcs.unpublishBlockchain","endpoint":"/ext/ipcs","description":"Deregister a blockchain so that it no longer publishes to a Unix domain socket.","signature":"ipcs.unpublishBlockchain({\\n    blockchainID: string\\n}) -> {\\n    success: bool\\n}","formals":{"blockchainID":"string"},"returns":{"success":"bool"},"example":{"blockchainID":"11111111111111111111111111111111LpoYY"},"notes":["`blockchainID` is the blockchain that will no longer publish to a Unix domain socket."]}]}')},function(e){e.exports=JSON.parse('{"id":"keystore","name":"Keystore API","description":"Every node has a built-in keystore. Clients create users on the keystore, which act as identities to be used when interacting with blockchains. A keystore exists at the node level, so if you create a user on a node it exists _only_ on that node. However, users may be imported and exported using this API.\\n\\n_**You should only create a keystore user on a node that you operate, as the node operator has access to your plaintext password.**_\\n","methods":[{"id":"keystore.createUser","endpoint":"/ext/keystore","description":"Create a new user with the specified username and password.","signature":"keystore.createUser({\\n    username: string,\\n    password: string\\n}) -> {\\n    success: bool\\n}","formals":{"username":"string","password":"string"},"returns":{"success":"bool"},"example":{"username":"bob","password":"creme fraiche"},"notes":["`username` and `password` can be at most 1024 characters.","Your request will be rejected if `password` is too weak. `password` should be at least 8 characters and contain upper and lower case letters as well as numbers and symbols."]},{"id":"keystore.deleteUser","endpoint":"/ext/keystore","description":"Delete a user.","signature":"keystore.deleteUser({\\n    username: string,\\n    password: string\\n}) -> {\\n    success: bool\\n}","formals":{"username":"string","password":"string"},"returns":{"success":"bool"},"example":{"username":"bob","password":"3l33th4x0r!!1!"}},{"id":"keystore.exportUser","endpoint":"/ext/keystore","description":"Export a user. The user can be imported to another node with [`keystore.importUser`](keystore-api.md#keystore-importuser). The user’s password remains encrypted.","signature":"keystore.exportUser({\\n    username: string,\\n    password: string\\n}) -> {\\n    user: string\\n}","formals":{"username":"string","password":"string"},"returns":{"user":"string"},"example":{"username":"bob","password":"creme fraiche"}},{"id":"keystore.importUser","endpoint":"/ext/keystore","description":"Import a user. `password` must match the user’s password. `username` doesn’t have to match the username `user` had when it was exported.","signature":"keystore.importUser({\\n    username: string,\\n    password: string,\\n    user: string\\n}) -> {\\n    success: bool\\n}","formals":{"username":"string","password":"string","user":"string"},"returns":{"success":"bool"},"example":{"username":"accountNameCanBeDifferent","password":"creme fraiche","user":"4CsUh5sfVwz2jNrJXBVpoPtDsb4tZksWykqmxC5CXoDEERyhoRryq62jYTETYh53y13v7NzeReisi"}},{"id":"keystore.listUsers","endpoint":"/ext/keystore","description":"List the users in this keystore.","signature":"keystore.ListUsers() -> {\\n    users: []string\\n}","returns":{"users":"[]string"}}]}')},function(e){e.exports=JSON.parse('{"id":"platform","name":"Platform Chain (P-Chain) API","description":"This API allows clients to interact with the [P-Chain](https://docs.avax.network/learn/platform-overview/#platform-chain-p-chain), which maintains Avalanche’s [validator](https://docs.avax.network/learn/platform-overview/staking#validators) set and handles blockchain creation.\\n","methods":[{"id":"platform.addDelegator","endpoint":"/ext/P","description":"Add a delegator to the Primary Network.\\n\\nA delegator stakes AVAX and specifies a validator (the delegatee) to validate on their behalf. The delegatee has an increased probability of being sampled by other validators (weight) in proportion to the stake delegated to them.\\n\\nThe delegatee charges a fee to the delegator; the former receives a percentage of the delegator’s validation reward (if any.) A transaction that delegates stake has no fee.\\n\\nThe delegation period must be a subset of the period that the delegatee validates the Primary Network.\\n\\nNote that once you issue the transaction to add a node as a delegator, there is no way to change the parameters. **You can’t remove a stake early or change the stake amount, node ID, or reward address.** Please make sure you’re using the correct values. If you’re not sure, check out our [Developer FAQ](https://support.avalabs.org/en/collections/2618154-developer-faq) or ask for help on [Discord.](https://chat.avalabs.org/)\\n\\n_Related documentation: [Staking](https://docs.avax.network/learn/platform-overview/staking)_","signature":"platform.addDelegator({\\n    nodeID: string,\\n    startTime: int,\\n    endTime: int,\\n    stakeAmount: int,\\n    rewardAddress: string,\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string,\\n    changeAddr: string\\n}","formals":{"nodeID":"string","startTime":"int","endTime":"int","stakeAmount":"int","rewardAddress":"string","from":"?[]string","changeAddr":"?string","username":"string","password":"string"},"returns":{"txID":"string","changeAddr":"string"},"example":{"nodeID":"NodeID-MFrZFVCXPv5iCn6M9K6XduxGTYp891xXZ","rewardAddress":"P-avax1gss39m5sx6jn7wlyzeqzm086yfq2l02xkvmecy","startTime":1594102400,"endTime":1604102400,"stakeAmount":100000,"from":["P-avax1gss39m5sx6jn7wlyzeqzm086yfq2l02xkvmecy"],"changeAddr":"P-avax103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u","username":"username","password":"password"},"notes":["`nodeID` is the node ID of the delegatee.","`startTime` is the Unix time when the delegator starts delegating.","`endTime` is the Unix time when the delegator stops delegating (and staked AVAX is returned).","`stakeAmount` is the amount of nAVAX the delegator is staking.","`rewardAddress` is the address the validator reward goes to, if there is one.","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","`username` is the user that pays the transaction fee.","`password` is `username`‘s password.","`txID` is the transaction ID"]},{"id":"platform.addValidator","endpoint":"/ext/P","description":"Add a validator to the Primary Network. You must stake AVAX to do this. If the node is sufficiently correct and responsive while validating, you receive a reward when they are done validating. The validator’s probability of being sampled by other validators during consensus is in proportion to the amount of AVAX staked.\\n\\nThe validator can charge a fee to delegators; the former receives a percentage of the delegator’s validation reward (if any.) The minimum delegation fee is 2%. A transaction that adds a validator has no fee.\\n\\nThe validation period must be between 2 weeks and 1 year.\\n\\nThere is a maximum total weight imposed on validators. This means that no validator will ever have more AVAX staked and delegated to it than this value. This value will initially be set to `min(5 * amount staked, 3M AVAX)`. The total value on a validator is 3 million AVAX.\\n\\nNote that once you issue the transaction to add a node as a validator, there is no way to change the parameters. **You can’t remove stake early or change the stake amount, node ID, or reward address.** Please make sure you’re using the correct values. If you’re not sure, check out our [Developer FAQ](https://support.avalabs.org/en/collections/2618154-developer-faq) or ask for help on [Discord.](https://chat.avalabs.org/)\\n\\n_Related documentation: [Staking](https://docs.avax.network/learn/platform-overview/staking)_","signature":"platform.addValidator({\\n    nodeID: string,\\n    startTime: int,\\n    endTime: int,\\n    stakeAmount: int,\\n    rewardAddress: string,\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    delegationFeeRate: float,\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string,\\n    changeAddr: string\\n}","formals":{"nodeID":"string","startTime":"int","endTime":"int","stakeAmount":"int","rewardAddress":"string","from":"?[]string","changeAddr":"?string","delegationFeeRate":"float","username":"string","password":"string"},"returns":{"txID":"string","changeAddr":"string"},"example":{"nodeID":"NodeID-ARCLrphAHZ28xZEBfUL7SVAmzkTZNe1LK","rewardAddress":"P-avax1gss39m5sx6jn7wlyzeqzm086yfq2l02xkvmecy","from":["P-avax1gss39m5sx6jn7wlyzeqzm086yfq2l02xkvmecy"],"changeAddr":"P-avax103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u","startTime":"%date","endTime":"%date","stakeAmount":1000000,"delegationFeeRate":10,"username":"username","password":"password"},"notes":["`nodeID` is the node ID of the validator being added.","`startTime` is the Unix time when the validator starts validating the Primary Network.","`endTime` is the Unix time when the validator stops validating the Primary Network (and staked AVAX is returned).","`stakeAmount` is the amount of nAVAX the validator is staking.","`rewardAddress` is the address the validator reward will go to, if there is one.","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","`delegationFeeRate` is the percent fee this validator charges when others delegate stake to them. Up to 4 decimal places allowed; additional decimal places are ignored. Must be between 0 and 100, inclusive. For example, if `delegationFeeRate` is `1.2345` and someone delegates to this validator, then when the delegation period is over, 1.2345% of the reward goes to the validator and the rest goes to the delegator.","`username` is the user that pays the transaction fee.","`password` is `username`‘s password.","`txID` is the transaction ID"]},{"id":"platform.addSubnetValidator","endpoint":"/ext/P","description":"Add a validator to a subnet other than the Primary Network. The Validator must validate the Primary Network for the entire duration they validate this subnet.","signature":"platform.addSubnetValidator({\\n    nodeID: string,\\n    subnetID: string,\\n    startTime: int,\\n    endTime: int,\\n    weight: int,\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string,\\n    changeAddr: string\\n}","formals":{"nodeID":"string","subnetID":"string","startTime":"int","endTime":"int","weight":"int","from":"?[]string","changeAddr":"?string","username":"string","password":"string"},"returns":{"txID":"string","changeAddr":"string"},"example":{"nodeID":"NodeID-7xhw2mdxuds44j42tcb6u5579esbst3lg","subnetID":"zbfoww1ffkpvrfywpj1cvqrfnyesepdfc61hmu2n9jnghduel","startTime":1583524047,"endTime":1604102399,"weight":1,"from":["P-avax1gss39m5sx6jn7wlyzeqzm086yfq2l02xkvmecy"],"changeAddr":"P-avax103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u","username":"username","password":"password"},"notes":["`nodeID` is the node ID of the validator.","`subnetID` is the subnet they will validate.","`startTime` is the unix time when the validator starts validating the subnet.","`endTime` is the unix time when the validator stops validating the subnet.","`weight` is the validator’s weight used for sampling.","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","`username` is the user that pays the transaction fee.","`password` is `username`‘s password.","`txID` is the transaction ID."]},{"id":"platform.createAddress","endpoint":"/ext/bc/P","description":"Create a new address controlled by the given user.","signature":"platform.createAddress({\\n    username: string,\\n    password: string\\n}) -> {\\n    address: string\\n}","formals":{"username":"string","password":"string"},"returns":{"address":"string"},"example":{"username":"myUsername","password":"myPassword"}},{"id":"platform.createBlockchain","endpoint":"/ext/P","description":"Create a new blockchain. Currently only supports the creation of new instances of the AVM and the Timestamp VM.","signature":"platform.createBlockchain({\\n    subnetID: string,\\n    vmID: string,\\n    name: string,\\n    genesisData: string,\\n    encoding: string, (optional)\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string,\\n    changeAddr: string\\n}","formals":{"subnetID":"string","vmID":"string","name":"string","genesisData":"string","encoding":"?string","from":"?[]string","changeAddr":"?string","username":"string","password":"string"},"returns":{"txID":"string","changeAddr":"string"},"example":{"vmID":"timestamp","subnetID":"2bRCr6B4MiEfSjidDwxDpdCyviwnfUVqB2HGwhm947w9YYqb7r","name":"My new timestamp","genesisData":"45oj4CqFViNHUtBxJ55TZfqaVAXFwMRMj2XkHVqUYjJYoTaEM","encoding":"cb58","from":["P-avax1gss39m5sx6jn7wlyzeqzm086yfq2l02xkvmecy"],"changeAddr":"P-avax103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u","username":"username","password":"password"},"notes":["`subnetID` is the ID of the Subnet that validates the new blockchain. The Subnet must exist and can’t be the Primary Network.","`vmID` is the ID of the Virtual Machine the blockchain runs. Can also be an alias of the Virtual Machine.","`name` is a human-readable name for the new blockchain. Not necessarily unique.","`genesisData` is the byte representation of the genesis state of the new blockchain encoded in the format specified by the `encoding` parameter.","`encoding` specifies the format to use for `genesisData`. Can be either “cb58” or “hex”. Defaults to “cb58”. Virtual Machines should have a static API method named `buildGenesis` that can be used to generate `genesisData`","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","`username` is the user that pays the transaction fee. This user must have a sufficient number of the subnet’s control keys.","`password` is `username`‘s password.","`txID` is the transaction ID."]},{"id":"platform.createSubnet","endpoint":"/ext/P","description":"Create a new subnet.\\n\\nThe subnet’s ID is the same as this transaction’s ID.","signature":"platform.createSubnet({\\n    controlKeys: []string,\\n    threshold: int,\\n    from: []string, (optional)\\n    changeAddr: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string,\\n    changeAddr: string\\n}","formals":{"controlKeys":"[]string","threshold":"int","from":"?[]string","changeAddr":"?string","username":"string","password":"string"},"returns":{"txID":"string","changeAddr":"string"},"example":{"controlKeys":["P-avax13xqjvp8r2entvw5m29jxxjhmp3hh6lz8laep9m","P-avax165mp4efnel8rkdeqe5ztggspmw4v40j7pfjlhu"],"threshold":2,"from":["P-avax1gss39m5sx6jn7wlyzeqzm086yfq2l02xkvmecy"],"changeAddr":"P-avax103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u","username":"username","password":"password"},"notes":["In order to add a validator to this subnet, `threshold` signatures are required from the addresses in `controlKeys`","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","`username` is the user that pays the transaction fee.","`password` is `username`‘s password."]},{"id":"platform.exportAVAX","endpoint":"/ext/P","description":"Send AVAX from an address on the P-Chain to an address on the X-Chain. After issuing this transaction, you must call the X-Chain’s [`avm.importAVAX`](exchange-chain-x-chain-api#avm-importavax) method to complete the transfer.","signature":"platform.exportAVAX({\\n    amount: int,\\n    from: []string, (optional)\\n    to: string,\\n    changeAddr: string, (optional)\\n    username: string,\\n    password: string\\n}) -> {\\n    txID: string,\\n    changeAddr: string\\n}","formals":{"amount":"int","from":"?[]string","to":"string","changeAddr":"?string","username":"string","password":"string"},"returns":{"txID":"string","changeAddr":"string"},"example":{"to":"X-avax1yv8cwj9kq3527feemtmh5gkvezna5xys08mxet","amount":1,"from":["P-avax1gss39m5sx6jn7wlyzeqzm086yfq2l02xkvmecy"],"changeAddr":"P-avax103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u","username":"username","password":"password"},"notes":["`amount` is the amount of nAVAX to send.","`to` is the address on the X-Chain to send the AVAX to","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","`username` is the user sending the AVAX and paying the transaction fee.","`password` is `username`‘s password.","`txID` is the ID of this transaction."]},{"id":"platform.exportKey","endpoint":"/ext/P","description":"Get the private key that controls a given address.   The returned private key can be added to a user with [`platform.importKey`](#platform-importkey).","signature":"platform.exportKey({\\n    username: string,\\n    password: string,\\n    address: string\\n}) -> {\\n    privateKey: string\\n}","formals":{"username":"string","password":"string","address":"string"},"returns":{"privateKey":"string"},"example":{"username":"username","password":"password","address":"P-avax1zwp96clwehpwm57r9ftzdm7rnuslrunj68ua3r"},"notes":["`username` is the user that controls `address`.","`password` is `username`‘s password.","`privateKey` is the string representation of the private key that controls `address`."]},{"id":"platform.getBalance","endpoint":"/ext/bc/P","description":"Get the balance of AVAX controlled by a given address.","signature":"platform.getBalance({\\n    address: string\\n}) -> {\\n    balance: string,\\n    unlocked: string,\\n    lockedStakeable: string,\\n    lockedNotStakeable: string,\\n    utxoIDs: []{\\n        txID: string,\\n        outputIndex: int\\n    }\\n}","formals":{"address":"string"},"returns":{"balance":"string","unlocked":"string","lockedStakeable":"string","lockedNotStakeable":"string","utxoIDs":"[]object"},"example":{"address":"P-avax1m8wnvtqvthsxxlrrsu3f43kf9wgch5tyfx4nmf"},"notes":["`address` is the address to get the balance of.","`balance` is the total balance, in nAVAX.","`unlocked` is the unlocked balance, in nAVAX.","`lockedStakeable` is the locked stackeable balance, in nAVAX.","`lockedNotStakeable` is the locked and not stackeable balance, in nAVAX.","`utxoIDs` are the IDs of the UTXOs that reference `address`."]},{"id":"platform.getBlockchains","endpoint":"/ext/P","description":"Get all the blockchains that exist (excluding the P-Chain).","signature":"platform.getBlockchains() -> {\\n    blockchains: []{\\n        id: string,\\n        name: string,\\n        subnetID: string,\\n        vmID: string\\n    }\\n}","returns":{"blockchains":"[]object"},"example":{},"notes":["`blockchains` is all of the blockchains that exists on the Avalanche network.","`name` is the human-readable name of this blockchain.","`id` is the blockchain’s ID.","`subnetID` is the ID of the Subnet that validates this blockchain.","`vmID` is the ID of the Virtual Machine the blockchain runs."]},{"id":"platform.getBlockchainStatus","endpoint":"/ext/P","description":"Get the status of a blockchain.","signature":"platform.getBlockchainStatus({\\n    blockchainID: string\\n}) -> {\\n    status: string\\n}","formals":{"blockchainID":"string"},"returns":{"status":"string"},"example":{"blockchainID":"2NbS4dwGaf2p1MaXb65PrkZdXRwmSX4ZzGnUu7jm3aykgThuZE"},"notes":["`Validating`: The blockchain is being validated by this node.","`Created`: The blockchain exists but isn’t being validated by this node.","`Preferred`: The blockchain was proposed to be created and is likely to be created but the transaction isn’t yet accepted.","`Unknown`: The blockchain either wasn’t proposed or the proposal to create it isn’t preferred. The proposal may be resubmitted."]},{"id":"platform.getCurrentSupply","endpoint":"/ext/P","description":"Returns an upper bound on the number of AVAX that exist. This is an upper bound because it does not account for burnt tokens, including transaction fees.","signature":"platform.getCurrentSupply() -> {\\n    supply: int\\n}","returns":{"supply":"int"},"example":{},"notes":["`supply` is an upper bound on the number of AVAX that exist, denominated in nAVAX."]},{"id":"platform.getCurrentValidators","endpoint":"/ext/P","description":"List the current validators of the given Subnet.\\n\\nThe top level field `delegators` is deprecated as of v1.0.1. If you are using it, you should stop using it. Instead, each element of `validators` now contains the list of delegators for that validator. You should get information about delegators this way going forward.","signature":"platform.getCurrentValidators({\\n    subnetID: string (optional)\\n}) -> {\\n    validators: []{\\n        startTime: string,\\n        endTime: string,\\n        stakeAmount: string, (optional)\\n        nodeID: string,\\n        weight: string, (optional)\\n        rewardOwner: {\\n            locktime: string,\\n            threshold: string,\\n            addresses: string[]\\n        },\\n        potentialReward: string,\\n        delegationFee: string,\\n        uptime: string,\\n        connected: bool,\\n        delegators: []{\\n            startTime: string,\\n            endTime: string,\\n            stakeAmount: string, (optional)\\n            nodeID: string,\\n            rewardOwner: {\\n                locktime: string,\\n                threshold: string,\\n                addresses: string[]\\n            },\\n            potentialReward: string\\n        }\\n    },\\n    delegators: []{\\n        startTime: string,\\n        endTime: string,\\n        stakeAmount: string, (optional)\\n        nodeID: string,\\n        rewardOwner: {\\n            locktime: string,\\n            threshold: string,\\n            addresses: string[]\\n        },\\n        potentialReward: string\\n    }\\n}","formals":{"subnetID":"?string"},"example":{},"notes":["`subnetID` is the subnet whose current validators are returned. If omitted, returns the current validators of the Primary Network.","`validators`:","`startTime` is the Unix time when the validator starts validating the Subnet.","`endTime` is the Unix time when the validator stops validating the Subnet.","`stakeAmount` is the amount of nAVAX this validator staked. Omitted if `subnetID` is not the Primary Network.","`nodeID` is the validator’s node ID.","`weight` is the validator’s weight when sampling validators. Omitted if `subnetID` is the Primary Network.","`rewardOwner` is an `OutputOwners` output which includes `locktime`, `threshold` and array of `addresses`.","`potentialReward` is the potential reward earned from staking","`delegationFeeRate` is the percent fee this validator charges when others delegate stake to them.","`uptime` is the % of time the queried node has reported the peer as online.","`connected` is if the node is connected to the network","`delegators` is the list of delegators to this validator.","`delegators`: (**deprecated as of v1.0.1. See note at top of method documentation.**)","`startTime` is the Unix time when the delegator started.","`endTime` is the Unix time when the delegator stops.","`stakeAmount` is the amount of nAVAX this delegator staked. Omitted if `subnetID` is not the Primary Network.","`nodeID` is the validating node’s node ID.","`rewardOwner` is an `OutputOwners` output which includes `locktime`, `threshold` and array of `addresses`.","`potentialReward` is the potential reward earned from staking"]},{"id":"platform.getHeight","endpoint":"/ext/P","description":"Returns the height of the last accepted block.","signature":"platform.getHeight() -> {\\n    height: int\\n}","returns":{"height":"int"},"example":{}},{"id":"platform.getMinStake","endpoint":"/ext/P","description":"Get the minimum amount of AVAX required to validate the Primary Network and the minimum amount of AVAX that can be delegated.","signature":"platform.getMinStake() -> {\\n    minValidatorStake : uint64,\\n    minDelegatorStake : uint64\\n}","returns":{"minValidatorStake":"uint64","minDelegatorStake":"uint64"}},{"id":"platform.getPendingValidators","endpoint":"/ext/P","description":"List the validators in the pending validator set of the specified Subnet. Each validator is not currently validating the Subnet but will in the future.","signature":"platform.getPendingValidators({\\n    subnetID: string (optional)\\n}) -> {\\n    validators: []{\\n        startTime: string,\\n        endTime: string,\\n        stakeAmount: string, (optional)\\n        nodeID: string,\\n        delegationFee: string,\\n        connected: bool,\\n        weight: string (optional)\\n    },\\n    delegators: []{\\n        startTime: string,\\n        endTime: string,\\n        stakeAmount: string,\\n        nodeID: string\\n    }\\n}","formals":{"subnetID":"?string"},"returns":{"validators":"[]object","delegators":"[]object"},"example":{},"notes":["`subnetID` is the subnet whose current validators are returned. If omitted, returns the current validators of the Primary Network.","`validators`:","`startTime` is the Unix time when the validator starts validating the Subnet.","`endTime` is the Unix time when the validator stops validating the Subnet.","`stakeAmount` is the amount of nAVAX this validator staked. Omitted if `subnetID` is not the Primary Network.","`nodeID` is the validator’s node ID.","`connected` if the node is connected.","`weight` is the validator’s weight when sampling validators. Omitted if `subnetID` is the Primary Network.","`delegators`:","`startTime` is the Unix time when the delegator starts.","`endTime` is the Unix time when the delegator stops.","`stakeAmount` is the amount of nAVAX this delegator staked. Omitted if `subnetID` is not the Primary Network.","`nodeID` is the validating node’s node ID."]},{"id":"platform.getStakingAssetID","endpoint":"/ext/P","description":"Retrieve an assetID for a subnet’s staking asset. Currently, this always returns the Primary Network’s staking assetID.","signature":"platform.getStakingAssetID() -> {\\n    assetID: string\\n}","returns":{"assetID":"string"},"example":{}},{"id":"platform.getSubnets","endpoint":"/ext/P","description":"Get all the Subnets that exist.","signature":"platform.getSubnets({\\n    ids: []string\\n}) -> {\\n    subnets: []{\\n        id: string,\\n        controlKeys: []string,\\n        threshold: string\\n    }\\n}","formals":{"ids":"[]string"},"returns":{"subnets":"[]object"},"example":{"ids":["hW8Ma7dLMA7o4xmJf3AXBbo17bXzE7xnThUd3ypM4VAWo1sNJ"]}},{"id":"platform.getStake","endpoint":"/ext/P","description":"Get the amount of nAVAX staked by a set of addresses. The amount returned does not include staking rewards.","signature":"platform.getStake({\\n    addresses: []string\\n}) -> {\\n    stake: int\\n}","formals":{"addresses":"[]string"},"returns":{"stake":"int"},"example":{"addresses":["P-everest1g3ea9z5kmkzwnxp8vr8rpjh6lqw4r0ufec460d","P-everest12un03rm579fewele99c4v53qnmymwu46dv3s5v"]}},{"id":"platform.getTotalStake","endpoint":"/ext/P","description":"Get the total amount of nAVAX staked on the Primary Network.","signature":"platform.getTotalStake() -> {\\n    stake: int\\n}","returns":{"stake":"int"},"example":{}},{"id":"platform.getTx","endpoint":"/ext/P","description":"Gets a transaction by its ID.\\n\\nOptional `encoding` parameter to specify the format for the returned transaction. Can be either “cb58” or “hex”. Defaults to “cb58”.","signature":"platform.getTx({\\n    txID: string,\\n    encoding: string (optional)\\n}) -> {\\n    tx: string,\\n    encoding: string\\n})","formals":{"txID":"string","encoding":"?string"},"returns":{"tx":"string","encoding":"string"},"example":{"txID":"TAG9Ns1sa723mZy1GSoGqWipK6Mvpaj7CAswVJGM6MkVJDF9Q","encoding":"cb58"}},{"id":"platform.getTxStatus","endpoint":"/ext/P","description":"Gets a transaction’s status by its ID.","signature":"platform.getTxStatus({\\n    txID: string\\n}) -> {\\n    status: string\\n}","formals":{"txID":"string"},"returns":{"status":"string"},"example":{"txID":"TAG9Ns1sa723mZy1GSoGqWipK6Mvpaj7CAswVJGM6MkVJDF9Q"}},{"id":"platform.getUTXOs","endpoint":"/ext/bc/P","description":"Gets the UTXOs that reference a given set of addresses.","signature":"platform.getUTXOs({\\n    addresses: string,\\n    limit: int, (optional)\\n    startIndex: { (optional)\\n        address: string,\\n        utxo: string\\n    },\\n    sourceChain: string, (optional)\\n    encoding: string (optional)\\n}) -> {\\n    numFetched: int,\\n    utxos: []string,\\n    endIndex: {\\n        address: string,\\n        utxo: string\\n    },\\n    encoding: string\\n}","formals":{"addresses":"string","limit":"?int","startIndex":"?object","sourceChain":"?string","encoding":"?string"},"returns":{"numFetched":"int","utxos":"[]string","endIndex":"object","encoding":"string"},"example":{"addresses":["P-avax1s994jad0rtwvlfpkpyg2yau9nxt60qqfv023qx","P-avax1fquvrjkj7ma5srtayfvx7kncu7um3ym73ztydr"],"limit":5,"encoding":"cb58"},"notes":["`utxos` is a list of UTXOs such that each UTXO references at least one address in `addresses`.","At most `limit` UTXOs are returned. If `limit` is omitted or greater than 1024, it is set to 1024.","This method supports pagination. `endIndex` denotes the last UTXO returned. To get the next set of UTXOs, use the value of `endIndex` as `startIndex` in the next call.","If `startIndex` is omitted, will fetch all UTXOs up to `limit`.","When using pagination (ie when `startIndex` is provided), UTXOs are not guaranteed to be unique across multiple calls. That is, a UTXO may appear in the result of the first call, and then again in the second call.","When using pagination, consistency is not guaranteed across multiple calls. That is, the UTXO set of the addresses may have changed between calls.","`encoding` specifies the format for the returned UTXOs. Can be either “cb58” or “hex” and defaults to “cb58”."]},{"id":"platform.importAVAX","endpoint":"/ext/P","description":"Complete a transfer of AVAX from the X-Chain to the P-Chain.\\n\\nBefore this method is called, you must call the X-Chain’s [`avm.exportAVAX`](exchange-chain-x-chain-api#avm-exportavax) method to initiate the transfer.","signature":"platform.importAVAX({\\n    from: []string, (optional)\\n    to: string,\\n    changeAddr: string, (optional)\\n    sourceChain: string,\\n    username: string,\\n    password: string\\n}) -> {\\n    tx: string,\\n    changeAddr: string\\n}","formals":{"from":"?[]string","to":"string","changeAddr":"?string","sourceChain":"string","username":"string","password":"string"},"returns":{"tx":"string","changeAddr":"string"},"example":{"sourceChain":"X","to":"P-avax1apzq2zt0uaaatum3wdz83u4z7dv4st7l5m5n2a","from":["P-avax1gss39m5sx6jn7wlyzeqzm086yfq2l02xkvmecy"],"changeAddr":"P-avax103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u","username":"bob","password":"loblaw"},"notes":["`to` is the ID of the address the AVAX is imported to. This must be the same as the `to` argument in the corresponding call to the X-Chain’s `exportAVAX`.","`sourceChain` is the ID or alias of the chain the AVAX is being imported from. To import funds from the X-Chain, use `\\"X\\"`.","`from` are the addresses that you want to use for this operation. If omitted, uses any of your addresses as needed.","`changeAddr` is the address any change will be sent to. If omitted, change is sent to one of the addresses controlled by the user.","`username` is the user that controls the address specified in `to`.","`password` is `username`‘s password."]},{"id":"platform.importKey","endpoint":"/ext/P","description":"Give a user control over an address by providing the private key that controls the address.","signature":"platform.importKey({\\n    username: string,\\n    password: string,\\n    privateKey: string\\n}) -> {\\n    address: string\\n}","formals":{"username":"string","password":"string","privateKey":"string"},"returns":{"address":"string"},"example":{"username":"bob","password":"loblaw","privateKey":"PrivateKey-2w4XiXxPfQK4TypYqnohRL8DRNTz9cGiGmwQ1zmgEqD9c9KWLq"},"notes":["Add `privateKey` to `username`‘s set of private keys. `address` is the address `username` now controls with the private key."]},{"id":"platform.issueTx","endpoint":"/ext/P","description":"Issue a transaction to the Platform Chain.","signature":"platform.issueTx({\\n    tx: string,\\n    encoding: string (optional)\\n}) -> {\\n    txID: string\\n}","formals":{"tx":"string","encoding":"?string"},"returns":{"txID":"string"},"example":{"tx":"111Bit5JNASbJyTLrd2kWkYRoc96swEWoWdmEhuGAFK3rCAyTnTzomuFwgx1SCUdUE71KbtXPnqj93KGr3CeftpPN37kVyqBaAQ5xaDjr7wVBTUYi9iV7kYJnHF61yovViJF74mJJy7WWQKeRMDRTiPuii5gsd11gtNahCCsKbm9seJtk2h1wAPZn9M1eL84CGVPnLUiLP","encoding":"cb58"},"notes":["`tx` is the byte representation of a transaction.","`encoding` specifies the encoding format for the transaction bytes. Can be either “cb58” or “hex”. Defaults to “cb58”.","`txID` is the transaction’s ID."]},{"id":"platform.listAddresses","endpoint":"/ext/bc/P","description":"List addresses controlled by the given user.","signature":"platform.listAddresses({\\n    username: string,\\n    password: string\\n}) -> {\\n    addresses: []string\\n}","formals":{"username":"string","password":"string"},"returns":{"addresses":"[]string"},"example":{"username":"myUsername","password":"myPassword"}},{"id":"platform.sampleValidators","endpoint":"/ext/P","description":"Sample validators from the specified Subnet.","signature":"platform.sampleValidators({\\n    size: int,\\n    subnetID: string (optional)\\n}) -> {\\n    validators: [size]string\\n}","formals":{"size":"int","subnetID":"?string"},"returns":{"validators":"[]string"},"example":{"size":2},"notes":["`size` is the number of validators to sample.","`subnetID` is the Subnet to sampled from. If omitted, defaults to the Primary Network.","Each element of `validators` is the ID of a validator."]},{"id":"platform.validatedBy","endpoint":"/ext/P","description":"Get the Subnet that validates a given blockchain.","signature":"platform.validatedBy({\\n    blockchainID: string\\n}) -> {\\n    subnetID: string\\n}","formals":{"blockchainID":"string"},"returns":{"subnetID":"string"},"example":{"blockchainID":"KDYHHKjM4yTJTT8H8qPs5KXzE6gQH5TZrmP1qVr1P6qECj3XN"},"notes":["`blockchainID` is the blockchain’s ID.","`subnetID` is the ID of the Subnet that validates the blockchain."]},{"id":"platform.validates","endpoint":"/ext/P","description":"Get the IDs of the blockchains a Subnet validates.","signature":"platform.validates({\\n    subnetID: string\\n}) -> {\\n    blockchainIDs: []string\\n}","formals":{"subnetID":"string"},"returns":{"blockchainIDs":"[]string"},"example":{"subnetID":"2bRCr6B4MiEfSjidDwxDpdCyviwnfUVqB2HGwhm947w9YYqb7r"},"notes":["`subnetID` is the Subnet’s ID.","Each element of `blockchainIDs` is the ID of a blockchain the Subnet validates."]}]}')},function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-up"><line x1="12" y1="19" x2="12" y2="5"></line><polyline points="5 12 12 5 19 12"></polyline></svg>'}]);
//# sourceMappingURL=index.js.map